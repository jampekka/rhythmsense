{
  "version": 3,
  "sources": ["../node_modules/plotly.js-dist/home/solarch/plotly/webgl/plotly.js/node_modules/regl-splom/index.js", "../node_modules/d3-array/src/ascending.js", "../node_modules/d3-array/src/descending.js", "../node_modules/d3-array/src/bisector.js", "../node_modules/d3-array/src/number.js", "../node_modules/d3-array/src/bisect.js", "../node_modules/d3-array/src/blur.js", "../node_modules/d3-array/src/count.js", "../node_modules/d3-array/src/cross.js", "../node_modules/d3-array/src/cumsum.js", "../node_modules/d3-array/src/variance.js", "../node_modules/d3-array/src/deviation.js", "../node_modules/d3-array/src/extent.js", "../node_modules/d3-array/src/fsum.js", "../node_modules/internmap/src/index.js", "../node_modules/d3-array/src/identity.js", "../node_modules/d3-array/src/group.js", "../node_modules/d3-array/src/permute.js", "../node_modules/d3-array/src/sort.js", "../node_modules/d3-array/src/groupSort.js", "../node_modules/d3-array/src/array.js", "../node_modules/d3-array/src/constant.js", "../node_modules/d3-array/src/ticks.js", "../node_modules/d3-array/src/nice.js", "../node_modules/d3-array/src/threshold/sturges.js", "../node_modules/d3-array/src/bin.js", "../node_modules/d3-array/src/max.js", "../node_modules/d3-array/src/maxIndex.js", "../node_modules/d3-array/src/min.js", "../node_modules/d3-array/src/minIndex.js", "../node_modules/d3-array/src/quickselect.js", "../node_modules/d3-array/src/greatest.js", "../node_modules/d3-array/src/quantile.js", "../node_modules/d3-array/src/threshold/freedmanDiaconis.js", "../node_modules/d3-array/src/threshold/scott.js", "../node_modules/d3-array/src/mean.js", "../node_modules/d3-array/src/median.js", "../node_modules/d3-array/src/merge.js", "../node_modules/d3-array/src/mode.js", "../node_modules/d3-array/src/pairs.js", "../node_modules/d3-array/src/range.js", "../node_modules/d3-array/src/rank.js", "../node_modules/d3-array/src/least.js", "../node_modules/d3-array/src/leastIndex.js", "../node_modules/d3-array/src/greatestIndex.js", "../node_modules/d3-array/src/scan.js", "../node_modules/d3-array/src/shuffle.js", "../node_modules/d3-array/src/sum.js", "../node_modules/d3-array/src/transpose.js", "../node_modules/d3-array/src/zip.js", "../node_modules/d3-array/src/every.js", "../node_modules/d3-array/src/some.js", "../node_modules/d3-array/src/filter.js", "../node_modules/d3-array/src/map.js", "../node_modules/d3-array/src/reduce.js", "../node_modules/d3-array/src/reverse.js", "../node_modules/d3-array/src/difference.js", "../node_modules/d3-array/src/disjoint.js", "../node_modules/d3-array/src/intersection.js", "../node_modules/d3-array/src/superset.js", "../node_modules/d3-array/src/subset.js", "../node_modules/d3-array/src/union.js", "../node_modules/d3-array/src/index.js", "../node_modules/d3-axis/src/identity.js", "../node_modules/d3-axis/src/axis.js", "../node_modules/d3-axis/src/index.js", "../node_modules/d3-dispatch/src/dispatch.js", "../node_modules/d3-dispatch/src/index.js", "../node_modules/d3-selection/src/namespaces.js", "../node_modules/d3-selection/src/namespace.js", "../node_modules/d3-selection/src/creator.js", "../node_modules/d3-selection/src/selector.js", "../node_modules/d3-selection/src/selection/select.js", "../node_modules/d3-selection/src/array.js", "../node_modules/d3-selection/src/selectorAll.js", "../node_modules/d3-selection/src/selection/selectAll.js", "../node_modules/d3-selection/src/matcher.js", "../node_modules/d3-selection/src/selection/selectChild.js", "../node_modules/d3-selection/src/selection/selectChildren.js", "../node_modules/d3-selection/src/selection/filter.js", "../node_modules/d3-selection/src/selection/sparse.js", "../node_modules/d3-selection/src/selection/enter.js", "../node_modules/d3-selection/src/constant.js", "../node_modules/d3-selection/src/selection/data.js", "../node_modules/d3-selection/src/selection/exit.js", "../node_modules/d3-selection/src/selection/join.js", "../node_modules/d3-selection/src/selection/merge.js", "../node_modules/d3-selection/src/selection/order.js", "../node_modules/d3-selection/src/selection/sort.js", "../node_modules/d3-selection/src/selection/call.js", "../node_modules/d3-selection/src/selection/nodes.js", "../node_modules/d3-selection/src/selection/node.js", "../node_modules/d3-selection/src/selection/size.js", "../node_modules/d3-selection/src/selection/empty.js", "../node_modules/d3-selection/src/selection/each.js", "../node_modules/d3-selection/src/selection/attr.js", "../node_modules/d3-selection/src/window.js", "../node_modules/d3-selection/src/selection/style.js", "../node_modules/d3-selection/src/selection/property.js", "../node_modules/d3-selection/src/selection/classed.js", "../node_modules/d3-selection/src/selection/text.js", "../node_modules/d3-selection/src/selection/html.js", "../node_modules/d3-selection/src/selection/raise.js", "../node_modules/d3-selection/src/selection/lower.js", "../node_modules/d3-selection/src/selection/append.js", "../node_modules/d3-selection/src/selection/insert.js", "../node_modules/d3-selection/src/selection/remove.js", "../node_modules/d3-selection/src/selection/clone.js", "../node_modules/d3-selection/src/selection/datum.js", "../node_modules/d3-selection/src/selection/on.js", "../node_modules/d3-selection/src/selection/dispatch.js", "../node_modules/d3-selection/src/selection/iterator.js", "../node_modules/d3-selection/src/selection/index.js", "../node_modules/d3-selection/src/select.js", "../node_modules/d3-selection/src/create.js", "../node_modules/d3-selection/src/local.js", "../node_modules/d3-selection/src/sourceEvent.js", "../node_modules/d3-selection/src/pointer.js", "../node_modules/d3-selection/src/pointers.js", "../node_modules/d3-selection/src/selectAll.js", "../node_modules/d3-selection/src/index.js", "../node_modules/d3-drag/src/noevent.js", "../node_modules/d3-drag/src/nodrag.js", "../node_modules/d3-drag/src/constant.js", "../node_modules/d3-drag/src/event.js", "../node_modules/d3-drag/src/drag.js", "../node_modules/d3-drag/src/index.js", "../node_modules/d3-color/src/define.js", "../node_modules/d3-color/src/color.js", "../node_modules/d3-color/src/math.js", "../node_modules/d3-color/src/lab.js", "../node_modules/d3-color/src/cubehelix.js", "../node_modules/d3-color/src/index.js", "../node_modules/d3-interpolate/src/basis.js", "../node_modules/d3-interpolate/src/basisClosed.js", "../node_modules/d3-interpolate/src/constant.js", "../node_modules/d3-interpolate/src/color.js", "../node_modules/d3-interpolate/src/rgb.js", "../node_modules/d3-interpolate/src/numberArray.js", "../node_modules/d3-interpolate/src/array.js", "../node_modules/d3-interpolate/src/date.js", "../node_modules/d3-interpolate/src/number.js", "../node_modules/d3-interpolate/src/object.js", "../node_modules/d3-interpolate/src/string.js", "../node_modules/d3-interpolate/src/value.js", "../node_modules/d3-interpolate/src/discrete.js", "../node_modules/d3-interpolate/src/hue.js", "../node_modules/d3-interpolate/src/round.js", "../node_modules/d3-interpolate/src/transform/decompose.js", "../node_modules/d3-interpolate/src/transform/parse.js", "../node_modules/d3-interpolate/src/transform/index.js", "../node_modules/d3-interpolate/src/zoom.js", "../node_modules/d3-interpolate/src/hsl.js", "../node_modules/d3-interpolate/src/lab.js", "../node_modules/d3-interpolate/src/hcl.js", "../node_modules/d3-interpolate/src/cubehelix.js", "../node_modules/d3-interpolate/src/piecewise.js", "../node_modules/d3-interpolate/src/quantize.js", "../node_modules/d3-interpolate/src/index.js", "../node_modules/d3-timer/src/timer.js", "../node_modules/d3-timer/src/timeout.js", "../node_modules/d3-timer/src/interval.js", "../node_modules/d3-timer/src/index.js", "../node_modules/d3-transition/src/transition/schedule.js", "../node_modules/d3-transition/src/interrupt.js", "../node_modules/d3-transition/src/selection/interrupt.js", "../node_modules/d3-transition/src/transition/tween.js", "../node_modules/d3-transition/src/transition/interpolate.js", "../node_modules/d3-transition/src/transition/attr.js", "../node_modules/d3-transition/src/transition/attrTween.js", "../node_modules/d3-transition/src/transition/delay.js", "../node_modules/d3-transition/src/transition/duration.js", "../node_modules/d3-transition/src/transition/ease.js", "../node_modules/d3-transition/src/transition/easeVarying.js", "../node_modules/d3-transition/src/transition/filter.js", "../node_modules/d3-transition/src/transition/merge.js", "../node_modules/d3-transition/src/transition/on.js", "../node_modules/d3-transition/src/transition/remove.js", "../node_modules/d3-transition/src/transition/select.js", "../node_modules/d3-transition/src/transition/selectAll.js", "../node_modules/d3-transition/src/transition/selection.js", "../node_modules/d3-transition/src/transition/style.js", "../node_modules/d3-transition/src/transition/styleTween.js", "../node_modules/d3-transition/src/transition/text.js", "../node_modules/d3-transition/src/transition/textTween.js", "../node_modules/d3-transition/src/transition/transition.js", "../node_modules/d3-transition/src/transition/end.js", "../node_modules/d3-transition/src/transition/index.js", "../node_modules/d3-ease/src/linear.js", "../node_modules/d3-ease/src/quad.js", "../node_modules/d3-ease/src/cubic.js", "../node_modules/d3-ease/src/poly.js", "../node_modules/d3-ease/src/sin.js", "../node_modules/d3-ease/src/math.js", "../node_modules/d3-ease/src/exp.js", "../node_modules/d3-ease/src/circle.js", "../node_modules/d3-ease/src/bounce.js", "../node_modules/d3-ease/src/back.js", "../node_modules/d3-ease/src/elastic.js", "../node_modules/d3-ease/src/index.js", "../node_modules/d3-transition/src/selection/transition.js", "../node_modules/d3-transition/src/selection/index.js", "../node_modules/d3-transition/src/active.js", "../node_modules/d3-transition/src/index.js", "../node_modules/d3-brush/src/constant.js", "../node_modules/d3-brush/src/event.js", "../node_modules/d3-brush/src/noevent.js", "../node_modules/d3-brush/src/brush.js", "../node_modules/d3-brush/src/index.js", "../node_modules/d3-chord/src/math.js", "../node_modules/d3-chord/src/chord.js", "../node_modules/d3-path/src/path.js", "../node_modules/d3-path/src/index.js", "../node_modules/d3-chord/src/array.js", "../node_modules/d3-chord/src/constant.js", "../node_modules/d3-chord/src/ribbon.js", "../node_modules/d3-chord/src/index.js", "../node_modules/d3-contour/src/array.js", "../node_modules/d3-contour/src/ascending.js", "../node_modules/d3-contour/src/area.js", "../node_modules/d3-contour/src/constant.js", "../node_modules/d3-contour/src/contains.js", "../node_modules/d3-contour/src/noop.js", "../node_modules/d3-contour/src/contours.js", "../node_modules/d3-contour/src/density.js", "../node_modules/d3-contour/src/index.js", "../node_modules/robust-predicates/esm/util.js", "../node_modules/robust-predicates/esm/orient2d.js", "../node_modules/robust-predicates/esm/orient3d.js", "../node_modules/robust-predicates/esm/incircle.js", "../node_modules/robust-predicates/esm/insphere.js", "../node_modules/robust-predicates/index.js", "../node_modules/delaunator/index.js", "../node_modules/d3-delaunay/src/path.js", "../node_modules/d3-delaunay/src/polygon.js", "../node_modules/d3-delaunay/src/voronoi.js", "../node_modules/d3-delaunay/src/delaunay.js", "../node_modules/d3-delaunay/src/index.js", "../node_modules/d3-dsv/src/dsv.js", "../node_modules/d3-dsv/src/csv.js", "../node_modules/d3-dsv/src/tsv.js", "../node_modules/d3-dsv/src/autoType.js", "../node_modules/d3-dsv/src/index.js", "../node_modules/d3-fetch/src/blob.js", "../node_modules/d3-fetch/src/buffer.js", "../node_modules/d3-fetch/src/text.js", "../node_modules/d3-fetch/src/dsv.js", "../node_modules/d3-fetch/src/image.js", "../node_modules/d3-fetch/src/json.js", "../node_modules/d3-fetch/src/xml.js", "../node_modules/d3-fetch/src/index.js", "../node_modules/d3-force/src/center.js", "../node_modules/d3-quadtree/src/add.js", "../node_modules/d3-quadtree/src/cover.js", "../node_modules/d3-quadtree/src/data.js", "../node_modules/d3-quadtree/src/extent.js", "../node_modules/d3-quadtree/src/quad.js", "../node_modules/d3-quadtree/src/find.js", "../node_modules/d3-quadtree/src/remove.js", "../node_modules/d3-quadtree/src/root.js", "../node_modules/d3-quadtree/src/size.js", "../node_modules/d3-quadtree/src/visit.js", "../node_modules/d3-quadtree/src/visitAfter.js", "../node_modules/d3-quadtree/src/x.js", "../node_modules/d3-quadtree/src/y.js", "../node_modules/d3-quadtree/src/quadtree.js", "../node_modules/d3-quadtree/src/index.js", "../node_modules/d3-force/src/constant.js", "../node_modules/d3-force/src/jiggle.js", "../node_modules/d3-force/src/collide.js", "../node_modules/d3-force/src/link.js", "../node_modules/d3-force/src/lcg.js", "../node_modules/d3-force/src/simulation.js", "../node_modules/d3-force/src/manyBody.js", "../node_modules/d3-force/src/radial.js", "../node_modules/d3-force/src/x.js", "../node_modules/d3-force/src/y.js", "../node_modules/d3-force/src/index.js", "../node_modules/d3-format/src/formatDecimal.js", "../node_modules/d3-format/src/exponent.js", "../node_modules/d3-format/src/formatGroup.js", "../node_modules/d3-format/src/formatNumerals.js", "../node_modules/d3-format/src/formatSpecifier.js", "../node_modules/d3-format/src/formatTrim.js", "../node_modules/d3-format/src/formatPrefixAuto.js", "../node_modules/d3-format/src/formatRounded.js", "../node_modules/d3-format/src/formatTypes.js", "../node_modules/d3-format/src/identity.js", "../node_modules/d3-format/src/locale.js", "../node_modules/d3-format/src/defaultLocale.js", "../node_modules/d3-format/src/precisionFixed.js", "../node_modules/d3-format/src/precisionPrefix.js", "../node_modules/d3-format/src/precisionRound.js", "../node_modules/d3-format/src/index.js", "../node_modules/d3-geo/src/math.js", "../node_modules/d3-geo/src/noop.js", "../node_modules/d3-geo/src/stream.js", "../node_modules/d3-geo/src/area.js", "../node_modules/d3-geo/src/cartesian.js", "../node_modules/d3-geo/src/bounds.js", "../node_modules/d3-geo/src/centroid.js", "../node_modules/d3-geo/src/constant.js", "../node_modules/d3-geo/src/compose.js", "../node_modules/d3-geo/src/rotation.js", "../node_modules/d3-geo/src/circle.js", "../node_modules/d3-geo/src/clip/buffer.js", "../node_modules/d3-geo/src/pointEqual.js", "../node_modules/d3-geo/src/clip/rejoin.js", "../node_modules/d3-geo/src/polygonContains.js", "../node_modules/d3-geo/src/clip/index.js", "../node_modules/d3-geo/src/clip/antimeridian.js", "../node_modules/d3-geo/src/clip/circle.js", "../node_modules/d3-geo/src/clip/line.js", "../node_modules/d3-geo/src/clip/rectangle.js", "../node_modules/d3-geo/src/clip/extent.js", "../node_modules/d3-geo/src/length.js", "../node_modules/d3-geo/src/distance.js", "../node_modules/d3-geo/src/contains.js", "../node_modules/d3-geo/src/graticule.js", "../node_modules/d3-geo/src/interpolate.js", "../node_modules/d3-geo/src/identity.js", "../node_modules/d3-geo/src/path/area.js", "../node_modules/d3-geo/src/path/bounds.js", "../node_modules/d3-geo/src/path/centroid.js", "../node_modules/d3-geo/src/path/context.js", "../node_modules/d3-geo/src/path/measure.js", "../node_modules/d3-geo/src/path/string.js", "../node_modules/d3-geo/src/path/index.js", "../node_modules/d3-geo/src/transform.js", "../node_modules/d3-geo/src/projection/fit.js", "../node_modules/d3-geo/src/projection/resample.js", "../node_modules/d3-geo/src/projection/index.js", "../node_modules/d3-geo/src/projection/conic.js", "../node_modules/d3-geo/src/projection/cylindricalEqualArea.js", "../node_modules/d3-geo/src/projection/conicEqualArea.js", "../node_modules/d3-geo/src/projection/albers.js", "../node_modules/d3-geo/src/projection/albersUsa.js", "../node_modules/d3-geo/src/projection/azimuthal.js", "../node_modules/d3-geo/src/projection/azimuthalEqualArea.js", "../node_modules/d3-geo/src/projection/azimuthalEquidistant.js", "../node_modules/d3-geo/src/projection/mercator.js", "../node_modules/d3-geo/src/projection/conicConformal.js", "../node_modules/d3-geo/src/projection/equirectangular.js", "../node_modules/d3-geo/src/projection/conicEquidistant.js", "../node_modules/d3-geo/src/projection/equalEarth.js", "../node_modules/d3-geo/src/projection/gnomonic.js", "../node_modules/d3-geo/src/projection/identity.js", "../node_modules/d3-geo/src/projection/naturalEarth1.js", "../node_modules/d3-geo/src/projection/orthographic.js", "../node_modules/d3-geo/src/projection/stereographic.js", "../node_modules/d3-geo/src/projection/transverseMercator.js", "../node_modules/d3-geo/src/index.js", "../node_modules/d3-hierarchy/src/cluster.js", "../node_modules/d3-hierarchy/src/hierarchy/count.js", "../node_modules/d3-hierarchy/src/hierarchy/each.js", "../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js", "../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js", "../node_modules/d3-hierarchy/src/hierarchy/find.js", "../node_modules/d3-hierarchy/src/hierarchy/sum.js", "../node_modules/d3-hierarchy/src/hierarchy/sort.js", "../node_modules/d3-hierarchy/src/hierarchy/path.js", "../node_modules/d3-hierarchy/src/hierarchy/ancestors.js", "../node_modules/d3-hierarchy/src/hierarchy/descendants.js", "../node_modules/d3-hierarchy/src/hierarchy/leaves.js", "../node_modules/d3-hierarchy/src/hierarchy/links.js", "../node_modules/d3-hierarchy/src/hierarchy/iterator.js", "../node_modules/d3-hierarchy/src/hierarchy/index.js", "../node_modules/d3-hierarchy/src/accessors.js", "../node_modules/d3-hierarchy/src/constant.js", "../node_modules/d3-hierarchy/src/lcg.js", "../node_modules/d3-hierarchy/src/array.js", "../node_modules/d3-hierarchy/src/pack/enclose.js", "../node_modules/d3-hierarchy/src/pack/siblings.js", "../node_modules/d3-hierarchy/src/pack/index.js", "../node_modules/d3-hierarchy/src/treemap/round.js", "../node_modules/d3-hierarchy/src/treemap/dice.js", "../node_modules/d3-hierarchy/src/partition.js", "../node_modules/d3-hierarchy/src/stratify.js", "../node_modules/d3-hierarchy/src/tree.js", "../node_modules/d3-hierarchy/src/treemap/slice.js", "../node_modules/d3-hierarchy/src/treemap/squarify.js", "../node_modules/d3-hierarchy/src/treemap/index.js", "../node_modules/d3-hierarchy/src/treemap/binary.js", "../node_modules/d3-hierarchy/src/treemap/sliceDice.js", "../node_modules/d3-hierarchy/src/treemap/resquarify.js", "../node_modules/d3-hierarchy/src/index.js", "../node_modules/d3-polygon/src/area.js", "../node_modules/d3-polygon/src/centroid.js", "../node_modules/d3-polygon/src/cross.js", "../node_modules/d3-polygon/src/hull.js", "../node_modules/d3-polygon/src/contains.js", "../node_modules/d3-polygon/src/length.js", "../node_modules/d3-polygon/src/index.js", "../node_modules/d3-random/src/defaultSource.js", "../node_modules/d3-random/src/uniform.js", "../node_modules/d3-random/src/int.js", "../node_modules/d3-random/src/normal.js", "../node_modules/d3-random/src/logNormal.js", "../node_modules/d3-random/src/irwinHall.js", "../node_modules/d3-random/src/bates.js", "../node_modules/d3-random/src/exponential.js", "../node_modules/d3-random/src/pareto.js", "../node_modules/d3-random/src/bernoulli.js", "../node_modules/d3-random/src/geometric.js", "../node_modules/d3-random/src/gamma.js", "../node_modules/d3-random/src/beta.js", "../node_modules/d3-random/src/binomial.js", "../node_modules/d3-random/src/weibull.js", "../node_modules/d3-random/src/cauchy.js", "../node_modules/d3-random/src/logistic.js", "../node_modules/d3-random/src/poisson.js", "../node_modules/d3-random/src/lcg.js", "../node_modules/d3-random/src/index.js", "../node_modules/d3-scale/src/init.js", "../node_modules/d3-scale/src/ordinal.js", "../node_modules/d3-scale/src/band.js", "../node_modules/d3-scale/src/constant.js", "../node_modules/d3-scale/src/number.js", "../node_modules/d3-scale/src/continuous.js", "../node_modules/d3-scale/src/tickFormat.js", "../node_modules/d3-scale/src/linear.js", "../node_modules/d3-scale/src/identity.js", "../node_modules/d3-scale/src/nice.js", "../node_modules/d3-scale/src/log.js", "../node_modules/d3-scale/src/symlog.js", "../node_modules/d3-scale/src/pow.js", "../node_modules/d3-scale/src/radial.js", "../node_modules/d3-scale/src/quantile.js", "../node_modules/d3-scale/src/quantize.js", "../node_modules/d3-scale/src/threshold.js", "../node_modules/d3-time/src/interval.js", "../node_modules/d3-time/src/millisecond.js", "../node_modules/d3-time/src/duration.js", "../node_modules/d3-time/src/second.js", "../node_modules/d3-time/src/minute.js", "../node_modules/d3-time/src/hour.js", "../node_modules/d3-time/src/day.js", "../node_modules/d3-time/src/week.js", "../node_modules/d3-time/src/month.js", "../node_modules/d3-time/src/year.js", "../node_modules/d3-time/src/ticks.js", "../node_modules/d3-time/src/index.js", "../node_modules/d3-time-format/src/locale.js", "../node_modules/d3-time-format/src/defaultLocale.js", "../node_modules/d3-time-format/src/isoFormat.js", "../node_modules/d3-time-format/src/isoParse.js", "../node_modules/d3-time-format/src/index.js", "../node_modules/d3-scale/src/time.js", "../node_modules/d3-scale/src/utcTime.js", "../node_modules/d3-scale/src/sequential.js", "../node_modules/d3-scale/src/sequentialQuantile.js", "../node_modules/d3-scale/src/diverging.js", "../node_modules/d3-scale/src/index.js", "../node_modules/d3-scale-chromatic/src/colors.js", "../node_modules/d3-scale-chromatic/src/categorical/category10.js", "../node_modules/d3-scale-chromatic/src/categorical/Accent.js", "../node_modules/d3-scale-chromatic/src/categorical/Dark2.js", "../node_modules/d3-scale-chromatic/src/categorical/observable10.js", "../node_modules/d3-scale-chromatic/src/categorical/Paired.js", "../node_modules/d3-scale-chromatic/src/categorical/Pastel1.js", "../node_modules/d3-scale-chromatic/src/categorical/Pastel2.js", "../node_modules/d3-scale-chromatic/src/categorical/Set1.js", "../node_modules/d3-scale-chromatic/src/categorical/Set2.js", "../node_modules/d3-scale-chromatic/src/categorical/Set3.js", "../node_modules/d3-scale-chromatic/src/categorical/Tableau10.js", "../node_modules/d3-scale-chromatic/src/ramp.js", "../node_modules/d3-scale-chromatic/src/diverging/BrBG.js", "../node_modules/d3-scale-chromatic/src/diverging/PRGn.js", "../node_modules/d3-scale-chromatic/src/diverging/PiYG.js", "../node_modules/d3-scale-chromatic/src/diverging/PuOr.js", "../node_modules/d3-scale-chromatic/src/diverging/RdBu.js", "../node_modules/d3-scale-chromatic/src/diverging/RdGy.js", "../node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js", "../node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js", "../node_modules/d3-scale-chromatic/src/diverging/Spectral.js", "../node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js", "../node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js", "../node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js", "../node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js", "../node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js", "../node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js", "../node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js", "../node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js", "../node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js", "../node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js", "../node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js", "../node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js", "../node_modules/d3-scale-chromatic/src/sequential-single/Blues.js", "../node_modules/d3-scale-chromatic/src/sequential-single/Greens.js", "../node_modules/d3-scale-chromatic/src/sequential-single/Greys.js", "../node_modules/d3-scale-chromatic/src/sequential-single/Purples.js", "../node_modules/d3-scale-chromatic/src/sequential-single/Reds.js", "../node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js", "../node_modules/d3-scale-chromatic/src/sequential-multi/cividis.js", "../node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js", "../node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js", "../node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js", "../node_modules/d3-scale-chromatic/src/sequential-multi/turbo.js", "../node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js", "../node_modules/d3-scale-chromatic/src/index.js", "../node_modules/d3-shape/src/constant.js", "../node_modules/d3-shape/src/math.js", "../node_modules/d3-shape/src/path.js", "../node_modules/d3-shape/src/arc.js", "../node_modules/d3-shape/src/array.js", "../node_modules/d3-shape/src/curve/linear.js", "../node_modules/d3-shape/src/point.js", "../node_modules/d3-shape/src/line.js", "../node_modules/d3-shape/src/area.js", "../node_modules/d3-shape/src/descending.js", "../node_modules/d3-shape/src/identity.js", "../node_modules/d3-shape/src/pie.js", "../node_modules/d3-shape/src/curve/radial.js", "../node_modules/d3-shape/src/lineRadial.js", "../node_modules/d3-shape/src/areaRadial.js", "../node_modules/d3-shape/src/pointRadial.js", "../node_modules/d3-shape/src/curve/bump.js", "../node_modules/d3-shape/src/link.js", "../node_modules/d3-shape/src/symbol/asterisk.js", "../node_modules/d3-shape/src/symbol/circle.js", "../node_modules/d3-shape/src/symbol/cross.js", "../node_modules/d3-shape/src/symbol/diamond.js", "../node_modules/d3-shape/src/symbol/diamond2.js", "../node_modules/d3-shape/src/symbol/plus.js", "../node_modules/d3-shape/src/symbol/square.js", "../node_modules/d3-shape/src/symbol/square2.js", "../node_modules/d3-shape/src/symbol/star.js", "../node_modules/d3-shape/src/symbol/triangle.js", "../node_modules/d3-shape/src/symbol/triangle2.js", "../node_modules/d3-shape/src/symbol/wye.js", "../node_modules/d3-shape/src/symbol/times.js", "../node_modules/d3-shape/src/symbol.js", "../node_modules/d3-shape/src/noop.js", "../node_modules/d3-shape/src/curve/basis.js", "../node_modules/d3-shape/src/curve/basisClosed.js", "../node_modules/d3-shape/src/curve/basisOpen.js", "../node_modules/d3-shape/src/curve/bundle.js", "../node_modules/d3-shape/src/curve/cardinal.js", "../node_modules/d3-shape/src/curve/cardinalClosed.js", "../node_modules/d3-shape/src/curve/cardinalOpen.js", "../node_modules/d3-shape/src/curve/catmullRom.js", "../node_modules/d3-shape/src/curve/catmullRomClosed.js", "../node_modules/d3-shape/src/curve/catmullRomOpen.js", "../node_modules/d3-shape/src/curve/linearClosed.js", "../node_modules/d3-shape/src/curve/monotone.js", "../node_modules/d3-shape/src/curve/natural.js", "../node_modules/d3-shape/src/curve/step.js", "../node_modules/d3-shape/src/offset/none.js", "../node_modules/d3-shape/src/order/none.js", "../node_modules/d3-shape/src/stack.js", "../node_modules/d3-shape/src/offset/expand.js", "../node_modules/d3-shape/src/offset/diverging.js", "../node_modules/d3-shape/src/offset/silhouette.js", "../node_modules/d3-shape/src/offset/wiggle.js", "../node_modules/d3-shape/src/order/appearance.js", "../node_modules/d3-shape/src/order/ascending.js", "../node_modules/d3-shape/src/order/descending.js", "../node_modules/d3-shape/src/order/insideOut.js", "../node_modules/d3-shape/src/order/reverse.js", "../node_modules/d3-shape/src/index.js", "../node_modules/d3-zoom/src/constant.js", "../node_modules/d3-zoom/src/event.js", "../node_modules/d3-zoom/src/transform.js", "../node_modules/d3-zoom/src/noevent.js", "../node_modules/d3-zoom/src/zoom.js", "../node_modules/d3-zoom/src/index.js", "../node_modules/d3/src/index.js", "../logging.coffee", "../analyze.coffee"],
  "sourcesContent": ["'use strict'\n\n\nconst createScatter = require('regl-scatter2d')\nconst pick = require('pick-by-alias')\nconst getBounds = require('array-bounds')\nconst raf = require('raf')\nconst arrRange = require('array-range')\nconst rect = require('parse-rect')\nconst flatten = require('flatten-vertex-data')\n\n\nmodule.exports = SPLOM\n\n\n// @constructor\nfunction SPLOM (regl, options) {\n\tif (!(this instanceof SPLOM)) return new SPLOM(regl, options)\n\n\t// render passes\n\tthis.traces = []\n\n\t// passes for scatter, combined across traces\n\tthis.passes = {}\n\n\tthis.regl = regl\n\n\t// main scatter drawing instance\n\tthis.scatter = createScatter(regl)\n\n\tthis.canvas = this.scatter.canvas\n}\n\n\n// update & draw passes once per frame\nSPLOM.prototype.render = function (...args) {\n\tif (args.length) {\n\t\tthis.update(...args)\n\t}\n\n\tif (this.regl.attributes.preserveDrawingBuffer) return this.draw()\n\n\t// make sure draw is not called more often than once a frame\n\tif (this.dirty) {\n\t\tif (this.planned == null) {\n\t\t\tthis.planned = raf(() => {\n\t\t\t\tthis.draw()\n\t\t\t\tthis.dirty = true\n\t\t\t\tthis.planned = null\n\t\t\t})\n\t\t}\n\t}\n\telse {\n\t\tthis.draw()\n\t\tthis.dirty = true\n\t\traf(() => {\n\t\t\tthis.dirty = false\n\t\t})\n\t}\n\n\treturn this\n}\n\n\n// update passes\nSPLOM.prototype.update = function (...args) {\n\tif (!args.length) return\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tthis.updateItem(i, args[i])\n\t}\n\n\t// remove nulled passes\n\tthis.traces = this.traces.filter(Boolean)\n\n\t// FIXME: update passes independently\n\tlet passes = []\n\tlet offset = 0\n\tfor (let i = 0; i < this.traces.length; i++) {\n\t\tlet trace = this.traces[i]\n\t\tlet tracePasses = this.traces[i].passes\n\t\tfor (let j = 0; j < tracePasses.length; j++) {\n\t\t\tpasses.push(this.passes[tracePasses[j]])\n\t\t}\n\t\t// save offset of passes\n\t\ttrace.passOffset = offset\n\t\toffset += trace.passes.length\n\t}\n\n\tthis.scatter.update(...passes)\n\n\treturn this\n}\n\n\n// update trace by index, not supposed to be called directly\nSPLOM.prototype.updateItem = function (i, options) {\n\tlet { regl } = this\n\n\t// remove pass if null\n\tif (options === null) {\n\t\tthis.traces[i] = null\n\t\treturn this\n\t}\n\n\tif (!options) return this\n\n\tlet o = pick(options, {\n\t\tdata: 'data items columns rows values dimensions samples x',\n\t\tsnap: 'snap cluster',\n\t\tsize: 'sizes size radius',\n\t\tcolor: 'colors color fill fill-color fillColor',\n\t\topacity: 'opacity alpha transparency opaque',\n\t\tborderSize: 'borderSizes borderSize border-size bordersize borderWidth borderWidths border-width borderwidth stroke-width strokeWidth strokewidth outline',\n\t\tborderColor: 'borderColors borderColor bordercolor stroke stroke-color strokeColor',\n\t\tmarker: 'markers marker shape',\n\t\trange: 'range ranges databox dataBox',\n\t\tviewport: 'viewport viewBox viewbox',\n\t\tdomain: 'domain domains area areas',\n\t\tpadding: 'pad padding paddings pads margin margins',\n\t\ttranspose: 'transpose transposed',\n\t\tdiagonal: 'diagonal diag showDiagonal',\n\t\tupper: 'upper up top upperhalf upperHalf showupperhalf showUpper showUpperHalf',\n\t\tlower: 'lower low bottom lowerhalf lowerHalf showlowerhalf showLowerHalf showLower'\n\t})\n\n\t// we provide regl buffer per-trace, since trace data can be changed\n\tlet trace = (this.traces[i] || (this.traces[i] = {\n\t\tid: i,\n\t\tbuffer: regl.buffer({\n\t\t\tusage: 'dynamic',\n\t\t\ttype: 'float',\n\t\t\tdata: new Uint8Array()\n\t\t}),\n\t\tcolor: 'black',\n\t\tmarker: null,\n\t\tsize: 12,\n\t\tborderColor: 'transparent',\n\t\tborderSize: 1,\n\t\tviewport:  rect([regl._gl.drawingBufferWidth, regl._gl.drawingBufferHeight]),\n\t\tpadding: [0, 0, 0, 0],\n\t\topacity: 1,\n\t\tdiagonal: true,\n\t\tupper: true,\n\t\tlower: true\n\t}))\n\n\n\t// save styles\n\tif (o.color != null) {\n\t\ttrace.color = o.color\n\t}\n\tif (o.size != null) {\n\t\ttrace.size = o.size\n\t}\n\tif (o.marker != null) {\n\t\ttrace.marker = o.marker\n\t}\n\tif (o.borderColor != null) {\n\t\ttrace.borderColor = o.borderColor\n\t}\n\tif (o.borderSize != null) {\n\t\ttrace.borderSize = o.borderSize\n\t}\n\tif (o.opacity != null) {\n\t\ttrace.opacity = o.opacity\n\t}\n\tif (o.viewport) {\n\t\ttrace.viewport = rect(o.viewport)\n\t}\n\tif (o.diagonal != null) trace.diagonal = o.diagonal\n\tif (o.upper != null) trace.upper = o.upper\n\tif (o.lower != null) trace.lower = o.lower\n\n\t// put flattened data into buffer\n\tif (o.data) {\n\t\ttrace.buffer(flatten(o.data))\n\t\ttrace.columns = o.data.length\n\t\ttrace.count = o.data[0].length\n\n\t\t// detect bounds per-column\n\t\ttrace.bounds = []\n\n\t\tfor (let i = 0; i < trace.columns; i++) {\n\t\t\ttrace.bounds[i] = getBounds(o.data[i], 1)\n\t\t}\n\t}\n\n\t// add proper range updating markers\n\tlet multirange\n\tif (o.range) {\n\t\ttrace.range = o.range\n\t\tmultirange = trace.range && typeof trace.range[0] !== 'number'\n\t}\n\n\tif (o.domain) {\n\t\ttrace.domain = o.domain\n\t}\n\tlet multipadding = false\n\tif (o.padding != null) {\n\t\t// multiple paddings\n\t\tif (Array.isArray(o.padding) && o.padding.length === trace.columns && typeof o.padding[o.padding.length - 1] === 'number') {\n\t\t\ttrace.padding = o.padding.map(getPad)\n\t\t\tmultipadding = true\n\t\t}\n\t\t// single padding\n\t\telse {\n\t\t\ttrace.padding = getPad(o.padding)\n\t\t}\n\t}\n\n\t// create passes\n\tlet m = trace.columns\n\tlet n = trace.count\n\n\tlet w = trace.viewport.width\n\tlet h = trace.viewport.height\n\tlet left = trace.viewport.x\n\tlet top = trace.viewport.y\n\tlet iw = w / m\n\tlet ih = h / m\n\n\ttrace.passes = []\n\n\tfor (let i = 0; i < m; i++) {\n\t\tfor (let j = 0; j < m; j++) {\n\t\t\tif (!trace.diagonal && j === i) continue\n\t\t\tif (!trace.upper && i > j) continue\n\t\t\tif (!trace.lower && i < j) continue\n\n\t\t\tlet key = passId(trace.id, i, j)\n\n\t\t\tlet pass = this.passes[key] || (this.passes[key] = {})\n\n\t\t\tif (o.data) {\n\t\t\t\tif (o.transpose) {\n\t\t\t\t\tpass.positions = {\n\t\t\t\t\t\tx: {buffer: trace.buffer, offset: j, count: n, stride: m},\n\t\t\t\t\t\ty: {buffer: trace.buffer, offset: i, count: n, stride: m}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpass.positions = {\n\t\t\t\t\t\tx: {buffer: trace.buffer, offset: j * n, count: n},\n\t\t\t\t\t\ty: {buffer: trace.buffer, offset: i * n, count: n}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tpass.bounds = getBox(trace.bounds, i, j)\n\t\t\t}\n\n\t\t\tif (o.domain || o.viewport || o.data) {\n\t\t\t\tlet pad = multipadding ? getBox(trace.padding, i, j) : trace.padding\n\t\t\t\tif (trace.domain) {\n\t\t\t\t\tlet [lox, loy, hix, hiy] = getBox(trace.domain, i, j)\n\n\t\t\t\t\tpass.viewport = [\n\t\t\t\t\t\tleft + lox * w + pad[0],\n\t\t\t\t\t\ttop + loy * h + pad[1],\n\t\t\t\t\t\tleft + hix * w - pad[2],\n\t\t\t\t\t\ttop + hiy * h - pad[3]\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\t// consider auto-domain equipartial\n\t\t\t\telse {\n\t\t\t\t\tpass.viewport = [\n\t\t\t\t\t\tleft + j * iw + iw * pad[0],\n\t\t\t\t\t\ttop + i * ih + ih * pad[1],\n\t\t\t\t\t\tleft + (j + 1) * iw - iw * pad[2],\n\t\t\t\t\t\ttop + (i + 1) * ih - ih * pad[3]\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (o.color) pass.color = trace.color\n\t\t\tif (o.size) pass.size = trace.size\n\t\t\tif (o.marker) pass.marker = trace.marker\n\t\t\tif (o.borderSize) pass.borderSize = trace.borderSize\n\t\t\tif (o.borderColor) pass.borderColor = trace.borderColor\n\t\t\tif (o.opacity) pass.opacity = trace.opacity\n\n\t\t\tif (o.range) {\n\t\t\t\tpass.range = multirange ? getBox(trace.range, i, j) : trace.range || pass.bounds\n\t\t\t}\n\n\t\t\ttrace.passes.push(key)\n\t\t}\n\t}\n\n\treturn this\n}\n\n\n// draw all or passed passes\nSPLOM.prototype.draw = function (...args) {\n\tif (!args.length) {\n\t\tthis.scatter.draw()\n\t}\n\telse {\n\t\tlet idx = []\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t// draw(0, 2, 5) - draw traces\n\t\t\tif (typeof args[i] === 'number' ) {\n\t\t\t\tlet { passes, passOffset } = this.traces[args[i]]\n\t\t\t\tidx.push(...arrRange(passOffset, passOffset + passes.length))\n\t\t\t}\n\t\t\t// draw([0, 1, 2 ...], [3, 4, 5]) - draw points\n\t\t\telse if (args[i].length) {\n\t\t\t\tlet els = args[i]\n\t\t\t\tlet { passes, passOffset } = this.traces[i]\n\t\t\t\tpasses = passes.map((passId, i) => {\n\t\t\t\t\tidx[passOffset + i] = els\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tthis.scatter.draw(...idx)\n\t}\n\n\treturn this\n}\n\n\n// dispose resources\nSPLOM.prototype.destroy = function () {\n\tthis.traces.forEach(trace => {\n\t\tif (trace.buffer && trace.buffer.destroy) trace.buffer.destroy()\n\t})\n\tthis.traces = null\n\tthis.passes = null\n\n\tthis.scatter.destroy()\n\n\treturn this\n}\n\n\n// return pass corresponding to trace i- j- square\nfunction passId (trace, i, j) {\n\tlet id = (trace.id != null ? trace.id : trace)\n\tlet n = i\n\tlet m = j\n\tlet key = id << 16 | (n & 0xff) << 8 | m & 0xff\n\n\treturn key\n}\n\n\n// return bounding box corresponding to a pass\nfunction getBox (items, i, j) {\n\tlet ilox, iloy, ihix, ihiy, jlox, jloy, jhix, jhiy\n\tlet iitem = items[i], jitem = items[j]\n\n\tif (iitem.length > 2) {\n\t\tilox = iitem[0]\n\t\tihix = iitem[2]\n\t\tiloy = iitem[1]\n\t\tihiy = iitem[3]\n\t}\n\telse if (iitem.length) {\n\t\tilox = iloy = iitem[0]\n\t\tihix = ihiy = iitem[1]\n\t}\n\telse {\n\t\tilox = iitem.x\n\t\tiloy = iitem.y\n\t\tihix = iitem.x + iitem.width\n\t\tihiy = iitem.y + iitem.height\n\t}\n\n\tif (jitem.length > 2) {\n\t\tjlox = jitem[0]\n\t\tjhix = jitem[2]\n\t\tjloy = jitem[1]\n\t\tjhiy = jitem[3]\n\t}\n\telse if (jitem.length) {\n\t\tjlox = jloy = jitem[0]\n\t\tjhix = jhiy = jitem[1]\n\t}\n\telse {\n\t\tjlox = jitem.x\n\t\tjloy = jitem.y\n\t\tjhix = jitem.x + jitem.width\n\t\tjhiy = jitem.y + jitem.height\n\t}\n\n\treturn [ jlox, iloy, jhix, ihiy ]\n}\n\n\nfunction getPad (arg) {\n\tif (typeof arg === 'number') return [arg, arg, arg, arg]\n\telse if (arg.length === 2) return [arg[0], arg[1], arg[0], arg[1]]\n\telse {\n\t\tlet box = rect(arg)\n\t\treturn [box.x, box.y, box.x + box.width, box.y + box.height]\n\t}\n}\n", "export default function ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n", "export default function descending(a, b) {\n  return a == null || b == null ? NaN\n    : b < a ? -1\n    : b > a ? 1\n    : b >= a ? 0\n    : NaN;\n}\n", "import ascending from \"./ascending.js\";\nimport descending from \"./descending.js\";\n\nexport default function bisector(f) {\n  let compare1, compare2, delta;\n\n  // If an accessor is specified, promote it to a comparator. In this case we\n  // can test whether the search value is (self-) comparable. We can\u2019t do this\n  // for a comparator (except for specific, known comparators) because we can\u2019t\n  // tell if the comparator is symmetric, and an asymmetric comparator can\u2019t be\n  // used to test whether a single value is comparable.\n  if (f.length !== 2) {\n    compare1 = ascending;\n    compare2 = (d, x) => ascending(f(d), x);\n    delta = (d, x) => f(d) - x;\n  } else {\n    compare1 = f === ascending || f === descending ? f : zero;\n    compare2 = f;\n    delta = f;\n  }\n\n  function left(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function right(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function center(a, x, lo = 0, hi = a.length) {\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction zero() {\n  return 0;\n}\n", "export default function number(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n", "import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n", "export function blur(values, r) {\n  if (!((r = +r) >= 0)) throw new RangeError(\"invalid r\");\n  let length = values.length;\n  if (!((length = Math.floor(length)) >= 0)) throw new RangeError(\"invalid length\");\n  if (!length || !r) return values;\n  const blur = blurf(r);\n  const temp = values.slice();\n  blur(values, temp, 0, length, 1);\n  blur(temp, values, 0, length, 1);\n  blur(values, temp, 0, length, 1);\n  return values;\n}\n\nexport const blur2 = Blur2(blurf);\n\nexport const blurImage = Blur2(blurfImage);\n\nfunction Blur2(blur) {\n  return function(data, rx, ry = rx) {\n    if (!((rx = +rx) >= 0)) throw new RangeError(\"invalid rx\");\n    if (!((ry = +ry) >= 0)) throw new RangeError(\"invalid ry\");\n    let {data: values, width, height} = data;\n    if (!((width = Math.floor(width)) >= 0)) throw new RangeError(\"invalid width\");\n    if (!((height = Math.floor(height !== undefined ? height : values.length / width)) >= 0)) throw new RangeError(\"invalid height\");\n    if (!width || !height || (!rx && !ry)) return data;\n    const blurx = rx && blur(rx);\n    const blury = ry && blur(ry);\n    const temp = values.slice();\n    if (blurx && blury) {\n      blurh(blurx, temp, values, width, height);\n      blurh(blurx, values, temp, width, height);\n      blurh(blurx, temp, values, width, height);\n      blurv(blury, values, temp, width, height);\n      blurv(blury, temp, values, width, height);\n      blurv(blury, values, temp, width, height);\n    } else if (blurx) {\n      blurh(blurx, values, temp, width, height);\n      blurh(blurx, temp, values, width, height);\n      blurh(blurx, values, temp, width, height);\n    } else if (blury) {\n      blurv(blury, values, temp, width, height);\n      blurv(blury, temp, values, width, height);\n      blurv(blury, values, temp, width, height);\n    }\n    return data;\n  };\n}\n\nfunction blurh(blur, T, S, w, h) {\n  for (let y = 0, n = w * h; y < n;) {\n    blur(T, S, y, y += w, 1);\n  }\n}\n\nfunction blurv(blur, T, S, w, h) {\n  for (let x = 0, n = w * h; x < w; ++x) {\n    blur(T, S, x, x + n, w);\n  }\n}\n\nfunction blurfImage(radius) {\n  const blur = blurf(radius);\n  return (T, S, start, stop, step) => {\n    start <<= 2, stop <<= 2, step <<= 2;\n    blur(T, S, start + 0, stop + 0, step);\n    blur(T, S, start + 1, stop + 1, step);\n    blur(T, S, start + 2, stop + 2, step);\n    blur(T, S, start + 3, stop + 3, step);\n  };\n}\n\n// Given a target array T, a source array S, sets each value T[i] to the average\n// of {S[i - r], \u2026, S[i], \u2026, S[i + r]}, where r = \u230Aradius\u230B, start <= i < stop,\n// for each i, i + step, i + 2 * step, etc., and where S[j] is clamped between\n// S[start] (inclusive) and S[stop] (exclusive). If the given radius is not an\n// integer, S[i - r - 1] and S[i + r + 1] are added to the sum, each weighted\n// according to r - \u230Aradius\u230B.\nfunction blurf(radius) {\n  const radius0 = Math.floor(radius);\n  if (radius0 === radius) return bluri(radius);\n  const t = radius - radius0;\n  const w = 2 * radius + 1;\n  return (T, S, start, stop, step) => { // stop must be aligned!\n    if (!((stop -= step) >= start)) return; // inclusive stop\n    let sum = radius0 * S[start];\n    const s0 = step * radius0;\n    const s1 = s0 + step;\n    for (let i = start, j = start + s0; i < j; i += step) {\n      sum += S[Math.min(stop, i)];\n    }\n    for (let i = start, j = stop; i <= j; i += step) {\n      sum += S[Math.min(stop, i + s0)];\n      T[i] = (sum + t * (S[Math.max(start, i - s1)] + S[Math.min(stop, i + s1)])) / w;\n      sum -= S[Math.max(start, i - s0)];\n    }\n  };\n}\n\n// Like blurf, but optimized for integer radius.\nfunction bluri(radius) {\n  const w = 2 * radius + 1;\n  return (T, S, start, stop, step) => { // stop must be aligned!\n    if (!((stop -= step) >= start)) return; // inclusive stop\n    let sum = radius * S[start];\n    const s = step * radius;\n    for (let i = start, j = start + s; i < j; i += step) {\n      sum += S[Math.min(stop, i)];\n    }\n    for (let i = start, j = stop; i <= j; i += step) {\n      sum += S[Math.min(stop, i + s)];\n      T[i] = sum / w;\n      sum -= S[Math.max(start, i - s)];\n    }\n  };\n}\n", "export default function count(values, valueof) {\n  let count = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  }\n  return count;\n}\n", "function length(array) {\n  return array.length | 0;\n}\n\nfunction empty(length) {\n  return !(length > 0);\n}\n\nfunction arrayify(values) {\n  return typeof values !== \"object\" || \"length\" in values ? values : Array.from(values);\n}\n\nfunction reducer(reduce) {\n  return values => reduce(...values);\n}\n\nexport default function cross(...values) {\n  const reduce = typeof values[values.length - 1] === \"function\" && reducer(values.pop());\n  values = values.map(arrayify);\n  const lengths = values.map(length);\n  const j = values.length - 1;\n  const index = new Array(j + 1).fill(0);\n  const product = [];\n  if (j < 0 || lengths.some(empty)) return product;\n  while (true) {\n    product.push(index.map((j, i) => values[i][j]));\n    let i = j;\n    while (++index[i] === lengths[i]) {\n      if (i === 0) return reduce ? product.map(reduce) : product;\n      index[i--] = 0;\n    }\n  }\n}\n", "export default function cumsum(values, valueof) {\n  var sum = 0, index = 0;\n  return Float64Array.from(values, valueof === undefined\n    ? v => (sum += +v || 0)\n    : v => (sum += +valueof(v, index++, values) || 0));\n}", "export default function variance(values, valueof) {\n  let count = 0;\n  let delta;\n  let mean = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n  if (count > 1) return sum / (count - 1);\n}\n", "import variance from \"./variance.js\";\n\nexport default function deviation(values, valueof) {\n  const v = variance(values, valueof);\n  return v ? Math.sqrt(v) : v;\n}\n", "export default function extent(values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n}\n", "// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n", "export class InternMap extends Map {\n  constructor(entries, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (entries != null) for (const [key, value] of entries) this.set(key, value);\n  }\n  get(key) {\n    return super.get(intern_get(this, key));\n  }\n  has(key) {\n    return super.has(intern_get(this, key));\n  }\n  set(key, value) {\n    return super.set(intern_set(this, key), value);\n  }\n  delete(key) {\n    return super.delete(intern_delete(this, key));\n  }\n}\n\nexport class InternSet extends Set {\n  constructor(values, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (values != null) for (const value of values) this.add(value);\n  }\n  has(value) {\n    return super.has(intern_get(this, value));\n  }\n  add(value) {\n    return super.add(intern_set(this, value));\n  }\n  delete(value) {\n    return super.delete(intern_delete(this, value));\n  }\n}\n\nfunction intern_get({_intern, _key}, value) {\n  const key = _key(value);\n  return _intern.has(key) ? _intern.get(key) : value;\n}\n\nfunction intern_set({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) return _intern.get(key);\n  _intern.set(key, value);\n  return value;\n}\n\nfunction intern_delete({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) {\n    value = _intern.get(key);\n    _intern.delete(key);\n  }\n  return value;\n}\n\nfunction keyof(value) {\n  return value !== null && typeof value === \"object\" ? value.valueOf() : value;\n}\n", "export default function identity(x) {\n  return x;\n}\n", "import {InternMap} from \"internmap\";\nimport identity from \"./identity.js\";\n\nexport default function group(values, ...keys) {\n  return nest(values, identity, identity, keys);\n}\n\nexport function groups(values, ...keys) {\n  return nest(values, Array.from, identity, keys);\n}\n\nfunction flatten(groups, keys) {\n  for (let i = 1, n = keys.length; i < n; ++i) {\n    groups = groups.flatMap(g => g.pop().map(([key, value]) => [...g, key, value]));\n  }\n  return groups;\n}\n\nexport function flatGroup(values, ...keys) {\n  return flatten(groups(values, ...keys), keys);\n}\n\nexport function flatRollup(values, reduce, ...keys) {\n  return flatten(rollups(values, reduce, ...keys), keys);\n}\n\nexport function rollup(values, reduce, ...keys) {\n  return nest(values, identity, reduce, keys);\n}\n\nexport function rollups(values, reduce, ...keys) {\n  return nest(values, Array.from, reduce, keys);\n}\n\nexport function index(values, ...keys) {\n  return nest(values, identity, unique, keys);\n}\n\nexport function indexes(values, ...keys) {\n  return nest(values, Array.from, unique, keys);\n}\n\nfunction unique(values) {\n  if (values.length !== 1) throw new Error(\"duplicate key\");\n  return values[0];\n}\n\nfunction nest(values, map, reduce, keys) {\n  return (function regroup(values, i) {\n    if (i >= keys.length) return reduce(values);\n    const groups = new InternMap();\n    const keyof = keys[i++];\n    let index = -1;\n    for (const value of values) {\n      const key = keyof(value, ++index, values);\n      const group = groups.get(key);\n      if (group) group.push(value);\n      else groups.set(key, [value]);\n    }\n    for (const [key, values] of groups) {\n      groups.set(key, regroup(values, i));\n    }\n    return map(groups);\n  })(values, 0);\n}\n", "export default function permute(source, keys) {\n  return Array.from(keys, key => source[key]);\n}\n", "import ascending from \"./ascending.js\";\nimport permute from \"./permute.js\";\n\nexport default function sort(values, ...F) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  values = Array.from(values);\n  let [f] = F;\n  if ((f && f.length !== 2) || F.length > 1) {\n    const index = Uint32Array.from(values, (d, i) => i);\n    if (F.length > 1) {\n      F = F.map(f => values.map(f));\n      index.sort((i, j) => {\n        for (const f of F) {\n          const c = ascendingDefined(f[i], f[j]);\n          if (c) return c;\n        }\n      });\n    } else {\n      f = values.map(f);\n      index.sort((i, j) => ascendingDefined(f[i], f[j]));\n    }\n    return permute(values, index);\n  }\n  return values.sort(compareDefined(f));\n}\n\nexport function compareDefined(compare = ascending) {\n  if (compare === ascending) return ascendingDefined;\n  if (typeof compare !== \"function\") throw new TypeError(\"compare is not a function\");\n  return (a, b) => {\n    const x = compare(a, b);\n    if (x || x === 0) return x;\n    return (compare(b, b) === 0) - (compare(a, a) === 0);\n  };\n}\n\nexport function ascendingDefined(a, b) {\n  return (a == null || !(a >= a)) - (b == null || !(b >= b)) || (a < b ? -1 : a > b ? 1 : 0);\n}\n", "import ascending from \"./ascending.js\";\nimport group, {rollup} from \"./group.js\";\nimport sort from \"./sort.js\";\n\nexport default function groupSort(values, reduce, key) {\n  return (reduce.length !== 2\n    ? sort(rollup(values, reduce, key), (([ak, av], [bk, bv]) => ascending(av, bv) || ascending(ak, bk)))\n    : sort(group(values, key), (([ak, av], [bk, bv]) => reduce(av, bv) || ascending(ak, bk))))\n    .map(([key]) => key);\n}\n", "var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n", "export default function constant(x) {\n  return () => x;\n}\n", "const e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction tickSpec(start, stop, count) {\n  const step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log10(step)),\n      error = step / Math.pow(10, power),\n      factor = error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1;\n  let i1, i2, inc;\n  if (power < 0) {\n    inc = Math.pow(10, -power) / factor;\n    i1 = Math.round(start * inc);\n    i2 = Math.round(stop * inc);\n    if (i1 / inc < start) ++i1;\n    if (i2 / inc > stop) --i2;\n    inc = -inc;\n  } else {\n    inc = Math.pow(10, power) * factor;\n    i1 = Math.round(start / inc);\n    i2 = Math.round(stop / inc);\n    if (i1 * inc < start) ++i1;\n    if (i2 * inc > stop) --i2;\n  }\n  if (i2 < i1 && 0.5 <= count && count < 2) return tickSpec(start, stop, count * 2);\n  return [i1, i2, inc];\n}\n\nexport default function ticks(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  if (!(count > 0)) return [];\n  if (start === stop) return [start];\n  const reverse = stop < start, [i1, i2, inc] = reverse ? tickSpec(stop, start, count) : tickSpec(start, stop, count);\n  if (!(i2 >= i1)) return [];\n  const n = i2 - i1 + 1, ticks = new Array(n);\n  if (reverse) {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) * inc;\n  } else {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) * inc;\n  }\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  return tickSpec(start, stop, count)[2];\n}\n\nexport function tickStep(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  const reverse = stop < start, inc = reverse ? tickIncrement(stop, start, count) : tickIncrement(start, stop, count);\n  return (reverse ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);\n}\n", "import {tickIncrement} from \"./ticks.js\";\n\nexport default function nice(start, stop, count) {\n  let prestep;\n  while (true) {\n    const step = tickIncrement(start, stop, count);\n    if (step === prestep || step === 0 || !isFinite(step)) {\n      return [start, stop];\n    } else if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n    }\n    prestep = step;\n  }\n}\n", "import count from \"../count.js\";\n\nexport default function thresholdSturges(values) {\n  return Math.max(1, Math.ceil(Math.log(count(values)) / Math.LN2) + 1);\n}\n", "import {slice} from \"./array.js\";\nimport bisect from \"./bisect.js\";\nimport constant from \"./constant.js\";\nimport extent from \"./extent.js\";\nimport identity from \"./identity.js\";\nimport nice from \"./nice.js\";\nimport ticks, {tickIncrement} from \"./ticks.js\";\nimport sturges from \"./threshold/sturges.js\";\n\nexport default function bin() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    if (!Array.isArray(data)) data = Array.from(data);\n\n    var i,\n        n = data.length,\n        x,\n        step,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds, and nice the\n    // default domain accordingly.\n    if (!Array.isArray(tz)) {\n      const max = x1, tn = +tz;\n      if (domain === extent) [x0, x1] = nice(x0, x1, tn);\n      tz = ticks(x0, x1, tn);\n\n      // If the domain is aligned with the first tick (which it will by\n      // default), then we can use quantization rather than bisection to bin\n      // values, which is substantially faster.\n      if (tz[0] <= x0) step = tickIncrement(x0, x1, tn);\n\n      // If the last threshold is coincident with the domain\u2019s upper bound, the\n      // last bin will be zero-width. If the default domain is used, and this\n      // last threshold is coincident with the maximum input value, we can\n      // extend the niced upper bound by one tick to ensure uniform bin widths;\n      // otherwise, we simply remove the last threshold. Note that we don\u2019t\n      // coerce values or the domain to numbers, and thus must be careful to\n      // compare order (>=) rather than strict equality (===)!\n      if (tz[tz.length - 1] >= x1) {\n        if (max >= x1 && domain === extent) {\n          const step = tickIncrement(x0, x1, tn);\n          if (isFinite(step)) {\n            if (step > 0) {\n              x1 = (Math.floor(x1 / step) + 1) * step;\n            } else if (step < 0) {\n              x1 = (Math.ceil(x1 * -step) + 1) / -step;\n            }\n          }\n        } else {\n          tz.pop();\n        }\n      }\n    }\n\n    // Remove any thresholds outside the domain.\n    // Be careful not to mutate an array owned by the user!\n    var m = tz.length, a = 0, b = m;\n    while (tz[a] <= x0) ++a;\n    while (tz[b - 1] > x1) --b;\n    if (a || b < m) tz = tz.slice(a, b), m = b - a;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    if (isFinite(step)) {\n      if (step > 0) {\n        for (i = 0; i < n; ++i) {\n          if ((x = values[i]) != null && x0 <= x && x <= x1) {\n            bins[Math.min(m, Math.floor((x - x0) / step))].push(data[i]);\n          }\n        }\n      } else if (step < 0) {\n        for (i = 0; i < n; ++i) {\n          if ((x = values[i]) != null && x0 <= x && x <= x1) {\n            const j = Math.floor((x0 - x) * step);\n            bins[Math.min(m, j + (tz[j] <= x))].push(data[i]); // handle off-by-one due to rounding\n          }\n        }\n      }\n    } else {\n      for (i = 0; i < n; ++i) {\n        if ((x = values[i]) != null && x0 <= x && x <= x1) {\n          bins[bisect(tz, x, 0, m)].push(data[i]);\n        }\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : constant(Array.isArray(_) ? slice.call(_) : _), histogram) : threshold;\n  };\n\n  return histogram;\n}\n", "export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n", "export default function maxIndex(values, valueof) {\n  let max;\n  let maxIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value, maxIndex = index;\n      }\n    }\n  } else {\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value, maxIndex = index;\n      }\n    }\n  }\n  return maxIndex;\n}\n", "export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n", "export default function minIndex(values, valueof) {\n  let min;\n  let minIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value, minIndex = index;\n      }\n    }\n  } else {\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value, minIndex = index;\n      }\n    }\n  }\n  return minIndex;\n}\n", "import {ascendingDefined, compareDefined} from \"./sort.js\";\n\n// Based on https://github.com/mourner/quickselect\n// ISC license, Copyright 2018 Vladimir Agafonkin.\nexport default function quickselect(array, k, left = 0, right = Infinity, compare) {\n  k = Math.floor(k);\n  left = Math.floor(Math.max(0, left));\n  right = Math.floor(Math.min(array.length - 1, right));\n\n  if (!(left <= k && k <= right)) return array;\n\n  compare = compare === undefined ? ascendingDefined : compareDefined(compare);\n\n  while (right > left) {\n    if (right - left > 600) {\n      const n = right - left + 1;\n      const m = k - left + 1;\n      const z = Math.log(n);\n      const s = 0.5 * Math.exp(2 * z / 3);\n      const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n      const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n      const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n      quickselect(array, k, newLeft, newRight, compare);\n    }\n\n    const t = array[k];\n    let i = left;\n    let j = right;\n\n    swap(array, left, k);\n    if (compare(array[right], t) > 0) swap(array, left, right);\n\n    while (i < j) {\n      swap(array, i, j), ++i, --j;\n      while (compare(array[i], t) < 0) ++i;\n      while (compare(array[j], t) > 0) --j;\n    }\n\n    if (compare(array[left], t) === 0) swap(array, left, j);\n    else ++j, swap(array, j, right);\n\n    if (j <= k) left = j + 1;\n    if (k <= j) right = j - 1;\n  }\n\n  return array;\n}\n\nfunction swap(array, i, j) {\n  const t = array[i];\n  array[i] = array[j];\n  array[j] = t;\n}\n", "import ascending from \"./ascending.js\";\n\nexport default function greatest(values, compare = ascending) {\n  let max;\n  let defined = false;\n  if (compare.length === 1) {\n    let maxValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (defined\n          ? ascending(value, maxValue) > 0\n          : ascending(value, value) === 0) {\n        max = element;\n        maxValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined\n          ? compare(value, max) > 0\n          : compare(value, value) === 0) {\n        max = value;\n        defined = true;\n      }\n    }\n  }\n  return max;\n}\n", "import max from \"./max.js\";\nimport maxIndex from \"./maxIndex.js\";\nimport min from \"./min.js\";\nimport minIndex from \"./minIndex.js\";\nimport quickselect from \"./quickselect.js\";\nimport number, {numbers} from \"./number.js\";\nimport {ascendingDefined} from \"./sort.js\";\nimport greatest from \"./greatest.js\";\n\nexport default function quantile(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length) || isNaN(p = +p)) return;\n  if (p <= 0 || n < 2) return min(values);\n  if (p >= 1) return max(values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n      value1 = min(values.subarray(i0 + 1));\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nexport function quantileSorted(values, p, valueof = number) {\n  if (!(n = values.length) || isNaN(p = +p)) return;\n  if (p <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nexport function quantileIndex(values, p, valueof = number) {\n  if (isNaN(p = +p)) return;\n  numbers = Float64Array.from(values, (_, i) => number(valueof(values[i], i, values)));\n  if (p <= 0) return minIndex(numbers);\n  if (p >= 1) return maxIndex(numbers);\n  var numbers,\n      index = Uint32Array.from(values, (_, i) => i),\n      j = numbers.length - 1,\n      i = Math.floor(j * p);\n  quickselect(index, i, 0, j, (i, j) => ascendingDefined(numbers[i], numbers[j]));\n  i = greatest(index.subarray(0, i + 1), (i) => numbers[i]);\n  return i >= 0 ? i : -1;\n}\n", "import count from \"../count.js\";\nimport quantile from \"../quantile.js\";\n\nexport default function thresholdFreedmanDiaconis(values, min, max) {\n  const c = count(values), d = quantile(values, 0.75) - quantile(values, 0.25);\n  return c && d ? Math.ceil((max - min) / (2 * d * Math.pow(c, -1 / 3))) : 1;\n}\n", "import count from \"../count.js\";\nimport deviation from \"../deviation.js\";\n\nexport default function thresholdScott(values, min, max) {\n  const c = count(values), d = deviation(values);\n  return c && d ? Math.ceil((max - min) * Math.cbrt(c) / (3.49 * d)) : 1;\n}\n", "export default function mean(values, valueof) {\n  let count = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  }\n  if (count) return sum / count;\n}\n", "import quantile, {quantileIndex} from \"./quantile.js\";\n\nexport default function median(values, valueof) {\n  return quantile(values, 0.5, valueof);\n}\n\nexport function medianIndex(values, valueof) {\n  return quantileIndex(values, 0.5, valueof);\n}\n", "function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n", "import {InternMap} from \"internmap\";\n\nexport default function mode(values, valueof) {\n  const counts = new InternMap();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && value >= value) {\n        counts.set(value, (counts.get(value) || 0) + 1);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && value >= value) {\n        counts.set(value, (counts.get(value) || 0) + 1);\n      }\n    }\n  }\n  let modeValue;\n  let modeCount = 0;\n  for (const [value, count] of counts) {\n    if (count > modeCount) {\n      modeCount = count;\n      modeValue = value;\n    }\n  }\n  return modeValue;\n}\n", "export default function pairs(values, pairof = pair) {\n  const pairs = [];\n  let previous;\n  let first = false;\n  for (const value of values) {\n    if (first) pairs.push(pairof(previous, value));\n    previous = value;\n    first = true;\n  }\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n", "export default function range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n", "import ascending from \"./ascending.js\";\nimport {ascendingDefined, compareDefined} from \"./sort.js\";\n\nexport default function rank(values, valueof = ascending) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  let V = Array.from(values);\n  const R = new Float64Array(V.length);\n  if (valueof.length !== 2) V = V.map(valueof), valueof = ascending;\n  const compareIndex = (i, j) => valueof(V[i], V[j]);\n  let k, r;\n  values = Uint32Array.from(V, (_, i) => i);\n  // Risky chaining due to Safari 14 https://github.com/d3/d3-array/issues/123\n  values.sort(valueof === ascending ? (i, j) => ascendingDefined(V[i], V[j]) : compareDefined(compareIndex));\n  values.forEach((j, i) => {\n      const c = compareIndex(j, k === undefined ? j : k);\n      if (c >= 0) {\n        if (k === undefined || c > 0) k = j, r = i;\n        R[j] = r;\n      } else {\n        R[j] = NaN;\n      }\n    });\n  return R;\n}\n", "import ascending from \"./ascending.js\";\n\nexport default function least(values, compare = ascending) {\n  let min;\n  let defined = false;\n  if (compare.length === 1) {\n    let minValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (defined\n          ? ascending(value, minValue) < 0\n          : ascending(value, value) === 0) {\n        min = element;\n        minValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined\n          ? compare(value, min) < 0\n          : compare(value, value) === 0) {\n        min = value;\n        defined = true;\n      }\n    }\n  }\n  return min;\n}\n", "import ascending from \"./ascending.js\";\nimport minIndex from \"./minIndex.js\";\n\nexport default function leastIndex(values, compare = ascending) {\n  if (compare.length === 1) return minIndex(values, compare);\n  let minValue;\n  let min = -1;\n  let index = -1;\n  for (const value of values) {\n    ++index;\n    if (min < 0\n        ? compare(value, value) === 0\n        : compare(value, minValue) < 0) {\n      minValue = value;\n      min = index;\n    }\n  }\n  return min;\n}\n", "import ascending from \"./ascending.js\";\nimport maxIndex from \"./maxIndex.js\";\n\nexport default function greatestIndex(values, compare = ascending) {\n  if (compare.length === 1) return maxIndex(values, compare);\n  let maxValue;\n  let max = -1;\n  let index = -1;\n  for (const value of values) {\n    ++index;\n    if (max < 0\n        ? compare(value, value) === 0\n        : compare(value, maxValue) > 0) {\n      maxValue = value;\n      max = index;\n    }\n  }\n  return max;\n}\n", "import leastIndex from \"./leastIndex.js\";\n\nexport default function scan(values, compare) {\n  const index = leastIndex(values, compare);\n  return index < 0 ? undefined : index;\n}\n", "export default shuffler(Math.random);\n\nexport function shuffler(random) {\n  return function shuffle(array, i0 = 0, i1 = array.length) {\n    let m = i1 - (i0 = +i0);\n    while (m) {\n      const i = random() * m-- | 0, t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n    return array;\n  };\n}\n", "export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n", "import min from \"./min.js\";\n\nexport default function transpose(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n", "import transpose from \"./transpose.js\";\n\nexport default function zip() {\n  return transpose(arguments);\n}\n", "export default function every(values, test) {\n  if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n  let index = -1;\n  for (const value of values) {\n    if (!test(value, ++index, values)) {\n      return false;\n    }\n  }\n  return true;\n}\n", "export default function some(values, test) {\n  if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n  let index = -1;\n  for (const value of values) {\n    if (test(value, ++index, values)) {\n      return true;\n    }\n  }\n  return false;\n}\n", "export default function filter(values, test) {\n  if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n  const array = [];\n  let index = -1;\n  for (const value of values) {\n    if (test(value, ++index, values)) {\n      array.push(value);\n    }\n  }\n  return array;\n}\n", "export default function map(values, mapper) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  if (typeof mapper !== \"function\") throw new TypeError(\"mapper is not a function\");\n  return Array.from(values, (value, index) => mapper(value, index, values));\n}\n", "export default function reduce(values, reducer, value) {\n  if (typeof reducer !== \"function\") throw new TypeError(\"reducer is not a function\");\n  const iterator = values[Symbol.iterator]();\n  let done, next, index = -1;\n  if (arguments.length < 3) {\n    ({done, value} = iterator.next());\n    if (done) return;\n    ++index;\n  }\n  while (({done, value: next} = iterator.next()), !done) {\n    value = reducer(value, next, ++index, values);\n  }\n  return value;\n}\n", "export default function reverse(values) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  return Array.from(values).reverse();\n}\n", "import {InternSet} from \"internmap\";\n\nexport default function difference(values, ...others) {\n  values = new InternSet(values);\n  for (const other of others) {\n    for (const value of other) {\n      values.delete(value);\n    }\n  }\n  return values;\n}\n", "import {InternSet} from \"internmap\";\n\nexport default function disjoint(values, other) {\n  const iterator = other[Symbol.iterator](), set = new InternSet();\n  for (const v of values) {\n    if (set.has(v)) return false;\n    let value, done;\n    while (({value, done} = iterator.next())) {\n      if (done) break;\n      if (Object.is(v, value)) return false;\n      set.add(value);\n    }\n  }\n  return true;\n}\n", "import {InternSet} from \"internmap\";\n\nexport default function intersection(values, ...others) {\n  values = new InternSet(values);\n  others = others.map(set);\n  out: for (const value of values) {\n    for (const other of others) {\n      if (!other.has(value)) {\n        values.delete(value);\n        continue out;\n      }\n    }\n  }\n  return values;\n}\n\nfunction set(values) {\n  return values instanceof InternSet ? values : new InternSet(values);\n}\n", "export default function superset(values, other) {\n  const iterator = values[Symbol.iterator](), set = new Set();\n  for (const o of other) {\n    const io = intern(o);\n    if (set.has(io)) continue;\n    let value, done;\n    while (({value, done} = iterator.next())) {\n      if (done) return false;\n      const ivalue = intern(value);\n      set.add(ivalue);\n      if (Object.is(io, ivalue)) break;\n    }\n  }\n  return true;\n}\n\nfunction intern(value) {\n  return value !== null && typeof value === \"object\" ? value.valueOf() : value;\n}\n", "import superset from \"./superset.js\";\n\nexport default function subset(values, other) {\n  return superset(other, values);\n}\n", "import {InternSet} from \"internmap\";\n\nexport default function union(...others) {\n  const set = new InternSet();\n  for (const other of others) {\n    for (const o of other) {\n      set.add(o);\n    }\n  }\n  return set;\n}\n", "export {default as bisect, bisectRight, bisectLeft, bisectCenter} from \"./bisect.js\";\nexport {default as ascending} from \"./ascending.js\";\nexport {default as bisector} from \"./bisector.js\";\nexport {blur, blur2, blurImage} from \"./blur.js\";\nexport {default as count} from \"./count.js\";\nexport {default as cross} from \"./cross.js\";\nexport {default as cumsum} from \"./cumsum.js\";\nexport {default as descending} from \"./descending.js\";\nexport {default as deviation} from \"./deviation.js\";\nexport {default as extent} from \"./extent.js\";\nexport {Adder, fsum, fcumsum} from \"./fsum.js\";\nexport {default as group, flatGroup, flatRollup, groups, index, indexes, rollup, rollups} from \"./group.js\";\nexport {default as groupSort} from \"./groupSort.js\";\nexport {default as bin, default as histogram} from \"./bin.js\"; // Deprecated; use bin.\nexport {default as thresholdFreedmanDiaconis} from \"./threshold/freedmanDiaconis.js\";\nexport {default as thresholdScott} from \"./threshold/scott.js\";\nexport {default as thresholdSturges} from \"./threshold/sturges.js\";\nexport {default as max} from \"./max.js\";\nexport {default as maxIndex} from \"./maxIndex.js\";\nexport {default as mean} from \"./mean.js\";\nexport {default as median, medianIndex} from \"./median.js\";\nexport {default as merge} from \"./merge.js\";\nexport {default as min} from \"./min.js\";\nexport {default as minIndex} from \"./minIndex.js\";\nexport {default as mode} from \"./mode.js\";\nexport {default as nice} from \"./nice.js\";\nexport {default as pairs} from \"./pairs.js\";\nexport {default as permute} from \"./permute.js\";\nexport {default as quantile, quantileIndex, quantileSorted} from \"./quantile.js\";\nexport {default as quickselect} from \"./quickselect.js\";\nexport {default as range} from \"./range.js\";\nexport {default as rank} from \"./rank.js\";\nexport {default as least} from \"./least.js\";\nexport {default as leastIndex} from \"./leastIndex.js\";\nexport {default as greatest} from \"./greatest.js\";\nexport {default as greatestIndex} from \"./greatestIndex.js\";\nexport {default as scan} from \"./scan.js\"; // Deprecated; use leastIndex.\nexport {default as shuffle, shuffler} from \"./shuffle.js\";\nexport {default as sum} from \"./sum.js\";\nexport {default as ticks, tickIncrement, tickStep} from \"./ticks.js\";\nexport {default as transpose} from \"./transpose.js\";\nexport {default as variance} from \"./variance.js\";\nexport {default as zip} from \"./zip.js\";\nexport {default as every} from \"./every.js\";\nexport {default as some} from \"./some.js\";\nexport {default as filter} from \"./filter.js\";\nexport {default as map} from \"./map.js\";\nexport {default as reduce} from \"./reduce.js\";\nexport {default as reverse} from \"./reverse.js\";\nexport {default as sort} from \"./sort.js\";\nexport {default as difference} from \"./difference.js\";\nexport {default as disjoint} from \"./disjoint.js\";\nexport {default as intersection} from \"./intersection.js\";\nexport {default as subset} from \"./subset.js\";\nexport {default as superset} from \"./superset.js\";\nexport {default as union} from \"./union.js\";\nexport {InternMap, InternSet} from \"internmap\";\n", "export default function(x) {\n  return x;\n}\n", "import identity from \"./identity.js\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + x + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + y + \")\";\n}\n\nfunction number(scale) {\n  return d => +scale(d);\n}\n\nfunction center(scale, offset) {\n  offset = Math.max(0, scale.bandwidth() - offset * 2) / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return d => +scale(d) + offset;\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      offset = typeof window !== \"undefined\" && window.devicePixelRatio > 1 ? 0 : 0.5,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + offset,\n        range1 = +range[range.length - 1] + offset,\n        position = (scale.bandwidth ? center : number)(scale.copy(), offset),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"currentColor\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d + offset) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform((p && isFinite(p = p(d)) ? p : position(d)) + offset); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient === right\n            ? (tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H\" + offset + \"V\" + range1 + \"H\" + k * tickSizeOuter : \"M\" + offset + \",\" + range0 + \"V\" + range1)\n            : (tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V\" + offset + \"H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",\" + offset + \"H\" + range1));\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d) + offset); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = Array.from(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : Array.from(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : Array.from(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  axis.offset = function(_) {\n    return arguments.length ? (offset = +_, axis) : offset;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n", "export {\n  axisTop,\n  axisRight,\n  axisBottom,\n  axisLeft\n} from \"./axis.js\";\n", "var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n", "export {default as dispatch} from \"./dispatch.js\";\n", "export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n", "import namespaces from \"./namespaces.js\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name; // eslint-disable-line no-prototype-builtins\n}\n", "import namespace from \"./namespace.js\";\nimport {xhtml} from \"./namespaces.js\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n", "function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n", "import {Selection} from \"./index.js\";\nimport selector from \"../selector.js\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n", "// Given something array like (or null), returns something that is strictly an\n// array. This is used to ensure that array-like objects passed to d3.selectAll\n// or selection.selectAll are converted into proper arrays when creating a\n// selection; we don\u2019t ever want to create a selection backed by a live\n// HTMLCollection or NodeList. However, note that selection.selectAll will use a\n// static NodeList as a group, since it safely derived from querySelectorAll.\nexport default function array(x) {\n  return x == null ? [] : Array.isArray(x) ? x : Array.from(x);\n}\n", "function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n", "import {Selection} from \"./index.js\";\nimport array from \"../array.js\";\nimport selectorAll from \"../selectorAll.js\";\n\nfunction arrayAll(select) {\n  return function() {\n    return array(select.apply(this, arguments));\n  };\n}\n\nexport default function(select) {\n  if (typeof select === \"function\") select = arrayAll(select);\n  else select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n", "export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n\nexport function childMatcher(selector) {\n  return function(node) {\n    return node.matches(selector);\n  };\n}\n\n", "import {childMatcher} from \"../matcher.js\";\n\nvar find = Array.prototype.find;\n\nfunction childFind(match) {\n  return function() {\n    return find.call(this.children, match);\n  };\n}\n\nfunction childFirst() {\n  return this.firstElementChild;\n}\n\nexport default function(match) {\n  return this.select(match == null ? childFirst\n      : childFind(typeof match === \"function\" ? match : childMatcher(match)));\n}\n", "import {childMatcher} from \"../matcher.js\";\n\nvar filter = Array.prototype.filter;\n\nfunction children() {\n  return Array.from(this.children);\n}\n\nfunction childrenFilter(match) {\n  return function() {\n    return filter.call(this.children, match);\n  };\n}\n\nexport default function(match) {\n  return this.selectAll(match == null ? children\n      : childrenFilter(typeof match === \"function\" ? match : childMatcher(match)));\n}\n", "import {Selection} from \"./index.js\";\nimport matcher from \"../matcher.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n", "export default function(update) {\n  return new Array(update.length);\n}\n", "import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n", "export default function(x) {\n  return function() {\n    return x;\n  };\n}\n", "import {Selection} from \"./index.js\";\nimport {EnterNode} from \"./enter.js\";\nimport constant from \"../constant.js\";\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don\u2019t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = new Map,\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + \"\";\n      if (nodeByKeyValue.has(keyValue)) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue.set(keyValue, node);\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = key.call(parent, data[i], i, data) + \"\";\n    if (node = nodeByKeyValue.get(keyValue)) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue.delete(keyValue);\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue.get(keyValues[i]) === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction datum(node) {\n  return node.__data__;\n}\n\nexport default function(value, key) {\n  if (!arguments.length) return Array.from(this, datum);\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = arraylike(value.call(parent, parent && parent.__data__, j, parents)),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n\n// Given some data, this returns an array-like view of it: an object that\n// exposes a length property and allows numeric indexing. Note that unlike\n// selectAll, this isn\u2019t worried about \u201Clive\u201D collections because the resulting\n// array will only be used briefly while data is being bound. (It is possible to\n// cause the data to change while iterating by using a key function, but please\n// don\u2019t; we\u2019d rather avoid a gratuitous copy.)\nfunction arraylike(data) {\n  return typeof data === \"object\" && \"length\" in data\n    ? data // Array, TypedArray, NodeList, array-like\n    : Array.from(data); // Map, Set, iterable, string, or anything else\n}\n", "import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n", "export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  if (typeof onenter === \"function\") {\n    enter = onenter(enter);\n    if (enter) enter = enter.selection();\n  } else {\n    enter = enter.append(onenter + \"\");\n  }\n  if (onupdate != null) {\n    update = onupdate(update);\n    if (update) update = update.selection();\n  }\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n", "import {Selection} from \"./index.js\";\n\nexport default function(context) {\n  var selection = context.selection ? context.selection() : context;\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n", "export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n", "import {Selection} from \"./index.js\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n", "export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n", "export default function() {\n  return Array.from(this);\n}\n", "export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n", "export default function() {\n  let size = 0;\n  for (const node of this) ++size; // eslint-disable-line no-unused-vars\n  return size;\n}\n", "export default function() {\n  return !this.node();\n}\n", "export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n", "import namespace from \"../namespace.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n", "export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n", "import defaultView from \"../window.js\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n", "function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n", "function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n", "function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n", "function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n", "function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n", "function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n", "import creator from \"../creator.js\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n", "import creator from \"../creator.js\";\nimport selector from \"../selector.js\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n", "function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n", "function selection_cloneShallow() {\n  var clone = this.cloneNode(false), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_cloneDeep() {\n  var clone = this.cloneNode(true), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n", "export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n", "function contextListener(listener) {\n  return function(event) {\n    listener.call(this, event, this.__data__);\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, options) {\n  return function() {\n    var on = this.__on, o, listener = contextListener(value);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n        this.addEventListener(o.type, o.listener = listener, o.options = options);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, options);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, options: options};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, options) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));\n  return this;\n}\n", "import defaultView from \"../window.js\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n", "export default function*() {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) yield node;\n    }\n  }\n}\n", "import selection_select from \"./select.js\";\nimport selection_selectAll from \"./selectAll.js\";\nimport selection_selectChild from \"./selectChild.js\";\nimport selection_selectChildren from \"./selectChildren.js\";\nimport selection_filter from \"./filter.js\";\nimport selection_data from \"./data.js\";\nimport selection_enter from \"./enter.js\";\nimport selection_exit from \"./exit.js\";\nimport selection_join from \"./join.js\";\nimport selection_merge from \"./merge.js\";\nimport selection_order from \"./order.js\";\nimport selection_sort from \"./sort.js\";\nimport selection_call from \"./call.js\";\nimport selection_nodes from \"./nodes.js\";\nimport selection_node from \"./node.js\";\nimport selection_size from \"./size.js\";\nimport selection_empty from \"./empty.js\";\nimport selection_each from \"./each.js\";\nimport selection_attr from \"./attr.js\";\nimport selection_style from \"./style.js\";\nimport selection_property from \"./property.js\";\nimport selection_classed from \"./classed.js\";\nimport selection_text from \"./text.js\";\nimport selection_html from \"./html.js\";\nimport selection_raise from \"./raise.js\";\nimport selection_lower from \"./lower.js\";\nimport selection_append from \"./append.js\";\nimport selection_insert from \"./insert.js\";\nimport selection_remove from \"./remove.js\";\nimport selection_clone from \"./clone.js\";\nimport selection_datum from \"./datum.js\";\nimport selection_on from \"./on.js\";\nimport selection_dispatch from \"./dispatch.js\";\nimport selection_iterator from \"./iterator.js\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nfunction selection_selection() {\n  return this;\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  selectChild: selection_selectChild,\n  selectChildren: selection_selectChildren,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  selection: selection_selection,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch,\n  [Symbol.iterator]: selection_iterator\n};\n\nexport default selection;\n", "import {Selection, root} from \"./selection/index.js\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n", "import creator from \"./creator.js\";\nimport select from \"./select.js\";\n\nexport default function(name) {\n  return select(creator(name).call(document.documentElement));\n}\n", "var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n", "export default function(event) {\n  let sourceEvent;\n  while (sourceEvent = event.sourceEvent) event = sourceEvent;\n  return event;\n}\n", "import sourceEvent from \"./sourceEvent.js\";\n\nexport default function(event, node) {\n  event = sourceEvent(event);\n  if (node === undefined) node = event.currentTarget;\n  if (node) {\n    var svg = node.ownerSVGElement || node;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = event.clientX, point.y = event.clientY;\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n    if (node.getBoundingClientRect) {\n      var rect = node.getBoundingClientRect();\n      return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n    }\n  }\n  return [event.pageX, event.pageY];\n}\n", "import pointer from \"./pointer.js\";\nimport sourceEvent from \"./sourceEvent.js\";\n\nexport default function(events, node) {\n  if (events.target) { // i.e., instanceof Event, not TouchList or iterable\n    events = sourceEvent(events);\n    if (node === undefined) node = events.currentTarget;\n    events = events.touches || [events];\n  }\n  return Array.from(events, event => pointer(event, node));\n}\n", "import array from \"./array.js\";\nimport {Selection, root} from \"./selection/index.js\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([array(selector)], root);\n}\n", "export {default as create} from \"./create.js\";\nexport {default as creator} from \"./creator.js\";\nexport {default as local} from \"./local.js\";\nexport {default as matcher} from \"./matcher.js\";\nexport {default as namespace} from \"./namespace.js\";\nexport {default as namespaces} from \"./namespaces.js\";\nexport {default as pointer} from \"./pointer.js\";\nexport {default as pointers} from \"./pointers.js\";\nexport {default as select} from \"./select.js\";\nexport {default as selectAll} from \"./selectAll.js\";\nexport {default as selection} from \"./selection/index.js\";\nexport {default as selector} from \"./selector.js\";\nexport {default as selectorAll} from \"./selectorAll.js\";\nexport {styleValue as style} from \"./selection/style.js\";\nexport {default as window} from \"./window.js\";\n", "// These are typically used in conjunction with noevent to ensure that we can\n// preventDefault on the event.\nexport const nonpassive = {passive: false};\nexport const nonpassivecapture = {capture: true, passive: false};\n\nexport function nopropagation(event) {\n  event.stopImmediatePropagation();\n}\n\nexport default function(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n", "import {select} from \"d3-selection\";\nimport noevent, {nonpassivecapture} from \"./noevent.js\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, nonpassivecapture);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, nonpassivecapture);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, nonpassivecapture);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n", "export default x => () => x;\n", "export default function DragEvent(type, {\n  sourceEvent,\n  subject,\n  target,\n  identifier,\n  active,\n  x, y, dx, dy,\n  dispatch\n}) {\n  Object.defineProperties(this, {\n    type: {value: type, enumerable: true, configurable: true},\n    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},\n    subject: {value: subject, enumerable: true, configurable: true},\n    target: {value: target, enumerable: true, configurable: true},\n    identifier: {value: identifier, enumerable: true, configurable: true},\n    active: {value: active, enumerable: true, configurable: true},\n    x: {value: x, enumerable: true, configurable: true},\n    y: {value: y, enumerable: true, configurable: true},\n    dx: {value: dx, enumerable: true, configurable: true},\n    dy: {value: dy, enumerable: true, configurable: true},\n    _: {value: dispatch}\n  });\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n", "import {dispatch} from \"d3-dispatch\";\nimport {select, pointer} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag.js\";\nimport noevent, {nonpassive, nonpassivecapture, nopropagation} from \"./noevent.js\";\nimport constant from \"./constant.js\";\nimport DragEvent from \"./event.js\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter(event) {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(event, d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved, nonpassive)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned(event, d) {\n    if (touchending || !filter.call(this, event, d)) return;\n    var gesture = beforestart(this, container.call(this, event, d), event, d, \"mouse\");\n    if (!gesture) return;\n    select(event.view)\n      .on(\"mousemove.drag\", mousemoved, nonpassivecapture)\n      .on(\"mouseup.drag\", mouseupped, nonpassivecapture);\n    nodrag(event.view);\n    nopropagation(event);\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\", event);\n  }\n\n  function mousemoved(event) {\n    noevent(event);\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\", event);\n  }\n\n  function mouseupped(event) {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent(event);\n    gestures.mouse(\"end\", event);\n  }\n\n  function touchstarted(event, d) {\n    if (!filter.call(this, event, d)) return;\n    var touches = event.changedTouches,\n        c = container.call(this, event, d),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(this, c, event, d, touches[i].identifier, touches[i])) {\n        nopropagation(event);\n        gesture(\"start\", event, touches[i]);\n      }\n    }\n  }\n\n  function touchmoved(event) {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent(event);\n        gesture(\"drag\", event, touches[i]);\n      }\n    }\n  }\n\n  function touchended(event) {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation(event);\n        gesture(\"end\", event, touches[i]);\n      }\n    }\n  }\n\n  function beforestart(that, container, event, d, identifier, touch) {\n    var dispatch = listeners.copy(),\n        p = pointer(touch || event, container), dx, dy,\n        s;\n\n    if ((s = subject.call(that, new DragEvent(\"beforestart\", {\n        sourceEvent: event,\n        target: drag,\n        identifier,\n        active,\n        x: p[0],\n        y: p[1],\n        dx: 0,\n        dy: 0,\n        dispatch\n      }), d)) == null) return;\n\n    dx = s.x - p[0] || 0;\n    dy = s.y - p[1] || 0;\n\n    return function gesture(type, event, touch) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[identifier] = gesture, n = active++; break;\n        case \"end\": delete gestures[identifier], --active; // falls through\n        case \"drag\": p = pointer(touch || event, container), n = active; break;\n      }\n      dispatch.call(\n        type,\n        that,\n        new DragEvent(type, {\n          sourceEvent: event,\n          subject: s,\n          target: drag,\n          identifier,\n          active: n,\n          x: p[0] + dx,\n          y: p[1] + dy,\n          dx: p[0] - p0[0],\n          dy: p[1] - p0[1],\n          dispatch\n        }),\n        d\n      );\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n", "export {default as drag} from \"./drag.js\";\nexport {default as dragDisable, yesdrag as dragEnable} from \"./nodrag.js\";\n", "export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n", "import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(`^rgb\\\\(${reI},${reI},${reI}\\\\)$`),\n    reRgbPercent = new RegExp(`^rgb\\\\(${reP},${reP},${reP}\\\\)$`),\n    reRgbaInteger = new RegExp(`^rgba\\\\(${reI},${reI},${reI},${reN}\\\\)$`),\n    reRgbaPercent = new RegExp(`^rgba\\\\(${reP},${reP},${reP},${reN}\\\\)$`),\n    reHslPercent = new RegExp(`^hsl\\\\(${reN},${reP},${reP}\\\\)$`),\n    reHslaPercent = new RegExp(`^hsla\\\\(${reN},${reP},${reP},${reN}\\\\)$`);\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHex8: color_formatHex8,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHex8() {\n  return this.rgb().formatHex8();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb() {\n    return this;\n  },\n  clamp() {\n    return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));\n  },\n  displayable() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatHex8: rgb_formatHex8,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;\n}\n\nfunction rgb_formatHex8() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;\n}\n\nfunction rgb_formatRgb() {\n  const a = clampa(this.opacity);\n  return `${a === 1 ? \"rgb(\" : \"rgba(\"}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? \")\" : `, ${a})`}`;\n}\n\nfunction clampa(opacity) {\n  return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));\n}\n\nfunction clampi(value) {\n  return Math.max(0, Math.min(255, Math.round(value) || 0));\n}\n\nfunction hex(value) {\n  value = clampi(value);\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  clamp() {\n    return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));\n  },\n  displayable() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl() {\n    const a = clampa(this.opacity);\n    return `${a === 1 ? \"hsl(\" : \"hsla(\"}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? \")\" : `, ${a})`}`;\n  }\n}));\n\nfunction clamph(value) {\n  value = (value || 0) % 360;\n  return value < 0 ? value + 360 : value;\n}\n\nfunction clampt(value) {\n  return Math.max(0, Math.min(1, value || 0));\n}\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n", "export const radians = Math.PI / 180;\nexport const degrees = 180 / Math.PI;\n", "import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nconst K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * degrees;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * radians;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb() {\n    return hcl2lab(this).rgb();\n  }\n}));\n", "import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * degrees - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * radians,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n", "export {default as color, rgb, hsl} from \"./color.js\";\nexport {default as lab, hcl, lch, gray} from \"./lab.js\";\nexport {default as cubehelix} from \"./cubehelix.js\";\n", "export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n", "import {basis} from \"./basis.js\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n", "export default x => () => x;\n", "import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n", "import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n", "export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n", "import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n", "export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n", "export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n", "import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n", "import number from \"./number.js\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n", "import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n", "export default function(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n", "import {hue} from \"./color.js\";\n\nexport default function(a, b) {\n  var i = hue(+a, +b);\n  return function(t) {\n    var x = i(t);\n    return x - 360 * Math.floor(x / 360);\n  };\n}\n", "export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n", "var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n", "import decompose, {identity} from \"./decompose.js\";\n\nvar svgNode;\n\n/* eslint-disable no-undef */\nexport function parseCss(value) {\n  const m = new (typeof DOMMatrix === \"function\" ? DOMMatrix : WebKitCSSMatrix)(value + \"\");\n  return m.isIdentity ? identity : decompose(m.a, m.b, m.c, m.d, m.e, m.f);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n", "import number from \"../number.js\";\nimport {parseCss, parseSvg} from \"./parse.js\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n", "var epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\nexport default (function zoomRho(rho, rho2, rho4) {\n\n  // p0 = [ux0, uy0, w0]\n  // p1 = [ux1, uy1, w1]\n  function zoom(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    // Special case for u0 \u2245 u1.\n    if (d2 < epsilon2) {\n      S = Math.log(w1 / w0) / rho;\n      i = function(t) {\n        return [\n          ux0 + t * dx,\n          uy0 + t * dy,\n          w0 * Math.exp(rho * t * S)\n        ];\n      }\n    }\n\n    // General case.\n    else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / rho;\n      i = function(t) {\n        var s = t * S,\n            coshr0 = cosh(r0),\n            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n        return [\n          ux0 + u * dx,\n          uy0 + u * dy,\n          w0 * coshr0 / cosh(rho * s + r0)\n        ];\n      }\n    }\n\n    i.duration = S * 1000 * rho / Math.SQRT2;\n\n    return i;\n  }\n\n  zoom.rho = function(_) {\n    var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;\n    return zoomRho(_1, _2, _4);\n  };\n\n  return zoom;\n})(Math.SQRT2, 2, 4);\n", "import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n", "import {lab as colorLab} from \"d3-color\";\nimport color from \"./color.js\";\n\nexport default function lab(start, end) {\n  var l = color((start = colorLab(start)).l, (end = colorLab(end)).l),\n      a = color(start.a, end.a),\n      b = color(start.b, end.b),\n      opacity = color(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n", "import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n", "import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n", "import {default as value} from \"./value.js\";\n\nexport default function piecewise(interpolate, values) {\n  if (values === undefined) values = interpolate, interpolate = value;\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n", "export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n", "export {default as interpolate} from \"./value.js\";\nexport {default as interpolateArray} from \"./array.js\";\nexport {default as interpolateBasis} from \"./basis.js\";\nexport {default as interpolateBasisClosed} from \"./basisClosed.js\";\nexport {default as interpolateDate} from \"./date.js\";\nexport {default as interpolateDiscrete} from \"./discrete.js\";\nexport {default as interpolateHue} from \"./hue.js\";\nexport {default as interpolateNumber} from \"./number.js\";\nexport {default as interpolateNumberArray} from \"./numberArray.js\";\nexport {default as interpolateObject} from \"./object.js\";\nexport {default as interpolateRound} from \"./round.js\";\nexport {default as interpolateString} from \"./string.js\";\nexport {interpolateTransformCss, interpolateTransformSvg} from \"./transform/index.js\";\nexport {default as interpolateZoom} from \"./zoom.js\";\nexport {default as interpolateRgb, rgbBasis as interpolateRgbBasis, rgbBasisClosed as interpolateRgbBasisClosed} from \"./rgb.js\";\nexport {default as interpolateHsl, hslLong as interpolateHslLong} from \"./hsl.js\";\nexport {default as interpolateLab} from \"./lab.js\";\nexport {default as interpolateHcl, hclLong as interpolateHclLong} from \"./hcl.js\";\nexport {default as interpolateCubehelix, cubehelixLong as interpolateCubehelixLong} from \"./cubehelix.js\";\nexport {default as piecewise} from \"./piecewise.js\";\nexport {default as quantize} from \"./quantize.js\";\n", "var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we\u2019ve set an alarm, if we haven\u2019t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n", "import {Timer} from \"./timer.js\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(elapsed => {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n", "import {Timer, now} from \"./timer.js\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  t._restart = t.restart;\n  t.restart = function(callback, delay, time) {\n    delay = +delay, time = time == null ? now() : +time;\n    t._restart(function tick(elapsed) {\n      elapsed += total;\n      t._restart(tick, total += delay, time);\n      callback(elapsed);\n    }, delay, time);\n  }\n  t.restart(callback, delay, time);\n  return t;\n}\n", "export {\n  now,\n  timer,\n  timerFlush\n} from \"./timer.js\";\n\nexport {\n  default as timeout\n} from \"./timeout.js\";\n\nexport {\n  default as interval\n} from \"./interval.js\";\n", "import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n", "import {STARTING, ENDING, ENDED} from \"./transition/schedule.js\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n", "import interrupt from \"../interrupt.js\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n", "import {get, set} from \"./schedule.js\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we\u2019re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we\u2019re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n", "import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n", "import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween.js\";\nimport interpolate from \"./interpolate.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n", "import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i.call(this, t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n", "import {get, init} from \"./schedule.js\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n", "import {get, set} from \"./schedule.js\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n", "import {get, set} from \"./schedule.js\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n", "import {set} from \"./schedule.js\";\n\nfunction easeVarying(id, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (typeof v !== \"function\") throw new Error;\n    set(this, id).ease = v;\n  };\n}\n\nexport default function(value) {\n  if (typeof value !== \"function\") throw new Error;\n  return this.each(easeVarying(this._id, value));\n}\n", "import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n", "import {Transition} from \"./index.js\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n", "import {get, set, init} from \"./schedule.js\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we\u2019re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n", "function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n", "import {selector} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n", "import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n", "import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n", "import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule.js\";\nimport {tweenValue} from \"./tween.js\";\nimport interpolate from \"./interpolate.js\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we\u2019re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n", "function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i.call(this, t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n", "import {tweenValue} from \"./tween.js\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n", "function textInterpolate(i) {\n  return function(t) {\n    this.textContent = i.call(this, t);\n  };\n}\n\nfunction textTween(value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(value) {\n  var key = \"text\";\n  if (arguments.length < 1) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, textTween(value));\n}\n", "import {Transition, newId} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n", "import {set} from \"./schedule.js\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we\u2019re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n\n    // The selection was empty, resolve end immediately\n    if (size === 0) resolve();\n  });\n}\n", "import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr.js\";\nimport transition_attrTween from \"./attrTween.js\";\nimport transition_delay from \"./delay.js\";\nimport transition_duration from \"./duration.js\";\nimport transition_ease from \"./ease.js\";\nimport transition_easeVarying from \"./easeVarying.js\";\nimport transition_filter from \"./filter.js\";\nimport transition_merge from \"./merge.js\";\nimport transition_on from \"./on.js\";\nimport transition_remove from \"./remove.js\";\nimport transition_select from \"./select.js\";\nimport transition_selectAll from \"./selectAll.js\";\nimport transition_selection from \"./selection.js\";\nimport transition_style from \"./style.js\";\nimport transition_styleTween from \"./styleTween.js\";\nimport transition_text from \"./text.js\";\nimport transition_textTween from \"./textTween.js\";\nimport transition_transition from \"./transition.js\";\nimport transition_tween from \"./tween.js\";\nimport transition_end from \"./end.js\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  selectChild: selection_prototype.selectChild,\n  selectChildren: selection_prototype.selectChildren,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  textTween: transition_textTween,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  easeVarying: transition_easeVarying,\n  end: transition_end,\n  [Symbol.iterator]: selection_prototype[Symbol.iterator]\n};\n", "export const linear = t => +t;\n", "export function quadIn(t) {\n  return t * t;\n}\n\nexport function quadOut(t) {\n  return t * (2 - t);\n}\n\nexport function quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n", "export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n", "var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n", "var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return (+t === 1) ? 1 : 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n", "// tpmt is two power minus ten times t scaled to [0,1]\nexport function tpmt(x) {\n  return (Math.pow(2, -10 * x) - 0.0009765625) * 1.0009775171065494;\n}\n", "import {tpmt} from \"./math.js\";\n\nexport function expIn(t) {\n  return tpmt(1 - +t);\n}\n\nexport function expOut(t) {\n  return 1 - tpmt(t);\n}\n\nexport function expInOut(t) {\n  return ((t *= 2) <= 1 ? tpmt(1 - t) : 2 - tpmt(t - 1)) / 2;\n}\n", "export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n", "var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n", "var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return (t = +t) * t * (s * (t - 1) + t);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((t + 1) * s + t) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n", "import {tpmt} from \"./math.js\";\n\nvar tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * tpmt(-(--t)) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * tpmt(t = +t) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * tpmt(-t) * Math.sin((s - t) / p)\n        : 2 - a * tpmt(t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n", "export {\n  linear as easeLinear\n} from \"./linear.js\";\n\nexport {\n  quadInOut as easeQuad,\n  quadIn as easeQuadIn,\n  quadOut as easeQuadOut,\n  quadInOut as easeQuadInOut\n} from \"./quad.js\";\n\nexport {\n  cubicInOut as easeCubic,\n  cubicIn as easeCubicIn,\n  cubicOut as easeCubicOut,\n  cubicInOut as easeCubicInOut\n} from \"./cubic.js\";\n\nexport {\n  polyInOut as easePoly,\n  polyIn as easePolyIn,\n  polyOut as easePolyOut,\n  polyInOut as easePolyInOut\n} from \"./poly.js\";\n\nexport {\n  sinInOut as easeSin,\n  sinIn as easeSinIn,\n  sinOut as easeSinOut,\n  sinInOut as easeSinInOut\n} from \"./sin.js\";\n\nexport {\n  expInOut as easeExp,\n  expIn as easeExpIn,\n  expOut as easeExpOut,\n  expInOut as easeExpInOut\n} from \"./exp.js\";\n\nexport {\n  circleInOut as easeCircle,\n  circleIn as easeCircleIn,\n  circleOut as easeCircleOut,\n  circleInOut as easeCircleInOut\n} from \"./circle.js\";\n\nexport {\n  bounceOut as easeBounce,\n  bounceIn as easeBounceIn,\n  bounceOut as easeBounceOut,\n  bounceInOut as easeBounceInOut\n} from \"./bounce.js\";\n\nexport {\n  backInOut as easeBack,\n  backIn as easeBackIn,\n  backOut as easeBackOut,\n  backInOut as easeBackInOut\n} from \"./back.js\";\n\nexport {\n  elasticOut as easeElastic,\n  elasticIn as easeElasticIn,\n  elasticOut as easeElasticOut,\n  elasticInOut as easeElasticInOut\n} from \"./elastic.js\";\n", "import {Transition, newId} from \"../transition/index.js\";\nimport schedule from \"../transition/schedule.js\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      throw new Error(`transition ${id} not found`);\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n", "import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt.js\";\nimport selection_transition from \"./transition.js\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n", "import {Transition} from \"./transition/index.js\";\nimport {SCHEDULED} from \"./transition/schedule.js\";\n\nvar root = [null];\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n", "import \"./selection/index.js\";\nexport {default as transition} from \"./transition/index.js\";\nexport {default as active} from \"./active.js\";\nexport {default as interrupt} from \"./interrupt.js\";\n", "export default x => () => x;\n", "export default function BrushEvent(type, {\n  sourceEvent,\n  target,\n  selection,\n  mode,\n  dispatch\n}) {\n  Object.defineProperties(this, {\n    type: {value: type, enumerable: true, configurable: true},\n    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},\n    target: {value: target, enumerable: true, configurable: true},\n    selection: {value: selection, enumerable: true, configurable: true},\n    mode: {value: mode, enumerable: true, configurable: true},\n    _: {value: dispatch}\n  });\n}\n", "export function nopropagation(event) {\n  event.stopImmediatePropagation();\n}\n\nexport default function(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n", "import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {pointer, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport BrushEvent from \"./event.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nconst {abs, max, min} = Math;\n\nfunction number1(e) {\n  return [+e[0], +e[1]];\n}\n\nfunction number2(e) {\n  return [number1(e[0]), number1(e[1])];\n}\n\nvar X = {\n  name: \"x\",\n  handles: [\"w\", \"e\"].map(type),\n  input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\n  input: function(xy) { return xy == null ? null : number2(xy); },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter(event) {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  if (svg.hasAttribute(\"viewBox\")) {\n    svg = svg.viewBox.baseVal;\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n  }\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\n// Like d3.local, but with the name \u201C__brush\u201D rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      touchable = defaultTouchable,\n      keys = true,\n      listeners = dispatch(\"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .on(\"mousedown.brush\", started)\n      .filter(touchable)\n        .on(\"touchstart.brush\", started)\n        .on(\"touchmove.brush\", touchmoved)\n        .on(\"touchend.brush touchcancel.brush\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  brush.move = function(group, selection, event) {\n    if (group.tween) {\n      group\n          .on(\"start.brush\", function(event) { emitter(this, arguments).beforestart().start(event); })\n          .on(\"interrupt.brush end.brush\", function(event) { emitter(this, arguments).end(event); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && selection1 === null ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 !== null && selection1 !== null ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 === null ? null : selection1;\n            redraw.call(that);\n            emit.start(event).brush(event).end(event);\n          });\n    }\n  };\n\n  brush.clear = function(group, event) {\n    brush.move(group, null, event);\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args, clean) {\n    var emit = that.__brush.emitter;\n    return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);\n  }\n\n  function Emitter(that, args, clean) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n    this.clean = clean;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function(event, mode) {\n      if (this.starting) this.starting = false, this.emit(\"start\", event, mode);\n      else this.emit(\"brush\", event);\n      return this;\n    },\n    brush: function(event, mode) {\n      this.emit(\"brush\", event, mode);\n      return this;\n    },\n    end: function(event, mode) {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\", event, mode);\n      return this;\n    },\n    emit: function(type, event, mode) {\n      var d = select(this.that).datum();\n      listeners.call(\n        type,\n        this.that,\n        new BrushEvent(type, {\n          sourceEvent: event,\n          target: brush,\n          selection: dim.output(this.state.selection),\n          mode,\n          dispatch: listeners\n        }),\n        d\n      );\n    }\n  };\n\n  function started(event) {\n    if (touchending && !event.touches) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (keys && event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (keys && event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx = 0,\n        dy = 0,\n        moving,\n        shifting = signX && signY && keys && event.shiftKey,\n        lockX,\n        lockY,\n        points = Array.from(event.touches || [event], t => {\n          const i = t.identifier;\n          t = pointer(t, that);\n          t.point0 = t.slice();\n          t.identifier = i;\n          return t;\n        });\n\n    interrupt(that);\n    var emit = emitter(that, arguments, true).beforestart();\n\n    if (type === \"overlay\") {\n      if (selection) moving = true;\n      const pts = [points[0], points[1] || points[0]];\n      state.selection = selection = [[\n          w0 = dim === Y ? W : min(pts[0][0], pts[1][0]),\n          n0 = dim === X ? N : min(pts[0][1], pts[1][1])\n        ], [\n          e0 = dim === Y ? E : max(pts[0][0], pts[1][0]),\n          s0 = dim === X ? S : max(pts[0][1], pts[1][1])\n        ]];\n      if (points.length > 1) move(event);\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      emit.moved = moved;\n      emit.ended = ended;\n    } else {\n      var view = select(event.view)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n      if (keys) view\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n\n      dragDisable(event.view);\n    }\n\n    redraw.call(that);\n    emit.start(event, mode.name);\n\n    function moved(event) {\n      for (const p of event.changedTouches || [event]) {\n        for (const d of points)\n          if (d.identifier === p.identifier) d.cur = pointer(p, that);\n      }\n      if (shifting && !lockX && !lockY && points.length === 1) {\n        const point = points[0];\n        if (abs(point.cur[0] - point[0]) > abs(point.cur[1] - point[1]))\n          lockY = true;\n        else\n          lockX = true;\n      }\n      for (const point of points)\n        if (point.cur) point[0] = point.cur[0], point[1] = point.cur[1];\n      moving = true;\n      noevent(event);\n      move(event);\n    }\n\n    function move(event) {\n      const point = points[0], point0 = point.point0;\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = max(W - w0, min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = max(N - n0, min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (points[1]) {\n            if (signX) w1 = max(W, min(E, points[0][0])), e1 = max(W, min(E, points[1][0])), signX = 1;\n            if (signY) n1 = max(N, min(S, points[0][1])), s1 = max(N, min(S, points[1][1])), signY = 1;\n          } else {\n            if (signX < 0) dx = max(W - w0, min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n            else if (signX > 0) dx = max(W - e0, min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n            if (signY < 0) dy = max(N - n0, min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n            else if (signY > 0) dy = max(N - s0, min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          }\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = max(W, min(E, w0 - dx * signX)), e1 = max(W, min(E, e0 + dx * signX));\n          if (signY) n1 = max(N, min(S, n0 - dy * signY)), s1 = max(N, min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush(event, mode.name);\n      }\n    }\n\n    function ended(event) {\n      nopropagation(event);\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end(event, mode.name);\n    }\n\n    function keydowned(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move(event);\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move(event);\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n\n    function keyupped(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move(event);\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move(event);\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move(event);\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n  }\n\n  function touchmoved(event) {\n    emitter(this, arguments).moved(event);\n  }\n\n  function touchended(event) {\n    emitter(this, arguments).ended(event);\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = number2(extent.apply(this, arguments));\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant(number2(_)), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), brush) : touchable;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.keyModifiers = function(_) {\n    return arguments.length ? (keys = !!_, brush) : keys;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n", "export {\n  default as brush,\n  brushX,\n  brushY,\n  brushSelection\n} from \"./brush.js\";\n", "export var abs = Math.abs;\nexport var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\nexport var epsilon = 1e-12;\n", "import {max, tau} from \"./math.js\";\n\nfunction range(i, j) {\n  return Array.from({length: j - i}, (_, k) => i + k);\n}\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  return chord(false, false);\n}\n\nexport function chordTranspose() {\n  return chord(false, true);\n}\n\nexport function chordDirected() {\n  return chord(true, false);\n}\n\nfunction chord(directed, transpose) {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = new Array(n),\n        groupIndex = range(0, n),\n        chords = new Array(n * n),\n        groups = new Array(n),\n        k = 0, dx;\n\n    matrix = Float64Array.from({length: n * n}, transpose\n        ? (_, i) => matrix[i % n][i / n | 0]\n        : (_, i) => matrix[i / n | 0][i % n]);\n\n    // Compute the scaling factor from value to angle in [0, 2pi].\n    for (let i = 0; i < n; ++i) {\n      let x = 0;\n      for (let j = 0; j < n; ++j) x += matrix[i * n + j] + directed * matrix[j * n + i];\n      k += groupSums[i] = x;\n    }\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the angles for each group and constituent chord.\n    {\n      let x = 0;\n      if (sortGroups) groupIndex.sort((a, b) => sortGroups(groupSums[a], groupSums[b]));\n      for (const i of groupIndex) {\n        const x0 = x;\n        if (directed) {\n          const subgroupIndex = range(~n + 1, n).filter(j => j < 0 ? matrix[~j * n + i] : matrix[i * n + j]);\n          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(a < 0 ? -matrix[~a * n + i] : matrix[i * n + a], b < 0 ? -matrix[~b * n + i] : matrix[i * n + b]));\n          for (const j of subgroupIndex) {\n            if (j < 0) {\n              const chord = chords[~j * n + i] || (chords[~j * n + i] = {source: null, target: null});\n              chord.target = {index: i, startAngle: x, endAngle: x += matrix[~j * n + i] * k, value: matrix[~j * n + i]};\n            } else {\n              const chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});\n              chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n            }\n          }\n          groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};\n        } else {\n          const subgroupIndex = range(0, n).filter(j => matrix[i * n + j] || matrix[j * n + i]);\n          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(matrix[i * n + a], matrix[i * n + b]));\n          for (const j of subgroupIndex) {\n            let chord;\n            if (i < j) {\n              chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});\n              chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n            } else {\n              chord = chords[j * n + i] || (chords[j * n + i] = {source: null, target: null});\n              chord.target = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n              if (i === j) chord.source = chord.target;\n            }\n            if (chord.source && chord.target && chord.source.value < chord.target.value) {\n              const source = chord.source;\n              chord.source = chord.target;\n              chord.target = source;\n            }\n          }\n          groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};\n        }\n        x += dx;\n      }\n    }\n\n    // Remove empty chords.\n    chords = Object.values(chords);\n    chords.groups = groups;\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n", "const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction append(strings) {\n  this._ += strings[0];\n  for (let i = 1, n = strings.length; i < n; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  let d = Math.floor(digits);\n  if (!(d >= 0)) throw new Error(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  const k = 10 ** d;\n  return function(strings) {\n    this._ += strings[0];\n    for (let i = 1, n = strings.length; i < n; ++i) {\n      this._ += Math.round(arguments[i] * k) / k + strings[i];\n    }\n  };\n}\n\nexport class Path {\n  constructor(digits) {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n    this._append = digits == null ? append : appendRound(digits);\n  }\n  moveTo(x, y) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._append`Z`;\n    }\n  }\n  lineTo(x, y) {\n    this._append`L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  quadraticCurveTo(x1, y1, x, y) {\n    this._append`Q${+x1},${+y1},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._append`C${+x1},${+y1},${+x2},${+y2},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._append`M${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._append`L${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      let x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._append`L${x1 + t01 * x01},${y1 + t01 * y01}`;\n      }\n\n      this._append`A${r},${r},0,0,${+(y01 * x20 > x01 * y20)},${this._x1 = x1 + t21 * x21},${this._y1 = y1 + t21 * y21}`;\n    }\n  }\n  arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._append`M${x0},${y0}`;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._append`L${x0},${y0}`;\n    }\n\n    // Is this arc empty? We\u2019re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._append`A${r},${r},0,1,${cw},${x - dx},${y - dy}A${r},${r},0,1,${cw},${this._x1 = x0},${this._y1 = y0}`;\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._append`A${r},${r},0,${+(da >= pi)},${cw},${this._x1 = x + r * Math.cos(a1)},${this._y1 = y + r * Math.sin(a1)}`;\n    }\n  }\n  rect(x, y, w, h) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${w = +w}v${+h}h${-w}Z`;\n  }\n  toString() {\n    return this._;\n  }\n}\n\nexport function path() {\n  return new Path;\n}\n\n// Allow instanceof d3.path\npath.prototype = Path.prototype;\n\nexport function pathRound(digits = 3) {\n  return new Path(+digits);\n}\n", "export {Path, path, pathRound} from \"./path.js\";\n", "export var slice = Array.prototype.slice;\n", "export default function(x) {\n  return function() {\n    return x;\n  };\n}\n", "import {path} from \"d3-path\";\nimport {slice} from \"./array.js\";\nimport constant from \"./constant.js\";\nimport {abs, cos, epsilon, halfPi, sin} from \"./math.js\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction defaultPadAngle() {\n  return 0;\n}\n\nfunction defaultArrowheadRadius() {\n  return 10;\n}\n\nfunction ribbon(headRadius) {\n  var source = defaultSource,\n      target = defaultTarget,\n      sourceRadius = defaultRadius,\n      targetRadius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      padAngle = defaultPadAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        s = source.apply(this, arguments),\n        t = target.apply(this, arguments),\n        ap = padAngle.apply(this, arguments) / 2,\n        argv = slice.call(arguments),\n        sr = +sourceRadius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        tr = +targetRadius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = path();\n\n    if (ap > epsilon) {\n      if (abs(sa1 - sa0) > ap * 2 + epsilon) sa1 > sa0 ? (sa0 += ap, sa1 -= ap) : (sa0 -= ap, sa1 += ap);\n      else sa0 = sa1 = (sa0 + sa1) / 2;\n      if (abs(ta1 - ta0) > ap * 2 + epsilon) ta1 > ta0 ? (ta0 += ap, ta1 -= ap) : (ta0 -= ap, ta1 += ap);\n      else ta0 = ta1 = (ta0 + ta1) / 2;\n    }\n\n    context.moveTo(sr * cos(sa0), sr * sin(sa0));\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) {\n      if (headRadius) {\n        var hr = +headRadius.apply(this, arguments), tr2 = tr - hr, ta2 = (ta0 + ta1) / 2;\n        context.quadraticCurveTo(0, 0, tr2 * cos(ta0), tr2 * sin(ta0));\n        context.lineTo(tr * cos(ta2), tr * sin(ta2));\n        context.lineTo(tr2 * cos(ta1), tr2 * sin(ta1));\n      } else {\n        context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n        context.arc(0, 0, tr, ta0, ta1);\n      }\n    }\n    context.quadraticCurveTo(0, 0, sr * cos(sa0), sr * sin(sa0));\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  if (headRadius) ribbon.headRadius = function(_) {\n    return arguments.length ? (headRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : headRadius;\n  };\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (sourceRadius = targetRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : sourceRadius;\n  };\n\n  ribbon.sourceRadius = function(_) {\n    return arguments.length ? (sourceRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : sourceRadius;\n  };\n\n  ribbon.targetRadius = function(_) {\n    return arguments.length ? (targetRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : targetRadius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : padAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n\nexport default function() {\n  return ribbon();\n}\n\nexport function ribbonArrow() {\n  return ribbon(defaultArrowheadRadius);\n}\n", "export {default as chord, chordTranspose, chordDirected} from \"./chord.js\";\nexport {default as ribbon, ribbonArrow} from \"./ribbon.js\";\n", "var array = Array.prototype;\n\nexport var slice = array.slice;\n", "export default function(a, b) {\n  return a - b;\n}\n", "export default function(ring) {\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n", "export default x => () => x;\n", "export default function(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n", "export default function() {}\n", "import {extent, nice, thresholdSturges, ticks} from \"d3-array\";\nimport {slice} from \"./array.js\";\nimport ascending from \"./ascending.js\";\nimport area from \"./area.js\";\nimport constant from \"./constant.js\";\nimport contains from \"./contains.js\";\nimport noop from \"./noop.js\";\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      threshold = thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      const e = extent(values, finite);\n      tz = ticks(...nice(e[0], e[1], tz), tz);\n      while (tz[tz.length - 1] >= e[1]) tz.pop();\n      while (tz[1] < e[0]) tz.shift();\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n\n    return tz.map(value => contour(values, value));\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    const v = value == null ? NaN : +value;\n    if (isNaN(v)) throw new Error(`invalid value: ${value}`);\n\n    var polygons = [],\n        holes = [];\n\n    isorings(values, v, function(ring) {\n      smooth(ring, values, v);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = above(values[0], value);\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = above(values[x + 1], value);\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = above(values[y * dx + dx], value);\n      t2 = above(values[y * dx], value);\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = above(values[y * dx + dx + x + 1], value);\n        t3 = t2, t2 = above(values[y * dx + x + 1], value);\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = above(values[y * dx + x + 1], value);\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v1 = valid(values[yt * dx + xt]);\n      if (x > 0 && x < dx && xt === x) {\n        point[0] = smooth1(x, valid(values[yt * dx + xt - 1]), v1, value);\n      }\n      if (y > 0 && y < dy && yt === y) {\n        point[1] = smooth1(y, valid(values[(yt - 1) * dx + xt]), v1, value);\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.floor(_[0]), _1 = Math.floor(_[1]);\n    if (!(_0 >= 0 && _1 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n\n// When computing the extent, ignore infinite values (as well as invalid ones).\nfunction finite(x) {\n  return isFinite(x) ? x : NaN;\n}\n\n// Is the (possibly invalid) x greater than or equal to the (known valid) value?\n// Treat any invalid value as below negative infinity.\nfunction above(x, value) {\n  return x == null ? false : +x >= value;\n}\n\n// During smoothing, treat any invalid value as negative infinity.\nfunction valid(v) {\n  return v == null || isNaN(v = +v) ? -Infinity : v;\n}\n\nfunction smooth1(x, v0, v1, value) {\n  const a = value - v0;\n  const b = v1 - v0;\n  const d = isFinite(a) || isFinite(b) ? a / b : Math.sign(a) / Math.sign(b);\n  return isNaN(d) ? x : x + d - 0.5;\n}\n", "import {blur2, max, ticks} from \"d3-array\";\nimport {slice} from \"./array.js\";\nimport constant from \"./constant.js\";\nimport Contours from \"./contours.js\";\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nexport default function() {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function grid(data) {\n    var values = new Float32Array(n * m),\n        pow2k = Math.pow(2, -k),\n        i = -1;\n\n    for (const d of data) {\n      var xi = (x(d, ++i, data) + o) * pow2k,\n          yi = (y(d, i, data) + o) * pow2k,\n          wi = +weight(d, i, data);\n      if (wi && xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        var x0 = Math.floor(xi),\n            y0 = Math.floor(yi),\n            xt = xi - x0 - 0.5,\n            yt = yi - y0 - 0.5;\n        values[x0 + y0 * n] += (1 - xt) * (1 - yt) * wi;\n        values[x0 + 1 + y0 * n] += xt * (1 - yt) * wi;\n        values[x0 + 1 + (y0 + 1) * n] += xt * yt * wi;\n        values[x0 + (y0 + 1) * n] += (1 - xt) * yt * wi;\n      }\n    }\n\n    blur2({data: values, width: n, height: m}, r * pow2k);\n    return values;\n  }\n\n  function density(data) {\n    var values = grid(data),\n        tz = threshold(values),\n        pow4k = Math.pow(2, 2 * k);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = ticks(Number.MIN_VALUE, max(values) / pow4k, tz);\n    }\n\n    return Contours()\n        .size([n, m])\n        .thresholds(tz.map(d => d * pow4k))\n      (values)\n        .map((c, i) => (c.value = +tz[i], transform(c)));\n  }\n\n  density.contours = function(data) {\n    var values = grid(data),\n        contours = Contours().size([n, m]),\n        pow4k = Math.pow(2, 2 * k),\n        contour = value => {\n          value = +value;\n          var c = transform(contours.contour(values, value * pow4k));\n          c.value = value; // preserve exact threshold value\n          return c;\n        };\n    Object.defineProperty(contour, \"max\", {get: () => max(values) / pow4k});\n    return contour;\n  };\n\n  function transform(geometry) {\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = +_[0], _1 = +_[1];\n    if (!(_0 >= 0 && _1 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = (Math.sqrt(4 * _ * _ + 1) - 1) / 2, resize();\n  };\n\n  return density;\n}\n", "export {default as contours} from \"./contours.js\";\nexport {default as contourDensity} from \"./density.js\";\n", "export const epsilon = 1.1102230246251565e-16;\nexport const splitter = 134217729;\nexport const resulterrbound = (3 + 8 * epsilon) * epsilon;\n\n// fast_expansion_sum_zeroelim routine from oritinal code\nexport function sum(elen, e, flen, f, h) {\n    let Q, Qnew, hh, bvirt;\n    let enow = e[0];\n    let fnow = f[0];\n    let eindex = 0;\n    let findex = 0;\n    if ((fnow > enow) === (fnow > -enow)) {\n        Q = enow;\n        enow = e[++eindex];\n    } else {\n        Q = fnow;\n        fnow = f[++findex];\n    }\n    let hindex = 0;\n    if (eindex < elen && findex < flen) {\n        if ((fnow > enow) === (fnow > -enow)) {\n            Qnew = enow + Q;\n            hh = Q - (Qnew - enow);\n            enow = e[++eindex];\n        } else {\n            Qnew = fnow + Q;\n            hh = Q - (Qnew - fnow);\n            fnow = f[++findex];\n        }\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        while (eindex < elen && findex < flen) {\n            if ((fnow > enow) === (fnow > -enow)) {\n                Qnew = Q + enow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (enow - bvirt);\n                enow = e[++eindex];\n            } else {\n                Qnew = Q + fnow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n                fnow = f[++findex];\n            }\n            Q = Qnew;\n            if (hh !== 0) {\n                h[hindex++] = hh;\n            }\n        }\n    }\n    while (eindex < elen) {\n        Qnew = Q + enow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\n        enow = e[++eindex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    while (findex < flen) {\n        Qnew = Q + fnow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n        fnow = f[++findex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function sum_three(alen, a, blen, b, clen, c, tmp, out) {\n    return sum(sum(alen, a, blen, b, tmp), tmp, clen, c, out);\n}\n\n// scale_expansion_zeroelim routine from oritinal code\nexport function scale(elen, e, b, h) {\n    let Q, sum, hh, product1, product0;\n    let bvirt, c, ahi, alo, bhi, blo;\n\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    let enow = e[0];\n    Q = enow * b;\n    c = splitter * enow;\n    ahi = c - (c - enow);\n    alo = enow - ahi;\n    hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);\n    let hindex = 0;\n    if (hh !== 0) {\n        h[hindex++] = hh;\n    }\n    for (let i = 1; i < elen; i++) {\n        enow = e[i];\n        product1 = enow * b;\n        c = splitter * enow;\n        ahi = c - (c - enow);\n        alo = enow - ahi;\n        product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);\n        sum = Q + product0;\n        bvirt = sum - Q;\n        hh = Q - (sum - bvirt) + (product0 - bvirt);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        Q = product1 + sum;\n        hh = sum - (Q - product1);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function negate(elen, e) {\n    for (let i = 0; i < elen; i++) e[i] = -e[i];\n    return elen;\n}\n\nexport function estimate(elen, e) {\n    let Q = e[0];\n    for (let i = 1; i < elen; i++) Q += e[i];\n    return Q;\n}\n\nexport function vec(n) {\n    return new Float64Array(n);\n}\n", "import {epsilon, splitter, resulterrbound, estimate, vec, sum} from './util.js';\n\nconst ccwerrboundA = (3 + 16 * epsilon) * epsilon;\nconst ccwerrboundB = (2 + 12 * epsilon) * epsilon;\nconst ccwerrboundC = (9 + 64 * epsilon) * epsilon * epsilon;\n\nconst B = vec(4);\nconst C1 = vec(8);\nconst C2 = vec(12);\nconst D = vec(16);\nconst u = vec(4);\n\nfunction orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\n    let acxtail, acytail, bcxtail, bcytail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const acx = ax - cx;\n    const bcx = bx - cx;\n    const acy = ay - cy;\n    const bcy = by - cy;\n\n    s1 = acx * bcy;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcx;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    B[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    B[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    B[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    B[3] = u3;\n\n    let det = estimate(4, B);\n    let errbound = ccwerrboundB * detsum;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - acx;\n    acxtail = ax - (acx + bvirt) + (bvirt - cx);\n    bvirt = bx - bcx;\n    bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\n    bvirt = ay - acy;\n    acytail = ay - (acy + bvirt) + (bvirt - cy);\n    bvirt = by - bcy;\n    bcytail = by - (bcy + bvirt) + (bvirt - cy);\n\n    if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\n        return det;\n    }\n\n    errbound = ccwerrboundC * detsum + resulterrbound * Math.abs(det);\n    det += (acx * bcytail + bcy * acxtail) - (acy * bcxtail + bcx * acytail);\n    if (det >= errbound || -det >= errbound) return det;\n\n    s1 = acxtail * bcy;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcx;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C1len = sum(4, B, 4, u, C1);\n\n    s1 = acx * bcytail;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcxtail;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C2len = sum(C1len, C1, 4, u, C2);\n\n    s1 = acxtail * bcytail;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcxtail;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const Dlen = sum(C2len, C2, 4, u, D);\n\n    return D[Dlen - 1];\n}\n\nexport function orient2d(ax, ay, bx, by, cx, cy) {\n    const detleft = (ay - cy) * (bx - cx);\n    const detright = (ax - cx) * (by - cy);\n    const det = detleft - detright;\n\n    const detsum = Math.abs(detleft + detright);\n    if (Math.abs(det) >= ccwerrboundA * detsum) return det;\n\n    return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\n}\n\nexport function orient2dfast(ax, ay, bx, by, cx, cy) {\n    return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);\n}\n", "import {epsilon, splitter, resulterrbound, estimate, vec, sum, scale} from './util.js';\n\nconst o3derrboundA = (7 + 56 * epsilon) * epsilon;\nconst o3derrboundB = (3 + 28 * epsilon) * epsilon;\nconst o3derrboundC = (26 + 288 * epsilon) * epsilon * epsilon;\n\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst at_b = vec(4);\nconst at_c = vec(4);\nconst bt_c = vec(4);\nconst bt_a = vec(4);\nconst ct_a = vec(4);\nconst ct_b = vec(4);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abt = vec(8);\nconst u = vec(4);\n\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _16 = vec(8);\nconst _12 = vec(12);\n\nlet fin = vec(192);\nlet fin2 = vec(192);\n\nfunction finadd(finlen, alen, a) {\n    finlen = sum(finlen, fin, alen, a, fin2);\n    const tmp = fin; fin = fin2; fin2 = tmp;\n    return finlen;\n}\n\nfunction tailinit(xtail, ytail, ax, ay, bx, by, a, b) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3, negate;\n    if (xtail === 0) {\n        if (ytail === 0) {\n            a[0] = 0;\n            b[0] = 0;\n            return 1;\n        } else {\n            negate = -ytail;\n            s1 = negate * ax;\n            c = splitter * negate;\n            ahi = c - (c - negate);\n            alo = negate - ahi;\n            c = splitter * ax;\n            bhi = c - (c - ax);\n            blo = ax - bhi;\n            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            a[1] = s1;\n            s1 = ytail * bx;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * bx;\n            bhi = c - (c - bx);\n            blo = bx - bhi;\n            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            b[1] = s1;\n            return 2;\n        }\n    } else {\n        if (ytail === 0) {\n            s1 = xtail * ay;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * ay;\n            bhi = c - (c - ay);\n            blo = ay - bhi;\n            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            a[1] = s1;\n            negate = -xtail;\n            s1 = negate * by;\n            c = splitter * negate;\n            ahi = c - (c - negate);\n            alo = negate - ahi;\n            c = splitter * by;\n            bhi = c - (c - by);\n            blo = by - bhi;\n            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            b[1] = s1;\n            return 2;\n        } else {\n            s1 = xtail * ay;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * ay;\n            bhi = c - (c - ay);\n            blo = ay - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = ytail * ax;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * ax;\n            bhi = c - (c - ax);\n            blo = ax - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            a[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            a[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            a[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            a[3] = u3;\n            s1 = ytail * bx;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * bx;\n            bhi = c - (c - bx);\n            blo = bx - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = xtail * by;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * by;\n            bhi = c - (c - by);\n            blo = by - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            b[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            b[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            b[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            b[3] = u3;\n            return 4;\n        }\n    }\n}\n\nfunction tailadd(finlen, a, b, k, z) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, u3;\n    s1 = a * b;\n    c = splitter * a;\n    ahi = c - (c - a);\n    alo = a - ahi;\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    c = splitter * k;\n    bhi = c - (c - k);\n    blo = k - bhi;\n    _i = s0 * k;\n    c = splitter * s0;\n    ahi = c - (c - s0);\n    alo = s0 - ahi;\n    u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n    _j = s1 * k;\n    c = splitter * s1;\n    ahi = c - (c - s1);\n    alo = s1 - ahi;\n    _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n    _k = _i + _0;\n    bvirt = _k - _i;\n    u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n    u3 = _j + _k;\n    u[2] = _k - (u3 - _j);\n    u[3] = u3;\n    finlen = finadd(finlen, 4, u);\n    if (z !== 0) {\n        c = splitter * z;\n        bhi = c - (c - z);\n        blo = z - bhi;\n        _i = s0 * z;\n        c = splitter * s0;\n        ahi = c - (c - s0);\n        alo = s0 - ahi;\n        u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n        _j = s1 * z;\n        c = splitter * s1;\n        ahi = c - (c - s1);\n        alo = s1 - ahi;\n        _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n        _k = _i + _0;\n        bvirt = _k - _i;\n        u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n        u3 = _j + _k;\n        u[2] = _k - (u3 - _j);\n        u[3] = u3;\n        finlen = finadd(finlen, 4, u);\n    }\n    return finlen;\n}\n\nfunction orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent) {\n    let finlen;\n    let adxtail, bdxtail, cdxtail;\n    let adytail, bdytail, cdytail;\n    let adztail, bdztail, cdztail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3;\n\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    s1 = bdx * cdy;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cdx * bdy;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cdx * ady;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = adx * cdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ca[3] = u3;\n    s1 = adx * bdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bdx * ady;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n\n    finlen = sum(\n        sum(\n            scale(4, bc, adz, _8), _8,\n            scale(4, ca, bdz, _8b), _8b, _16), _16,\n        scale(4, ab, cdz, _8), _8, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = o3derrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - adx;\n    adxtail = ax - (adx + bvirt) + (bvirt - dx);\n    bvirt = bx - bdx;\n    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n    bvirt = cx - cdx;\n    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n    bvirt = ay - ady;\n    adytail = ay - (ady + bvirt) + (bvirt - dy);\n    bvirt = by - bdy;\n    bdytail = by - (bdy + bvirt) + (bvirt - dy);\n    bvirt = cy - cdy;\n    cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n    bvirt = az - adz;\n    adztail = az - (adz + bvirt) + (bvirt - dz);\n    bvirt = bz - bdz;\n    bdztail = bz - (bdz + bvirt) + (bvirt - dz);\n    bvirt = cz - cdz;\n    cdztail = cz - (cdz + bvirt) + (bvirt - dz);\n\n    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 &&\n        adytail === 0 && bdytail === 0 && cdytail === 0 &&\n        adztail === 0 && bdztail === 0 && cdztail === 0) {\n        return det;\n    }\n\n    errbound = o3derrboundC * permanent + resulterrbound * Math.abs(det);\n    det +=\n        adz * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + adztail * (bdx * cdy - bdy * cdx) +\n        bdz * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + bdztail * (cdx * ady - cdy * adx) +\n        cdz * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + cdztail * (adx * bdy - ady * bdx);\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    const at_len = tailinit(adxtail, adytail, bdx, bdy, cdx, cdy, at_b, at_c);\n    const bt_len = tailinit(bdxtail, bdytail, cdx, cdy, adx, ady, bt_c, bt_a);\n    const ct_len = tailinit(cdxtail, cdytail, adx, ady, bdx, bdy, ct_a, ct_b);\n\n    const bctlen = sum(bt_len, bt_c, ct_len, ct_b, bct);\n    finlen = finadd(finlen, scale(bctlen, bct, adz, _16), _16);\n\n    const catlen = sum(ct_len, ct_a, at_len, at_c, cat);\n    finlen = finadd(finlen, scale(catlen, cat, bdz, _16), _16);\n\n    const abtlen = sum(at_len, at_b, bt_len, bt_a, abt);\n    finlen = finadd(finlen, scale(abtlen, abt, cdz, _16), _16);\n\n    if (adztail !== 0) {\n        finlen = finadd(finlen, scale(4, bc, adztail, _12), _12);\n        finlen = finadd(finlen, scale(bctlen, bct, adztail, _16), _16);\n    }\n    if (bdztail !== 0) {\n        finlen = finadd(finlen, scale(4, ca, bdztail, _12), _12);\n        finlen = finadd(finlen, scale(catlen, cat, bdztail, _16), _16);\n    }\n    if (cdztail !== 0) {\n        finlen = finadd(finlen, scale(4, ab, cdztail, _12), _12);\n        finlen = finadd(finlen, scale(abtlen, abt, cdztail, _16), _16);\n    }\n\n    if (adxtail !== 0) {\n        if (bdytail !== 0) {\n            finlen = tailadd(finlen, adxtail, bdytail, cdz, cdztail);\n        }\n        if (cdytail !== 0) {\n            finlen = tailadd(finlen, -adxtail, cdytail, bdz, bdztail);\n        }\n    }\n    if (bdxtail !== 0) {\n        if (cdytail !== 0) {\n            finlen = tailadd(finlen, bdxtail, cdytail, adz, adztail);\n        }\n        if (adytail !== 0) {\n            finlen = tailadd(finlen, -bdxtail, adytail, cdz, cdztail);\n        }\n    }\n    if (cdxtail !== 0) {\n        if (adytail !== 0) {\n            finlen = tailadd(finlen, cdxtail, adytail, bdz, bdztail);\n        }\n        if (bdytail !== 0) {\n            finlen = tailadd(finlen, -cdxtail, bdytail, adz, adztail);\n        }\n    }\n\n    return fin[finlen - 1];\n}\n\nexport function orient3d(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    const bdxcdy = bdx * cdy;\n    const cdxbdy = cdx * bdy;\n\n    const cdxady = cdx * ady;\n    const adxcdy = adx * cdy;\n\n    const adxbdy = adx * bdy;\n    const bdxady = bdx * ady;\n\n    const det =\n        adz * (bdxcdy - cdxbdy) +\n        bdz * (cdxady - adxcdy) +\n        cdz * (adxbdy - bdxady);\n\n    const permanent =\n        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz) +\n        (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz) +\n        (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);\n\n    const errbound = o3derrboundA * permanent;\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n\n    return orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent);\n}\n\nexport function orient3dfast(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    return adx * (bdy * cdz - bdz * cdy) +\n        bdx * (cdy * adz - cdz * ady) +\n        cdx * (ady * bdz - adz * bdy);\n}\n", "import {epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale} from './util.js';\n\nconst iccerrboundA = (10 + 96 * epsilon) * epsilon;\nconst iccerrboundB = (4 + 48 * epsilon) * epsilon;\nconst iccerrboundC = (44 + 576 * epsilon) * epsilon * epsilon;\n\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst aa = vec(4);\nconst bb = vec(4);\nconst cc = vec(4);\nconst u = vec(4);\nconst v = vec(4);\nconst axtbc = vec(8);\nconst aytbc = vec(8);\nconst bxtca = vec(8);\nconst bytca = vec(8);\nconst cxtab = vec(8);\nconst cytab = vec(8);\nconst abt = vec(8);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abtt = vec(4);\nconst bctt = vec(4);\nconst catt = vec(4);\n\nconst _8 = vec(8);\nconst _16 = vec(16);\nconst _16b = vec(16);\nconst _16c = vec(16);\nconst _32 = vec(32);\nconst _32b = vec(32);\nconst _48 = vec(48);\nconst _64 = vec(64);\n\nlet fin = vec(1152);\nlet fin2 = vec(1152);\n\nfunction finadd(finlen, a, alen) {\n    finlen = sum(finlen, fin, a, alen, fin2);\n    const tmp = fin; fin = fin2; fin2 = tmp;\n    return finlen;\n}\n\nfunction incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent) {\n    let finlen;\n    let adxtail, bdxtail, cdxtail, adytail, bdytail, cdytail;\n    let axtbclen, aytbclen, bxtcalen, bytcalen, cxtablen, cytablen;\n    let abtlen, bctlen, catlen;\n    let abttlen, bcttlen, cattlen;\n    let n1, n0;\n\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n\n    s1 = bdx * cdy;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cdx * bdy;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cdx * ady;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = adx * cdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ca[3] = u3;\n    s1 = adx * bdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bdx * ady;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n\n    finlen = sum(\n        sum(\n            sum(\n                scale(scale(4, bc, adx, _8), _8, adx, _16), _16,\n                scale(scale(4, bc, ady, _8), _8, ady, _16b), _16b, _32), _32,\n            sum(\n                scale(scale(4, ca, bdx, _8), _8, bdx, _16), _16,\n                scale(scale(4, ca, bdy, _8), _8, bdy, _16b), _16b, _32b), _32b, _64), _64,\n        sum(\n            scale(scale(4, ab, cdx, _8), _8, cdx, _16), _16,\n            scale(scale(4, ab, cdy, _8), _8, cdy, _16b), _16b, _32), _32, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = iccerrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - adx;\n    adxtail = ax - (adx + bvirt) + (bvirt - dx);\n    bvirt = ay - ady;\n    adytail = ay - (ady + bvirt) + (bvirt - dy);\n    bvirt = bx - bdx;\n    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n    bvirt = by - bdy;\n    bdytail = by - (bdy + bvirt) + (bvirt - dy);\n    bvirt = cx - cdx;\n    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n    bvirt = cy - cdy;\n    cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0) {\n        return det;\n    }\n\n    errbound = iccerrboundC * permanent + resulterrbound * Math.abs(det);\n    det += ((adx * adx + ady * ady) * ((bdx * cdytail + cdy * bdxtail) - (bdy * cdxtail + cdx * bdytail)) +\n        2 * (adx * adxtail + ady * adytail) * (bdx * cdy - bdy * cdx)) +\n        ((bdx * bdx + bdy * bdy) * ((cdx * adytail + ady * cdxtail) - (cdy * adxtail + adx * cdytail)) +\n        2 * (bdx * bdxtail + bdy * bdytail) * (cdx * ady - cdy * adx)) +\n        ((cdx * cdx + cdy * cdy) * ((adx * bdytail + bdy * adxtail) - (ady * bdxtail + bdx * adytail)) +\n        2 * (cdx * cdxtail + cdy * cdytail) * (adx * bdy - ady * bdx));\n\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n        s1 = adx * adx;\n        c = splitter * adx;\n        ahi = c - (c - adx);\n        alo = adx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = ady * ady;\n        c = splitter * ady;\n        ahi = c - (c - ady);\n        alo = ady - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        aa[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        aa[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        aa[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        aa[3] = u3;\n    }\n    if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n        s1 = bdx * bdx;\n        c = splitter * bdx;\n        ahi = c - (c - bdx);\n        alo = bdx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = bdy * bdy;\n        c = splitter * bdy;\n        ahi = c - (c - bdy);\n        alo = bdy - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        bb[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        bb[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        bb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        bb[3] = u3;\n    }\n    if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n        s1 = cdx * cdx;\n        c = splitter * cdx;\n        ahi = c - (c - cdx);\n        alo = cdx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = cdy * cdy;\n        c = splitter * cdy;\n        ahi = c - (c - cdy);\n        alo = cdy - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        cc[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        cc[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        cc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        cc[3] = u3;\n    }\n\n    if (adxtail !== 0) {\n        axtbclen = scale(4, bc, adxtail, axtbc);\n        finlen = finadd(finlen, sum_three(\n            scale(axtbclen, axtbc, 2 * adx, _16), _16,\n            scale(scale(4, cc, adxtail, _8), _8, bdy, _16b), _16b,\n            scale(scale(4, bb, adxtail, _8), _8, -cdy, _16c), _16c, _32, _48), _48);\n    }\n    if (adytail !== 0) {\n        aytbclen = scale(4, bc, adytail, aytbc);\n        finlen = finadd(finlen, sum_three(\n            scale(aytbclen, aytbc, 2 * ady, _16), _16,\n            scale(scale(4, bb, adytail, _8), _8, cdx, _16b), _16b,\n            scale(scale(4, cc, adytail, _8), _8, -bdx, _16c), _16c, _32, _48), _48);\n    }\n    if (bdxtail !== 0) {\n        bxtcalen = scale(4, ca, bdxtail, bxtca);\n        finlen = finadd(finlen, sum_three(\n            scale(bxtcalen, bxtca, 2 * bdx, _16), _16,\n            scale(scale(4, aa, bdxtail, _8), _8, cdy, _16b), _16b,\n            scale(scale(4, cc, bdxtail, _8), _8, -ady, _16c), _16c, _32, _48), _48);\n    }\n    if (bdytail !== 0) {\n        bytcalen = scale(4, ca, bdytail, bytca);\n        finlen = finadd(finlen, sum_three(\n            scale(bytcalen, bytca, 2 * bdy, _16), _16,\n            scale(scale(4, cc, bdytail, _8), _8, adx, _16b), _16b,\n            scale(scale(4, aa, bdytail, _8), _8, -cdx, _16c), _16c, _32, _48), _48);\n    }\n    if (cdxtail !== 0) {\n        cxtablen = scale(4, ab, cdxtail, cxtab);\n        finlen = finadd(finlen, sum_three(\n            scale(cxtablen, cxtab, 2 * cdx, _16), _16,\n            scale(scale(4, bb, cdxtail, _8), _8, ady, _16b), _16b,\n            scale(scale(4, aa, cdxtail, _8), _8, -bdy, _16c), _16c, _32, _48), _48);\n    }\n    if (cdytail !== 0) {\n        cytablen = scale(4, ab, cdytail, cytab);\n        finlen = finadd(finlen, sum_three(\n            scale(cytablen, cytab, 2 * cdy, _16), _16,\n            scale(scale(4, aa, cdytail, _8), _8, bdx, _16b), _16b,\n            scale(scale(4, bb, cdytail, _8), _8, -adx, _16c), _16c, _32, _48), _48);\n    }\n\n    if (adxtail !== 0 || adytail !== 0) {\n        if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n            s1 = bdxtail * cdy;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * cdy;\n            bhi = c - (c - cdy);\n            blo = cdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdx * cdytail;\n            c = splitter * bdx;\n            ahi = c - (c - bdx);\n            alo = bdx - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            s1 = cdxtail * -bdy;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * -bdy;\n            bhi = c - (c - -bdy);\n            blo = -bdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdx * -bdytail;\n            c = splitter * cdx;\n            ahi = c - (c - cdx);\n            alo = cdx - ahi;\n            c = splitter * -bdytail;\n            bhi = c - (c - -bdytail);\n            blo = -bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            bctlen = sum(4, u, 4, v, bct);\n            s1 = bdxtail * cdytail;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdxtail * bdytail;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            bctt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            bctt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            bctt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            bctt[3] = u3;\n            bcttlen = 4;\n        } else {\n            bct[0] = 0;\n            bctlen = 1;\n            bctt[0] = 0;\n            bcttlen = 1;\n        }\n        if (adxtail !== 0) {\n            const len = scale(bctlen, bct, adxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(axtbclen, axtbc, adxtail, _16), _16,\n                scale(len, _16c, 2 * adx, _32), _32, _48), _48);\n\n            const len2 = scale(bcttlen, bctt, adxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * adx, _16), _16,\n                scale(len2, _8, adxtail, _16b), _16b,\n                scale(len, _16c, adxtail, _32), _32, _32b, _64), _64);\n\n            if (bdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, cc, adxtail, _8), _8, bdytail, _16), _16);\n            }\n            if (cdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, bb, -adxtail, _8), _8, cdytail, _16), _16);\n            }\n        }\n        if (adytail !== 0) {\n            const len = scale(bctlen, bct, adytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(aytbclen, aytbc, adytail, _16), _16,\n                scale(len, _16c, 2 * ady, _32), _32, _48), _48);\n\n            const len2 = scale(bcttlen, bctt, adytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * ady, _16), _16,\n                scale(len2, _8, adytail, _16b), _16b,\n                scale(len, _16c, adytail, _32), _32, _32b, _64), _64);\n        }\n    }\n    if (bdxtail !== 0 || bdytail !== 0) {\n        if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n            s1 = cdxtail * ady;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * ady;\n            bhi = c - (c - ady);\n            blo = ady - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdx * adytail;\n            c = splitter * cdx;\n            ahi = c - (c - cdx);\n            alo = cdx - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            n1 = -cdy;\n            n0 = -cdytail;\n            s1 = adxtail * n1;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * n1;\n            bhi = c - (c - n1);\n            blo = n1 - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adx * n0;\n            c = splitter * adx;\n            ahi = c - (c - adx);\n            alo = adx - ahi;\n            c = splitter * n0;\n            bhi = c - (c - n0);\n            blo = n0 - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            catlen = sum(4, u, 4, v, cat);\n            s1 = cdxtail * adytail;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adxtail * cdytail;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            catt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            catt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            catt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            catt[3] = u3;\n            cattlen = 4;\n        } else {\n            cat[0] = 0;\n            catlen = 1;\n            catt[0] = 0;\n            cattlen = 1;\n        }\n        if (bdxtail !== 0) {\n            const len = scale(catlen, cat, bdxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(bxtcalen, bxtca, bdxtail, _16), _16,\n                scale(len, _16c, 2 * bdx, _32), _32, _48), _48);\n\n            const len2 = scale(cattlen, catt, bdxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * bdx, _16), _16,\n                scale(len2, _8, bdxtail, _16b), _16b,\n                scale(len, _16c, bdxtail, _32), _32, _32b, _64), _64);\n\n            if (cdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, aa, bdxtail, _8), _8, cdytail, _16), _16);\n            }\n            if (adytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, cc, -bdxtail, _8), _8, adytail, _16), _16);\n            }\n        }\n        if (bdytail !== 0) {\n            const len = scale(catlen, cat, bdytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(bytcalen, bytca, bdytail, _16), _16,\n                scale(len, _16c, 2 * bdy, _32), _32, _48), _48);\n\n            const len2 = scale(cattlen, catt, bdytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * bdy, _16), _16,\n                scale(len2, _8, bdytail, _16b), _16b,\n                scale(len, _16c, bdytail, _32), _32,  _32b, _64), _64);\n        }\n    }\n    if (cdxtail !== 0 || cdytail !== 0) {\n        if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n            s1 = adxtail * bdy;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * bdy;\n            bhi = c - (c - bdy);\n            blo = bdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adx * bdytail;\n            c = splitter * adx;\n            ahi = c - (c - adx);\n            alo = adx - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            n1 = -ady;\n            n0 = -adytail;\n            s1 = bdxtail * n1;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * n1;\n            bhi = c - (c - n1);\n            blo = n1 - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdx * n0;\n            c = splitter * bdx;\n            ahi = c - (c - bdx);\n            alo = bdx - ahi;\n            c = splitter * n0;\n            bhi = c - (c - n0);\n            blo = n0 - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            abtlen = sum(4, u, 4, v, abt);\n            s1 = adxtail * bdytail;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdxtail * adytail;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            abtt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            abtt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            abtt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            abtt[3] = u3;\n            abttlen = 4;\n        } else {\n            abt[0] = 0;\n            abtlen = 1;\n            abtt[0] = 0;\n            abttlen = 1;\n        }\n        if (cdxtail !== 0) {\n            const len = scale(abtlen, abt, cdxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(cxtablen, cxtab, cdxtail, _16), _16,\n                scale(len, _16c, 2 * cdx, _32), _32, _48), _48);\n\n            const len2 = scale(abttlen, abtt, cdxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * cdx, _16), _16,\n                scale(len2, _8, cdxtail, _16b), _16b,\n                scale(len, _16c, cdxtail, _32), _32, _32b, _64), _64);\n\n            if (adytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, bb, cdxtail, _8), _8, adytail, _16), _16);\n            }\n            if (bdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, aa, -cdxtail, _8), _8, bdytail, _16), _16);\n            }\n        }\n        if (cdytail !== 0) {\n            const len = scale(abtlen, abt, cdytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(cytablen, cytab, cdytail, _16), _16,\n                scale(len, _16c, 2 * cdy, _32), _32, _48), _48);\n\n            const len2 = scale(abttlen, abtt, cdytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * cdy, _16), _16,\n                scale(len2, _8, cdytail, _16b), _16b,\n                scale(len, _16c, cdytail, _32), _32, _32b, _64), _64);\n        }\n    }\n\n    return fin[finlen - 1];\n}\n\nexport function incircle(ax, ay, bx, by, cx, cy, dx, dy) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n\n    const bdxcdy = bdx * cdy;\n    const cdxbdy = cdx * bdy;\n    const alift = adx * adx + ady * ady;\n\n    const cdxady = cdx * ady;\n    const adxcdy = adx * cdy;\n    const blift = bdx * bdx + bdy * bdy;\n\n    const adxbdy = adx * bdy;\n    const bdxady = bdx * ady;\n    const clift = cdx * cdx + cdy * cdy;\n\n    const det =\n        alift * (bdxcdy - cdxbdy) +\n        blift * (cdxady - adxcdy) +\n        clift * (adxbdy - bdxady);\n\n    const permanent =\n        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * alift +\n        (Math.abs(cdxady) + Math.abs(adxcdy)) * blift +\n        (Math.abs(adxbdy) + Math.abs(bdxady)) * clift;\n\n    const errbound = iccerrboundA * permanent;\n\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n    return incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent);\n}\n\nexport function incirclefast(ax, ay, bx, by, cx, cy, dx, dy) {\n    const adx = ax - dx;\n    const ady = ay - dy;\n    const bdx = bx - dx;\n    const bdy = by - dy;\n    const cdx = cx - dx;\n    const cdy = cy - dy;\n\n    const abdet = adx * bdy - bdx * ady;\n    const bcdet = bdx * cdy - cdx * bdy;\n    const cadet = cdx * ady - adx * cdy;\n    const alift = adx * adx + ady * ady;\n    const blift = bdx * bdx + bdy * bdy;\n    const clift = cdx * cdx + cdy * cdy;\n\n    return alift * bcdet + blift * cadet + clift * abdet;\n}\n", "import {epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale, negate} from './util.js';\n\nconst isperrboundA = (16 + 224 * epsilon) * epsilon;\nconst isperrboundB = (5 + 72 * epsilon) * epsilon;\nconst isperrboundC = (71 + 1408 * epsilon) * epsilon * epsilon;\n\nconst ab = vec(4);\nconst bc = vec(4);\nconst cd = vec(4);\nconst de = vec(4);\nconst ea = vec(4);\nconst ac = vec(4);\nconst bd = vec(4);\nconst ce = vec(4);\nconst da = vec(4);\nconst eb = vec(4);\n\nconst abc = vec(24);\nconst bcd = vec(24);\nconst cde = vec(24);\nconst dea = vec(24);\nconst eab = vec(24);\nconst abd = vec(24);\nconst bce = vec(24);\nconst cda = vec(24);\nconst deb = vec(24);\nconst eac = vec(24);\n\nconst adet = vec(1152);\nconst bdet = vec(1152);\nconst cdet = vec(1152);\nconst ddet = vec(1152);\nconst edet = vec(1152);\nconst abdet = vec(2304);\nconst cddet = vec(2304);\nconst cdedet = vec(3456);\nconst deter = vec(5760);\n\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _8c = vec(8);\nconst _16 = vec(16);\nconst _24 = vec(24);\nconst _48 = vec(48);\nconst _48b = vec(48);\nconst _96 = vec(96);\nconst _192 = vec(192);\nconst _384x = vec(384);\nconst _384y = vec(384);\nconst _384z = vec(384);\nconst _768 = vec(768);\n\nfunction sum_three_scale(a, b, c, az, bz, cz, out) {\n    return sum_three(\n        scale(4, a, az, _8), _8,\n        scale(4, b, bz, _8b), _8b,\n        scale(4, c, cz, _8c), _8c, _16, out);\n}\n\nfunction liftexact(alen, a, blen, b, clen, c, dlen, d, x, y, z, out) {\n    const len = sum(\n        sum(alen, a, blen, b, _48), _48,\n        negate(sum(clen, c, dlen, d, _48b), _48b), _48b, _96);\n\n    return sum_three(\n        scale(scale(len, _96, x, _192), _192, x, _384x), _384x,\n        scale(scale(len, _96, y, _192), _192, y, _384y), _384y,\n        scale(scale(len, _96, z, _192), _192, z, _384z), _384z, _768, out);\n}\n\nfunction insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    s1 = ax * by;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bx * ay;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n    s1 = bx * cy;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cx * by;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cx * dy;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dx * cy;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    cd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    cd[3] = u3;\n    s1 = dx * ey;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ex * dy;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    de[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    de[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    de[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    de[3] = u3;\n    s1 = ex * ay;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ax * ey;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ea[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ea[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ea[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ea[3] = u3;\n    s1 = ax * cy;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cx * ay;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ac[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ac[3] = u3;\n    s1 = bx * dy;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dx * by;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bd[3] = u3;\n    s1 = cx * ey;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ex * cy;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ce[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ce[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ce[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ce[3] = u3;\n    s1 = dx * ay;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ax * dy;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    da[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    da[3] = u3;\n    s1 = ex * by;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bx * ey;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    eb[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    eb[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    eb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    eb[3] = u3;\n\n    const abclen = sum_three_scale(ab, bc, ac, cz, az, -bz, abc);\n    const bcdlen = sum_three_scale(bc, cd, bd, dz, bz, -cz, bcd);\n    const cdelen = sum_three_scale(cd, de, ce, ez, cz, -dz, cde);\n    const dealen = sum_three_scale(de, ea, da, az, dz, -ez, dea);\n    const eablen = sum_three_scale(ea, ab, eb, bz, ez, -az, eab);\n    const abdlen = sum_three_scale(ab, bd, da, dz, az, bz, abd);\n    const bcelen = sum_three_scale(bc, ce, eb, ez, bz, cz, bce);\n    const cdalen = sum_three_scale(cd, da, ac, az, cz, dz, cda);\n    const deblen = sum_three_scale(de, eb, bd, bz, dz, ez, deb);\n    const eaclen = sum_three_scale(ea, ac, ce, cz, ez, az, eac);\n\n    const deterlen = sum_three(\n        liftexact(cdelen, cde, bcelen, bce, deblen, deb, bcdlen, bcd, ax, ay, az, adet), adet,\n        liftexact(dealen, dea, cdalen, cda, eaclen, eac, cdelen, cde, bx, by, bz, bdet), bdet,\n        sum_three(\n            liftexact(eablen, eab, deblen, deb, abdlen, abd, dealen, dea, cx, cy, cz, cdet), cdet,\n            liftexact(abclen, abc, eaclen, eac, bcelen, bce, eablen, eab, dx, dy, dz, ddet), ddet,\n            liftexact(bcdlen, bcd, abdlen, abd, cdalen, cda, abclen, abc, ex, ey, ez, edet), edet, cddet, cdedet), cdedet, abdet, deter);\n\n    return deter[deterlen - 1];\n}\n\nconst xdet = vec(96);\nconst ydet = vec(96);\nconst zdet = vec(96);\nconst fin = vec(1152);\n\nfunction liftadapt(a, b, c, az, bz, cz, x, y, z, out) {\n    const len = sum_three_scale(a, b, c, az, bz, cz, _24);\n    return sum_three(\n        scale(scale(len, _24, x, _48), _48, x, xdet), xdet,\n        scale(scale(len, _24, y, _48), _48, y, ydet), ydet,\n        scale(scale(len, _24, z, _48), _48, z, zdet), zdet, _192, out);\n}\n\nfunction insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent) {\n    let ab3, bc3, cd3, da3, ac3, bd3;\n\n    let aextail, bextail, cextail, dextail;\n    let aeytail, beytail, ceytail, deytail;\n    let aeztail, beztail, ceztail, deztail;\n\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0;\n\n    const aex = ax - ex;\n    const bex = bx - ex;\n    const cex = cx - ex;\n    const dex = dx - ex;\n    const aey = ay - ey;\n    const bey = by - ey;\n    const cey = cy - ey;\n    const dey = dy - ey;\n    const aez = az - ez;\n    const bez = bz - ez;\n    const cez = cz - ez;\n    const dez = dz - ez;\n\n    s1 = aex * bey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bex * aey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    ab3 = _j + _i;\n    bvirt = ab3 - _j;\n    ab[2] = _j - (ab3 - bvirt) + (_i - bvirt);\n    ab[3] = ab3;\n    s1 = bex * cey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cex * bey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    bc3 = _j + _i;\n    bvirt = bc3 - _j;\n    bc[2] = _j - (bc3 - bvirt) + (_i - bvirt);\n    bc[3] = bc3;\n    s1 = cex * dey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dex * cey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    cd3 = _j + _i;\n    bvirt = cd3 - _j;\n    cd[2] = _j - (cd3 - bvirt) + (_i - bvirt);\n    cd[3] = cd3;\n    s1 = dex * aey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = aex * dey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    da3 = _j + _i;\n    bvirt = da3 - _j;\n    da[2] = _j - (da3 - bvirt) + (_i - bvirt);\n    da[3] = da3;\n    s1 = aex * cey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cex * aey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    ac3 = _j + _i;\n    bvirt = ac3 - _j;\n    ac[2] = _j - (ac3 - bvirt) + (_i - bvirt);\n    ac[3] = ac3;\n    s1 = bex * dey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dex * bey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    bd3 = _j + _i;\n    bvirt = bd3 - _j;\n    bd[2] = _j - (bd3 - bvirt) + (_i - bvirt);\n    bd[3] = bd3;\n\n    const finlen = sum(\n        sum(\n            negate(liftadapt(bc, cd, bd, dez, bez, -cez, aex, aey, aez, adet), adet), adet,\n            liftadapt(cd, da, ac, aez, cez, dez, bex, bey, bez, bdet), bdet, abdet), abdet,\n        sum(\n            negate(liftadapt(da, ab, bd, bez, dez, aez, cex, cey, cez, cdet), cdet), cdet,\n            liftadapt(ab, bc, ac, cez, aez, -bez, dex, dey, dez, ddet), ddet, cddet), cddet, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = isperrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - aex;\n    aextail = ax - (aex + bvirt) + (bvirt - ex);\n    bvirt = ay - aey;\n    aeytail = ay - (aey + bvirt) + (bvirt - ey);\n    bvirt = az - aez;\n    aeztail = az - (aez + bvirt) + (bvirt - ez);\n    bvirt = bx - bex;\n    bextail = bx - (bex + bvirt) + (bvirt - ex);\n    bvirt = by - bey;\n    beytail = by - (bey + bvirt) + (bvirt - ey);\n    bvirt = bz - bez;\n    beztail = bz - (bez + bvirt) + (bvirt - ez);\n    bvirt = cx - cex;\n    cextail = cx - (cex + bvirt) + (bvirt - ex);\n    bvirt = cy - cey;\n    ceytail = cy - (cey + bvirt) + (bvirt - ey);\n    bvirt = cz - cez;\n    ceztail = cz - (cez + bvirt) + (bvirt - ez);\n    bvirt = dx - dex;\n    dextail = dx - (dex + bvirt) + (bvirt - ex);\n    bvirt = dy - dey;\n    deytail = dy - (dey + bvirt) + (bvirt - ey);\n    bvirt = dz - dez;\n    deztail = dz - (dez + bvirt) + (bvirt - ez);\n    if (aextail === 0 && aeytail === 0 && aeztail === 0 &&\n        bextail === 0 && beytail === 0 && beztail === 0 &&\n        cextail === 0 && ceytail === 0 && ceztail === 0 &&\n        dextail === 0 && deytail === 0 && deztail === 0) {\n        return det;\n    }\n\n    errbound = isperrboundC * permanent + resulterrbound * Math.abs(det);\n\n    const abeps = (aex * beytail + bey * aextail) - (aey * bextail + bex * aeytail);\n    const bceps = (bex * ceytail + cey * bextail) - (bey * cextail + cex * beytail);\n    const cdeps = (cex * deytail + dey * cextail) - (cey * dextail + dex * ceytail);\n    const daeps = (dex * aeytail + aey * dextail) - (dey * aextail + aex * deytail);\n    const aceps = (aex * ceytail + cey * aextail) - (aey * cextail + cex * aeytail);\n    const bdeps = (bex * deytail + dey * bextail) - (bey * dextail + dex * beytail);\n    det +=\n        (((bex * bex + bey * bey + bez * bez) * ((cez * daeps + dez * aceps + aez * cdeps) +\n        (ceztail * da3 + deztail * ac3 + aeztail * cd3)) + (dex * dex + dey * dey + dez * dez) *\n        ((aez * bceps - bez * aceps + cez * abeps) + (aeztail * bc3 - beztail * ac3 + ceztail * ab3))) -\n        ((aex * aex + aey * aey + aez * aez) * ((bez * cdeps - cez * bdeps + dez * bceps) +\n        (beztail * cd3 - ceztail * bd3 + deztail * bc3)) + (cex * cex + cey * cey + cez * cez) *\n        ((dez * abeps + aez * bdeps + bez * daeps) + (deztail * ab3 + aeztail * bd3 + beztail * da3)))) +\n        2 * (((bex * bextail + bey * beytail + bez * beztail) * (cez * da3 + dez * ac3 + aez * cd3) +\n        (dex * dextail + dey * deytail + dez * deztail) * (aez * bc3 - bez * ac3 + cez * ab3)) -\n        ((aex * aextail + aey * aeytail + aez * aeztail) * (bez * cd3 - cez * bd3 + dez * bc3) +\n        (cex * cextail + cey * ceytail + cez * ceztail) * (dez * ab3 + aez * bd3 + bez * da3)));\n\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    return insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez);\n}\n\nexport function insphere(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n    const aex = ax - ex;\n    const bex = bx - ex;\n    const cex = cx - ex;\n    const dex = dx - ex;\n    const aey = ay - ey;\n    const bey = by - ey;\n    const cey = cy - ey;\n    const dey = dy - ey;\n    const aez = az - ez;\n    const bez = bz - ez;\n    const cez = cz - ez;\n    const dez = dz - ez;\n\n    const aexbey = aex * bey;\n    const bexaey = bex * aey;\n    const ab = aexbey - bexaey;\n    const bexcey = bex * cey;\n    const cexbey = cex * bey;\n    const bc = bexcey - cexbey;\n    const cexdey = cex * dey;\n    const dexcey = dex * cey;\n    const cd = cexdey - dexcey;\n    const dexaey = dex * aey;\n    const aexdey = aex * dey;\n    const da = dexaey - aexdey;\n    const aexcey = aex * cey;\n    const cexaey = cex * aey;\n    const ac = aexcey - cexaey;\n    const bexdey = bex * dey;\n    const dexbey = dex * bey;\n    const bd = bexdey - dexbey;\n\n    const alift = aex * aex + aey * aey + aez * aez;\n    const blift = bex * bex + bey * bey + bez * bez;\n    const clift = cex * cex + cey * cey + cez * cez;\n    const dlift = dex * dex + dey * dey + dez * dez;\n\n    const det =\n        (clift * (dez * ab + aez * bd + bez * da) - dlift * (aez * bc - bez * ac + cez * ab)) +\n        (alift * (bez * cd - cez * bd + dez * bc) - blift * (cez * da + dez * ac + aez * cd));\n\n    const aezplus = Math.abs(aez);\n    const bezplus = Math.abs(bez);\n    const cezplus = Math.abs(cez);\n    const dezplus = Math.abs(dez);\n    const aexbeyplus = Math.abs(aexbey) + Math.abs(bexaey);\n    const bexceyplus = Math.abs(bexcey) + Math.abs(cexbey);\n    const cexdeyplus = Math.abs(cexdey) + Math.abs(dexcey);\n    const dexaeyplus = Math.abs(dexaey) + Math.abs(aexdey);\n    const aexceyplus = Math.abs(aexcey) + Math.abs(cexaey);\n    const bexdeyplus = Math.abs(bexdey) + Math.abs(dexbey);\n    const permanent =\n        (cexdeyplus * bezplus + bexdeyplus * cezplus + bexceyplus * dezplus) * alift +\n        (dexaeyplus * cezplus + aexceyplus * dezplus + cexdeyplus * aezplus) * blift +\n        (aexbeyplus * dezplus + bexdeyplus * aezplus + dexaeyplus * bezplus) * clift +\n        (bexceyplus * aezplus + aexceyplus * bezplus + aexbeyplus * cezplus) * dlift;\n\n    const errbound = isperrboundA * permanent;\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n    return -insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent);\n}\n\nexport function inspherefast(pax, pay, paz, pbx, pby, pbz, pcx, pcy, pcz, pdx, pdy, pdz, pex, pey, pez) {\n    const aex = pax - pex;\n    const bex = pbx - pex;\n    const cex = pcx - pex;\n    const dex = pdx - pex;\n    const aey = pay - pey;\n    const bey = pby - pey;\n    const cey = pcy - pey;\n    const dey = pdy - pey;\n    const aez = paz - pez;\n    const bez = pbz - pez;\n    const cez = pcz - pez;\n    const dez = pdz - pez;\n\n    const ab = aex * bey - bex * aey;\n    const bc = bex * cey - cex * bey;\n    const cd = cex * dey - dex * cey;\n    const da = dex * aey - aex * dey;\n    const ac = aex * cey - cex * aey;\n    const bd = bex * dey - dex * bey;\n\n    const abc = aez * bc - bez * ac + cez * ab;\n    const bcd = bez * cd - cez * bd + dez * bc;\n    const cda = cez * da + dez * ac + aez * cd;\n    const dab = dez * ab + aez * bd + bez * da;\n\n    const alift = aex * aex + aey * aey + aez * aez;\n    const blift = bex * bex + bey * bey + bez * bez;\n    const clift = cex * cex + cey * cey + cez * cez;\n    const dlift = dex * dex + dey * dey + dez * dez;\n\n    return (clift * dab - dlift * abc) + (alift * bcd - blift * cda);\n}\n", "\nexport {orient2d, orient2dfast} from './esm/orient2d.js';\nexport {orient3d, orient3dfast} from './esm/orient3d.js';\nexport {incircle, incirclefast} from './esm/incircle.js';\nexport {insphere, inspherefast} from './esm/insphere.js';\n", "\nconst EPSILON = Math.pow(2, -52);\nconst EDGE_STACK = new Uint32Array(512);\n\nimport {orient2d} from 'robust-predicates';\n\nexport default class Delaunator {\n\n    static from(points, getX = defaultGetX, getY = defaultGetY) {\n        const n = points.length;\n        const coords = new Float64Array(n * 2);\n\n        for (let i = 0; i < n; i++) {\n            const p = points[i];\n            coords[2 * i] = getX(p);\n            coords[2 * i + 1] = getY(p);\n        }\n\n        return new Delaunator(coords);\n    }\n\n    constructor(coords) {\n        const n = coords.length >> 1;\n        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n\n        this.coords = coords;\n\n        // arrays that will store the triangulation graph\n        const maxTriangles = Math.max(2 * n - 5, 0);\n        this._triangles = new Uint32Array(maxTriangles * 3);\n        this._halfedges = new Int32Array(maxTriangles * 3);\n\n        // temporary arrays for tracking the edges of the advancing convex hull\n        this._hashSize = Math.ceil(Math.sqrt(n));\n        this._hullPrev = new Uint32Array(n); // edge to prev edge\n        this._hullNext = new Uint32Array(n); // edge to next edge\n        this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n        this._hullHash = new Int32Array(this._hashSize); // angular edge hash\n\n        // temporary arrays for sorting points\n        this._ids = new Uint32Array(n);\n        this._dists = new Float64Array(n);\n\n        this.update();\n    }\n\n    update() {\n        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;\n        const n = coords.length >> 1;\n\n        // populate an array of point indices; calculate input data bbox\n        let minX = Infinity;\n        let minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n\n        for (let i = 0; i < n; i++) {\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n            this._ids[i] = i;\n        }\n        const cx = (minX + maxX) / 2;\n        const cy = (minY + maxY) / 2;\n\n        let i0, i1, i2;\n\n        // pick a seed point close to the center\n        for (let i = 0, minDist = Infinity; i < n; i++) {\n            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist) {\n                i0 = i;\n                minDist = d;\n            }\n        }\n        const i0x = coords[2 * i0];\n        const i0y = coords[2 * i0 + 1];\n\n        // find the point closest to the seed\n        for (let i = 0, minDist = Infinity; i < n; i++) {\n            if (i === i0) continue;\n            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist && d > 0) {\n                i1 = i;\n                minDist = d;\n            }\n        }\n        let i1x = coords[2 * i1];\n        let i1y = coords[2 * i1 + 1];\n\n        let minRadius = Infinity;\n\n        // find the third point which forms the smallest circumcircle with the first two\n        for (let i = 0; i < n; i++) {\n            if (i === i0 || i === i1) continue;\n            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\n            if (r < minRadius) {\n                i2 = i;\n                minRadius = r;\n            }\n        }\n        let i2x = coords[2 * i2];\n        let i2y = coords[2 * i2 + 1];\n\n        if (minRadius === Infinity) {\n            // order collinear points by dx (or dy if all x are identical)\n            // and return the list as a hull\n            for (let i = 0; i < n; i++) {\n                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);\n            }\n            quicksort(this._ids, this._dists, 0, n - 1);\n            const hull = new Uint32Array(n);\n            let j = 0;\n            for (let i = 0, d0 = -Infinity; i < n; i++) {\n                const id = this._ids[i];\n                const d = this._dists[id];\n                if (d > d0) {\n                    hull[j++] = id;\n                    d0 = d;\n                }\n            }\n            this.hull = hull.subarray(0, j);\n            this.triangles = new Uint32Array(0);\n            this.halfedges = new Uint32Array(0);\n            return;\n        }\n\n        // swap the order of the seed points for counter-clockwise orientation\n        if (orient2d(i0x, i0y, i1x, i1y, i2x, i2y) < 0) {\n            const i = i1;\n            const x = i1x;\n            const y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n\n        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n        this._cx = center.x;\n        this._cy = center.y;\n\n        for (let i = 0; i < n; i++) {\n            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\n        }\n\n        // sort the points by distance from the seed triangle circumcenter\n        quicksort(this._ids, this._dists, 0, n - 1);\n\n        // set up the seed triangle as the starting hull\n        this._hullStart = i0;\n        let hullSize = 3;\n\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n\n        hullHash.fill(-1);\n        hullHash[this._hashKey(i0x, i0y)] = i0;\n        hullHash[this._hashKey(i1x, i1y)] = i1;\n        hullHash[this._hashKey(i2x, i2y)] = i2;\n\n        this.trianglesLen = 0;\n        this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n        for (let k = 0, xp, yp; k < this._ids.length; k++) {\n            const i = this._ids[k];\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n\n            // skip near-duplicate points\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n            xp = x;\n            yp = y;\n\n            // skip seed triangle points\n            if (i === i0 || i === i1 || i === i2) continue;\n\n            // find a visible edge on the convex hull using edge hash\n            let start = 0;\n            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\n                start = hullHash[(key + j) % this._hashSize];\n                if (start !== -1 && start !== hullNext[start]) break;\n            }\n\n            start = hullPrev[start];\n            let e = start, q;\n            while (q = hullNext[e], orient2d(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1]) >= 0) {\n                e = q;\n                if (e === start) {\n                    e = -1;\n                    break;\n                }\n            }\n            if (e === -1) continue; // likely a near-duplicate point; skip it\n\n            // add the first triangle from the point\n            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n\n            // recursively flip triangles from the point until they satisfy the Delaunay condition\n            hullTri[i] = this._legalize(t + 2);\n            hullTri[e] = t; // keep track of boundary triangles on the hull\n            hullSize++;\n\n            // walk forward through the hull, adding more triangles and flipping recursively\n            let n = hullNext[e];\n            while (q = hullNext[n], orient2d(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1]) < 0) {\n                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this._legalize(t + 2);\n                hullNext[n] = n; // mark as removed\n                hullSize--;\n                n = q;\n            }\n\n            // walk backward from the other side, adding more triangles and flipping\n            if (e === start) {\n                while (q = hullPrev[e], orient2d(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1]) < 0) {\n                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this._legalize(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e; // mark as removed\n                    hullSize--;\n                    e = q;\n                }\n            }\n\n            // update the hull indices\n            this._hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n\n            // save the two new edges in the hash table\n            hullHash[this._hashKey(x, y)] = i;\n            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n        }\n\n        this.hull = new Uint32Array(hullSize);\n        for (let i = 0, e = this._hullStart; i < hullSize; i++) {\n            this.hull[i] = e;\n            e = hullNext[e];\n        }\n\n        // trim typed triangle mesh arrays\n        this.triangles = this._triangles.subarray(0, this.trianglesLen);\n        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n    }\n\n    _hashKey(x, y) {\n        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n    }\n\n    _legalize(a) {\n        const {_triangles: triangles, _halfedges: halfedges, coords} = this;\n\n        let i = 0;\n        let ar = 0;\n\n        // recursion eliminated with a fixed-size stack\n        while (true) {\n            const b = halfedges[a];\n\n            /* if the pair of triangles doesn't satisfy the Delaunay condition\n             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n             * then do the same check/flip recursively for the new pair of triangles\n             *\n             *           pl                    pl\n             *          /||\\                  /  \\\n             *       al/ || \\bl            al/    \\a\n             *        /  ||  \\              /      \\\n             *       /  a||b  \\    flip    /___ar___\\\n             *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n             *        \\  ||  /              \\      /\n             *       ar\\ || /br             b\\    /br\n             *          \\||/                  \\  /\n             *           pr                    pr\n             */\n            const a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n\n            if (b === -1) { // convex hull edge\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n                continue;\n            }\n\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n\n            const illegal = inCircle(\n                coords[2 * p0], coords[2 * p0 + 1],\n                coords[2 * pr], coords[2 * pr + 1],\n                coords[2 * pl], coords[2 * pl + 1],\n                coords[2 * p1], coords[2 * p1 + 1]);\n\n            if (illegal) {\n                triangles[a] = p1;\n                triangles[b] = p0;\n\n                const hbl = halfedges[bl];\n\n                // edge swapped on the other side of the hull (rare); fix the halfedge reference\n                if (hbl === -1) {\n                    let e = this._hullStart;\n                    do {\n                        if (this._hullTri[e] === bl) {\n                            this._hullTri[e] = a;\n                            break;\n                        }\n                        e = this._hullPrev[e];\n                    } while (e !== this._hullStart);\n                }\n                this._link(a, hbl);\n                this._link(b, halfedges[ar]);\n                this._link(ar, bl);\n\n                const br = b0 + (b + 1) % 3;\n\n                // don't worry about hitting the cap: it can only happen on extremely degenerate input\n                if (i < EDGE_STACK.length) {\n                    EDGE_STACK[i++] = br;\n                }\n            } else {\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n            }\n        }\n\n        return ar;\n    }\n\n    _link(a, b) {\n        this._halfedges[a] = b;\n        if (b !== -1) this._halfedges[b] = a;\n    }\n\n    // add a new triangle given vertex indices and adjacent half-edge ids\n    _addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.trianglesLen;\n\n        this._triangles[t] = i0;\n        this._triangles[t + 1] = i1;\n        this._triangles[t + 2] = i2;\n\n        this._link(t, a);\n        this._link(t + 1, b);\n        this._link(t + 2, c);\n\n        this.trianglesLen += 3;\n\n        return t;\n    }\n}\n\n// monotonically increases with real angle, but doesn't need expensive trigonometry\nfunction pseudoAngle(dx, dy) {\n    const p = dx / (Math.abs(dx) + Math.abs(dy));\n    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n}\n\nfunction dist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n    const dx = ax - px;\n    const dy = ay - py;\n    const ex = bx - px;\n    const ey = by - py;\n    const fx = cx - px;\n    const fy = cy - py;\n\n    const ap = dx * dx + dy * dy;\n    const bp = ex * ex + ey * ey;\n    const cp = fx * fx + fy * fy;\n\n    return dx * (ey * cp - bp * fy) -\n           dy * (ex * cp - bp * fx) +\n           ap * (ex * fy - ey * fx) < 0;\n}\n\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = (ey * bl - dy * cl) * d;\n    const y = (dx * cl - ex * bl) * d;\n\n    return x * x + y * y;\n}\n\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = ax + (ey * bl - dy * cl) * d;\n    const y = ay + (dx * cl - ex * bl) * d;\n\n    return {x, y};\n}\n\nfunction quicksort(ids, dists, left, right) {\n    if (right - left <= 20) {\n        for (let i = left + 1; i <= right; i++) {\n            const temp = ids[i];\n            const tempDist = dists[temp];\n            let j = i - 1;\n            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n            ids[j + 1] = temp;\n        }\n    } else {\n        const median = (left + right) >> 1;\n        let i = left + 1;\n        let j = right;\n        swap(ids, median, i);\n        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\n        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\n\n        const temp = ids[i];\n        const tempDist = dists[temp];\n        while (true) {\n            do i++; while (dists[ids[i]] < tempDist);\n            do j--; while (dists[ids[j]] > tempDist);\n            if (j < i) break;\n            swap(ids, i, j);\n        }\n        ids[left + 1] = ids[j];\n        ids[j] = temp;\n\n        if (right - i + 1 >= j - left) {\n            quicksort(ids, dists, i, right);\n            quicksort(ids, dists, left, j - 1);\n        } else {\n            quicksort(ids, dists, left, j - 1);\n            quicksort(ids, dists, i, right);\n        }\n    }\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultGetX(p) {\n    return p[0];\n}\nfunction defaultGetY(p) {\n    return p[1];\n}\n", "const epsilon = 1e-6;\n\nexport default class Path {\n  constructor() {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n  }\n  moveTo(x, y) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  }\n  lineTo(x, y) {\n    this._ += `L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arc(x, y, r) {\n    x = +x, y = +y, r = +r;\n    const x0 = x + r;\n    const y0 = y;\n    if (r < 0) throw new Error(\"negative radius\");\n    if (this._x1 === null) this._ += `M${x0},${y0}`;\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) this._ += \"L\" + x0 + \",\" + y0;\n    if (!r) return;\n    this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;\n  }\n  rect(x, y, w, h) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;\n  }\n  value() {\n    return this._ || null;\n  }\n}\n", "export default class Polygon {\n  constructor() {\n    this._ = [];\n  }\n  moveTo(x, y) {\n    this._.push([x, y]);\n  }\n  closePath() {\n    this._.push(this._[0].slice());\n  }\n  lineTo(x, y) {\n    this._.push([x, y]);\n  }\n  value() {\n    return this._.length ? this._ : null;\n  }\n}\n", "import Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\n\nexport default class Voronoi {\n  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n    this._init();\n  }\n  update() {\n    this.delaunay.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const {delaunay: {points, hull, triangles}, vectors} = this;\n    let bx, by; // lazily computed barycenter of the hull\n\n    // Compute circumcenters.\n    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n      const t1 = triangles[i] * 2;\n      const t2 = triangles[i + 1] * 2;\n      const t3 = triangles[i + 2] * 2;\n      const x1 = points[t1];\n      const y1 = points[t1 + 1];\n      const x2 = points[t2];\n      const y2 = points[t2 + 1];\n      const x3 = points[t3];\n      const y3 = points[t3 + 1];\n\n      const dx = x2 - x1;\n      const dy = y2 - y1;\n      const ex = x3 - x1;\n      const ey = y3 - y1;\n      const ab = (dx * ey - dy * ex) * 2;\n\n      if (Math.abs(ab) < 1e-9) {\n        // For a degenerate triangle, the circumcenter is at the infinity, in a\n        // direction orthogonal to the halfedge and away from the \u201Ccenter\u201D of\n        // the diagram <bx, by>, defined as the hull\u2019s barycenter.\n        if (bx === undefined) {\n          bx = by = 0;\n          for (const i of hull) bx += points[i * 2], by += points[i * 2 + 1];\n          bx /= hull.length, by /= hull.length;\n        }\n        const a = 1e9 * Math.sign((bx - x1) * ey - (by - y1) * ex);\n        x = (x1 + x3) / 2 - a * ey;\n        y = (y1 + y3) / 2 + a * ex;\n      } else {\n        const d = 1 / ab;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        x = x1 + (ey * bl - dy * cl) * d;\n        y = y1 + (dx * cl - ex * bl) * d;\n      }\n      circumcenters[j] = x;\n      circumcenters[j + 1] = y;\n    }\n\n    // Compute exterior cell rays.\n    let h = hull[hull.length - 1];\n    let p0, p1 = h * 4;\n    let x0, x1 = points[2 * h];\n    let y0, y1 = points[2 * h + 1];\n    vectors.fill(0);\n    for (let i = 0; i < hull.length; ++i) {\n      h = hull[i];\n      p0 = p1, x0 = x1, y0 = y1;\n      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n      vectors[p0 + 2] = vectors[p1] = y0 - y1;\n      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n    }\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;\n    if (hull.length <= 1) return null;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = Math.floor(i / 3) * 2;\n      const tj = Math.floor(j / 3) * 2;\n      const xi = circumcenters[ti];\n      const yi = circumcenters[ti + 1];\n      const xj = circumcenters[tj];\n      const yj = circumcenters[tj + 1];\n      this._renderSegment(xi, yi, xj, yj, context);\n    }\n    let h0, h1 = hull[hull.length - 1];\n    for (let i = 0; i < hull.length; ++i) {\n      h0 = h1, h1 = hull[i];\n      const t = Math.floor(inedges[h1] / 3) * 2;\n      const x = circumcenters[t];\n      const y = circumcenters[t + 1];\n      const v = h0 * 4;\n      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n      if (p) this._renderSegment(x, y, p[0], p[1], context);\n    }\n    return buffer && buffer.value();\n  }\n  renderBounds(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n    return buffer && buffer.value();\n  }\n  renderCell(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const points = this._clip(i);\n    if (points === null || !points.length) return;\n    context.moveTo(points[0], points[1]);\n    let n = points.length;\n    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;\n    for (let i = 2; i < n; i += 2) {\n      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])\n        context.lineTo(points[i], points[i + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *cellPolygons() {\n    const {delaunay: {points}} = this;\n    for (let i = 0, n = points.length / 2; i < n; ++i) {\n      const cell = this.cellPolygon(i);\n      if (cell) cell.index = i, yield cell;\n    }\n  }\n  cellPolygon(i) {\n    const polygon = new Polygon;\n    this.renderCell(i, polygon);\n    return polygon.value();\n  }\n  _renderSegment(x0, y0, x1, y1, context) {\n    let S;\n    const c0 = this._regioncode(x0, y0);\n    const c1 = this._regioncode(x1, y1);\n    if (c0 === 0 && c1 === 0) {\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n      context.moveTo(S[0], S[1]);\n      context.lineTo(S[2], S[3]);\n    }\n  }\n  contains(i, x, y) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n    return this.delaunay._step(i, x, y) === i;\n  }\n  *neighbors(i) {\n    const ci = this._clip(i);\n    if (ci) for (const j of this.delaunay.neighbors(i)) {\n      const cj = this._clip(j);\n      // find the common edge\n      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\n        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\n          if (ci[ai] === cj[aj]\n              && ci[ai + 1] === cj[aj + 1]\n              && ci[(ai + 2) % li] === cj[(aj + lj - 2) % lj]\n              && ci[(ai + 3) % li] === cj[(aj + lj - 1) % lj]) {\n            yield j;\n            break loop;\n          }\n        }\n      }\n    }\n  }\n  _cell(i) {\n    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;\n    const e0 = inedges[i];\n    if (e0 === -1) return null; // coincident point\n    const points = [];\n    let e = e0;\n    do {\n      const t = Math.floor(e / 3);\n      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n    } while (e !== e0 && e !== -1);\n    return points;\n  }\n  _clip(i) {\n    // degenerate case (1 valid point: return the box)\n    if (i === 0 && this.delaunay.hull.length === 1) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    const points = this._cell(i);\n    if (points === null) return null;\n    const {vectors: V} = this;\n    const v = i * 4;\n    return this._simplify(V[v] || V[v + 1]\n        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])\n        : this._clipFinite(i, points));\n  }\n  _clipFinite(i, points) {\n    const n = points.length;\n    let P = null;\n    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];\n    let c0, c1 = this._regioncode(x1, y1);\n    let e0, e1 = 0;\n    for (let j = 0; j < n; j += 2) {\n      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n      c0 = c1, c1 = this._regioncode(x1, y1);\n      if (c0 === 0 && c1 === 0) {\n        e0 = e1, e1 = 0;\n        if (P) P.push(x1, y1);\n        else P = [x1, y1];\n      } else {\n        let S, sx0, sy0, sx1, sy1;\n        if (c0 === 0) {\n          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n          [sx0, sy0, sx1, sy1] = S;\n        } else {\n          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n          [sx1, sy1, sx0, sy0] = S;\n          e0 = e1, e1 = this._edgecode(sx0, sy0);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx0, sy0);\n          else P = [sx0, sy0];\n        }\n        e0 = e1, e1 = this._edgecode(sx1, sy1);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n        if (P) P.push(sx1, sy1);\n        else P = [sx1, sy1];\n      }\n    }\n    if (P) {\n      e0 = e1, e1 = this._edgecode(P[0], P[1]);\n      if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    return P;\n  }\n  _clipSegment(x0, y0, x1, y1, c0, c1) {\n    // for more robustness, always consider the segment in the same order\n    const flip = c0 < c1;\n    if (flip) [x0, y0, x1, y1, c0, c1] = [x1, y1, x0, y0, c1, c0];\n    while (true) {\n      if (c0 === 0 && c1 === 0) return flip ? [x1, y1, x0, y0] : [x0, y0, x1, y1];\n      if (c0 & c1) return null;\n      let x, y, c = c0 || c1;\n      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;\n      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;\n      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;\n      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);\n      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n    }\n  }\n  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n    let P = Array.from(points), p;\n    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n    if (P = this._clipFinite(i, P)) {\n      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n      }\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n    }\n    return P;\n  }\n  _edge(i, e0, e1, P, j) {\n    while (e0 !== e1) {\n      let x, y;\n      switch (e0) {\n        case 0b0101: e0 = 0b0100; continue; // top-left\n        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top\n        case 0b0110: e0 = 0b0010; continue; // top-right\n        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right\n        case 0b1010: e0 = 0b1000; continue; // bottom-right\n        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom\n        case 0b1001: e0 = 0b0001; continue; // bottom-left\n        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left\n      }\n      // Note: this implicitly checks for out of bounds: if P[j] or P[j+1] are\n      // undefined, the conditional statement will be executed.\n      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n        P.splice(j, 0, x, y), j += 2;\n      }\n    }\n    return j;\n  }\n  _project(x0, y0, vx, vy) {\n    let t = Infinity, c, x, y;\n    if (vy < 0) { // top\n      if (y0 <= this.ymin) return null;\n      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n    } else if (vy > 0) { // bottom\n      if (y0 >= this.ymax) return null;\n      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n    }\n    if (vx > 0) { // right\n      if (x0 >= this.xmax) return null;\n      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n    } else if (vx < 0) { // left\n      if (x0 <= this.xmin) return null;\n      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n    }\n    return [x, y];\n  }\n  _edgecode(x, y) {\n    return (x === this.xmin ? 0b0001\n        : x === this.xmax ? 0b0010 : 0b0000)\n        | (y === this.ymin ? 0b0100\n        : y === this.ymax ? 0b1000 : 0b0000);\n  }\n  _regioncode(x, y) {\n    return (x < this.xmin ? 0b0001\n        : x > this.xmax ? 0b0010 : 0b0000)\n        | (y < this.ymin ? 0b0100\n        : y > this.ymax ? 0b1000 : 0b0000);\n  }\n  _simplify(P) {\n    if (P && P.length > 4) {\n      for (let i = 0; i < P.length; i+= 2) {\n        const j = (i + 2) % P.length, k = (i + 4) % P.length;\n        if (P[i] === P[j] && P[j] === P[k] || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1]) {\n          P.splice(j, 2), i -= 2;\n        }\n      }\n      if (!P.length) P = null;\n    }\n    return P;\n  }\n}\n", "import Delaunator from \"delaunator\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\nimport Voronoi from \"./voronoi.js\";\n\nconst tau = 2 * Math.PI, pow = Math.pow;\n\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n}\n\n// A triangulation is collinear if all its triangles have a non-null area\nfunction collinear(d) {\n  const {triangles, coords} = d;\n  for (let i = 0; i < triangles.length; i += 3) {\n    const a = 2 * triangles[i],\n          b = 2 * triangles[i + 1],\n          c = 2 * triangles[i + 2],\n          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])\n                - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\n\nexport default class Delaunay {\n  static from(points, fx = pointX, fy = pointY, that) {\n    return new Delaunay(\"length\" in points\n        ? flatArray(points, fx, fy, that)\n        : Float64Array.from(flatIterable(points, fx, fy, that)));\n  }\n  constructor(points) {\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n    this._init();\n  }\n  update() {\n    this._delaunator.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const d = this._delaunator, points = this.points;\n\n    // check for collinear\n    if (d.hull && d.hull.length > 2 && collinear(d)) {\n      this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)\n        .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors\n      const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],\n        bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],\n        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n      for (let i = 0, n = points.length / 2; i < n; ++i) {\n        const p = jitter(points[2 * i], points[2 * i + 1], r);\n        points[2 * i] = p[0];\n        points[2 * i + 1] = p[1];\n      }\n      this._delaunator = new Delaunator(points);\n    } else {\n      delete this.collinear;\n    }\n\n    const halfedges = this.halfedges = this._delaunator.halfedges;\n    const hull = this.hull = this._delaunator.hull;\n    const triangles = this.triangles = this._delaunator.triangles;\n    const inedges = this.inedges.fill(-1);\n    const hullIndex = this._hullIndex.fill(-1);\n\n    // Compute an index from each point to an (arbitrary) incoming halfedge\n    // Used to give the first neighbor of each point; for this reason,\n    // on the hull we give priority to exterior halfedges\n    for (let e = 0, n = halfedges.length; e < n; ++e) {\n      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];\n      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;\n    }\n    for (let i = 0, n = hull.length; i < n; ++i) {\n      hullIndex[hull[i]] = i;\n    }\n\n    // degenerate case: 1 or 2 (distinct) points\n    if (hull.length <= 2 && hull.length > 0) {\n      this.triangles = new Int32Array(3).fill(-1);\n      this.halfedges = new Int32Array(3).fill(-1);\n      this.triangles[0] = hull[0];\n      inedges[hull[0]] = 1;\n      if (hull.length === 2) {\n        inedges[hull[1]] = 0;\n        this.triangles[1] = hull[1];\n        this.triangles[2] = hull[1];\n      }\n    }\n  }\n  voronoi(bounds) {\n    return new Voronoi(this, bounds);\n  }\n  *neighbors(i) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;\n\n    // degenerate case with several collinear points\n    if (collinear) {\n      const l = collinear.indexOf(i);\n      if (l > 0) yield collinear[l - 1];\n      if (l < collinear.length - 1) yield collinear[l + 1];\n      return;\n    }\n\n    const e0 = inedges[i];\n    if (e0 === -1) return; // coincident point\n    let e = e0, p0 = -1;\n    do {\n      yield p0 = triangles[e];\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) return; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        const p = hull[(_hullIndex[i] + 1) % hull.length];\n        if (p !== p0) yield p;\n        return;\n      }\n    } while (e !== e0);\n  }\n  find(x, y, i = 0) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n    const i0 = i;\n    let c;\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\n    return c;\n  }\n  _step(i, x, y) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n    let c = i;\n    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n    const e0 = inedges[i];\n    let e = e0;\n    do {\n      let t = triangles[e];\n      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n      if (dt < dc) dc = dt, c = t;\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        e = hull[(_hullIndex[i] + 1) % hull.length];\n        if (e !== t) {\n          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n        }\n        break;\n      }\n    } while (e !== e0);\n    return c;\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, halfedges, triangles} = this;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = triangles[i] * 2;\n      const tj = triangles[j] * 2;\n      context.moveTo(points[ti], points[ti + 1]);\n      context.lineTo(points[tj], points[tj + 1]);\n    }\n    this.renderHull(context);\n    return buffer && buffer.value();\n  }\n  renderPoints(context, r) {\n    if (r === undefined && (!context || typeof context.moveTo !== \"function\")) r = context, context = null;\n    r = r == undefined ? 2 : +r;\n    const buffer = context == null ? context = new Path : undefined;\n    const {points} = this;\n    for (let i = 0, n = points.length; i < n; i += 2) {\n      const x = points[i], y = points[i + 1];\n      context.moveTo(x + r, y);\n      context.arc(x, y, r, 0, tau);\n    }\n    return buffer && buffer.value();\n  }\n  renderHull(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {hull, points} = this;\n    const h = hull[0] * 2, n = hull.length;\n    context.moveTo(points[h], points[h + 1]);\n    for (let i = 1; i < n; ++i) {\n      const h = 2 * hull[i];\n      context.lineTo(points[h], points[h + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  hullPolygon() {\n    const polygon = new Polygon;\n    this.renderHull(polygon);\n    return polygon.value();\n  }\n  renderTriangle(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, triangles} = this;\n    const t0 = triangles[i *= 3] * 2;\n    const t1 = triangles[i + 1] * 2;\n    const t2 = triangles[i + 2] * 2;\n    context.moveTo(points[t0], points[t0 + 1]);\n    context.lineTo(points[t1], points[t1 + 1]);\n    context.lineTo(points[t2], points[t2 + 1]);\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *trianglePolygons() {\n    const {triangles} = this;\n    for (let i = 0, n = triangles.length / 3; i < n; ++i) {\n      yield this.trianglePolygon(i);\n    }\n  }\n  trianglePolygon(i) {\n    const polygon = new Polygon;\n    this.renderTriangle(i, polygon);\n    return polygon.value();\n  }\n}\n\nfunction flatArray(points, fx, fy, that) {\n  const n = points.length;\n  const array = new Float64Array(n * 2);\n  for (let i = 0; i < n; ++i) {\n    const p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n  return array;\n}\n\nfunction* flatIterable(points, fx, fy, that) {\n  let i = 0;\n  for (const p of points) {\n    yield fx.call(that, p, i, points);\n    yield fy.call(that, p, i, points);\n    ++i;\n  }\n}\n", "export {default as Delaunay} from \"./delaunay.js\";\nexport {default as Voronoi} from \"./voronoi.js\";\n", "var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}\n", "import dsv from \"./dsv.js\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\nexport var csvFormatRow = csv.formatRow;\nexport var csvFormatValue = csv.formatValue;\n", "import dsv from \"./dsv.js\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\nexport var tsvFormatRow = tsv.formatRow;\nexport var tsvFormatValue = tsv.formatValue;\n", "export default function autoType(object) {\n  for (var key in object) {\n    var value = object[key].trim(), number, m;\n    if (!value) value = null;\n    else if (value === \"true\") value = true;\n    else if (value === \"false\") value = false;\n    else if (value === \"NaN\") value = NaN;\n    else if (!isNaN(number = +value)) value = number;\n    else if (m = value.match(/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/)) {\n      if (fixtz && !!m[4] && !m[7]) value = value.replace(/-/g, \"/\").replace(/T/, \" \");\n      value = new Date(value);\n    }\n    else continue;\n    object[key] = value;\n  }\n  return object;\n}\n\n// https://github.com/d3/d3-dsv/issues/45\nconst fixtz = new Date(\"2019-01-01T00:00\").getHours() || new Date(\"2019-07-01T00:00\").getHours();", "export {default as dsvFormat} from \"./dsv.js\";\nexport {csvParse, csvParseRows, csvFormat, csvFormatBody, csvFormatRows, csvFormatRow, csvFormatValue} from \"./csv.js\";\nexport {tsvParse, tsvParseRows, tsvFormat, tsvFormatBody, tsvFormatRows, tsvFormatRow, tsvFormatValue} from \"./tsv.js\";\nexport {default as autoType} from \"./autoType.js\";\n", "function responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n", "function responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n", "function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n", "import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text.js\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n", "export default function(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n", "function responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  if (response.status === 204 || response.status === 205) return;\n  return response.json();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n", "import text from \"./text.js\";\n\nfunction parser(type) {\n  return (input, init) => text(input, init)\n    .then(text => (new DOMParser).parseFromString(text, type));\n}\n\nexport default parser(\"application/xml\");\n\nexport var html = parser(\"text/html\");\n\nexport var svg = parser(\"image/svg+xml\");\n", "export {default as blob} from \"./blob.js\";\nexport {default as buffer} from \"./buffer.js\";\nexport {default as dsv, csv, tsv} from \"./dsv.js\";\nexport {default as image} from \"./image.js\";\nexport {default as json} from \"./json.js\";\nexport {default as text} from \"./text.js\";\nexport {default as xml, html, svg} from \"./xml.js\";\n", "export default function(x, y) {\n  var nodes, strength = 1;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  return force;\n}\n", "export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n", "export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don\u2019t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n", "export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n", "export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n", "export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n", "import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can\u2019t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn\u2019t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n", "export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n", "export default function() {\n  return this._root;\n}\n", "export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n", "import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n", "import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n", "export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n", "export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n", "import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n", "export {default as quadtree} from \"./quadtree.js\";\n", "export default function(x) {\n  return function() {\n    return x;\n  };\n}\n", "export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n", "import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n", "import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n", "// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n", "import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n", "import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n", "import constant from \"./constant.js\";\n\nexport default function(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n", "import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n", "import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n", "export {default as forceCenter} from \"./center.js\";\nexport {default as forceCollide} from \"./collide.js\";\nexport {default as forceLink} from \"./link.js\";\nexport {default as forceManyBody} from \"./manyBody.js\";\nexport {default as forceRadial} from \"./radial.js\";\nexport {default as forceSimulation} from \"./simulation.js\";\nexport {default as forceX} from \"./x.js\";\nexport {default as forceY} from \"./y.js\";\n", "export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, \u00B1Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n", "import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n", "export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n", "export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n", "// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n", "// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n", "import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n", "import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n", "import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n", "export default function(x) {\n  return x;\n}\n", "import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\u00B5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"\u2212\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer \u201Cvalue\u201D part that can be\n        // grouped, and fractional or exponential \u201Csuffix\u201D part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n", "import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n", "import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n", "import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n", "import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n", "export {default as formatDefaultLocale, format, formatPrefix} from \"./defaultLocale.js\";\nexport {default as formatLocale} from \"./locale.js\";\nexport {default as formatSpecifier, FormatSpecifier} from \"./formatSpecifier.js\";\nexport {default as precisionFixed} from \"./precisionFixed.js\";\nexport {default as precisionPrefix} from \"./precisionPrefix.js\";\nexport {default as precisionRound} from \"./precisionRound.js\";\n", "export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n", "export default function noop() {}\n", "function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n", "import {Adder} from \"d3-array\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nexport var areaRingSum = new Adder();\n\n// hello?\n\nvar areaSum = new Adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum = new Adder();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli\u2019s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum = new Adder();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n", "import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n", "import {Adder} from \"d3-array\";\nimport {areaStream, areaRingSum} from \"./area.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport {abs, degrees, epsilon, radians} from \"./math.js\";\nimport stream from \"./stream.js\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum,\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum = new Adder();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360\u00B0) % 360\u00B0, except that we want\n// the distance between \u00B1180\u00B0 to be 360\u00B0.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n", "import {Adder} from \"d3-array\";\nimport {asin, atan2, cos, degrees, epsilon, epsilon2, hypot, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = hypot(cx, cy, cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2.add(v * cx);\n  Y2.add(v * cy);\n  Z2.add(v * cz);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 = 0;\n  X2 = new Adder();\n  Y2 = new Adder();\n  Z2 = new Adder();\n  stream(object, centroidStream);\n\n  var x = +X2,\n      y = +Y2,\n      z = +Z2,\n      m = hypot(x, y, z);\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = hypot(x, y, z);\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / m) * degrees];\n}\n", "export default function(x) {\n  return function() {\n    return x;\n  };\n}\n", "export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n", "import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n  return [lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    lambda += deltaLambda;\n    if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n    return [lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n", "import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0\u00B0, 0\u00B0], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(2),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n", "import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n", "import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n", "import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n", "import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  return abs(point[0]) <= pi ? point[0] : sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point\u2019s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n", "import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n", "import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n", "import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 2 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 \u2A2F n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n", "export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n", "import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon\u2019s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n", "import clipRectangle from \"./rectangle.js\";\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n", "import {Adder} from \"d3-array\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar lengthSum,\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum = new Adder();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n", "import length from \"./length.js\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n", "import {default as polygonContains} from \"./polygonContains.js\";\nimport {default as distance} from \"./distance.js\";\nimport {epsilon2, radians} from \"./math.js\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ao, bo, ab;\n  for (var i = 0, n = coordinates.length; i < n; i++) {\n    bo = distance(coordinates[i], point);\n    if (bo === 0) return true;\n    if (i > 0) {\n      ab = distance(coordinates[i], coordinates[i - 1]);\n      if (\n        ab > 0 &&\n        ao <= ab &&\n        bo <= ab &&\n        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab\n      )\n        return true;\n    }\n    ao = bo;\n  }\n  return false;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n", "import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math.js\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n", "import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math.js\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n", "export default x => x;\n", "import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n", "import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n", "import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n", "import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n", "import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n", "// Simple caching for constant-radius points.\nlet cacheDigits, cacheAppend, cacheRadius, cacheCircle;\n\nexport default class PathString {\n  constructor(digits) {\n    this._append = digits == null ? append : appendRound(digits);\n    this._radius = 4.5;\n    this._ = \"\";\n  }\n  pointRadius(_) {\n    this._radius = +_;\n    return this;\n  }\n  polygonStart() {\n    this._line = 0;\n  }\n  polygonEnd() {\n    this._line = NaN;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {\n    if (this._line === 0) this._ += \"Z\";\n    this._point = NaN;\n  }\n  point(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._append`M${x},${y}`;\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._append`L${x},${y}`;\n        break;\n      }\n      default: {\n        this._append`M${x},${y}`;\n        if (this._radius !== cacheRadius || this._append !== cacheAppend) {\n          const r = this._radius;\n          const s = this._;\n          this._ = \"\"; // stash the old string so we can cache the circle path fragment\n          this._append`m0,${r}a${r},${r} 0 1,1 0,${-2 * r}a${r},${r} 0 1,1 0,${2 * r}z`;\n          cacheRadius = r;\n          cacheAppend = this._append;\n          cacheCircle = this._;\n          this._ = s;\n        }\n        this._ += cacheCircle;\n        break;\n      }\n    }\n  }\n  result() {\n    const result = this._;\n    this._ = \"\";\n    return result.length ? result : null;\n  }\n}\n\nfunction append(strings) {\n  let i = 1;\n  this._ += strings[0];\n  for (const j = strings.length; i < j; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  const d = Math.floor(digits);\n  if (!(d >= 0)) throw new RangeError(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  if (d !== cacheDigits) {\n    const k = 10 ** d;\n    cacheDigits = d;\n    cacheAppend = function append(strings) {\n      let i = 1;\n      this._ += strings[0];\n      for (const j = strings.length; i < j; ++i) {\n        this._ += Math.round(arguments[i] * k) / k + strings[i];\n      }\n    };\n  }\n  return cacheAppend;\n}\n", "import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  let digits = 3,\n      pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    if (!arguments.length) return projection;\n    projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream;\n    return path;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString(digits)) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  path.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) digits = null;\n    else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    if (context === null) contextStream = new PathString(digits);\n    return path;\n  };\n\n  return path.projection(projection).digits(digits).context(context);\n}\n", "export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n", "import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n", "import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n", "import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n", "import {degrees, pi, radians} from \"../math.js\";\nimport {projectionMutator} from \"./index.js\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n", "import {asin, cos, sin} from \"../math.js\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n", "import {abs, asin, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea.js\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y,\n        l = atan2(x, abs(r0y)) * sign(r0y);\n    if (r0y * n < 0)\n      l -= pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n", "import conicEqualArea from \"./conicEqualArea.js\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n", "import {epsilon} from \"../math.js\";\nimport albers from \"./albers.js\";\nimport conicEqualArea from \"./conicEqualArea.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960\u00D7500. The projection also works quite well at 960\u00D7600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n", "import {asin, atan2, cos, sin, sqrt} from \"../math.js\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n        if (k === Infinity) return [2, 0];\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n", "import {asin, sqrt} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n", "import {acos, sin} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n", "import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n", "import {abs, atan, atan2, cos, epsilon, halfPi, log, pi, pow, sign, sin, sqrt, tan} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {mercatorRaw} from \"./mercator.js\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy),\n      l = atan2(x, abs(fy)) * sign(fy);\n    if (fy * n < 0)\n      l -= pi * sign(x) * sign(fy);\n    return [l / n, 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n", "import projection from \"./index.js\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n", "import {abs, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {equirectangularRaw} from \"./equirectangular.js\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y,\n        l = atan2(x, abs(gy)) * sign(gy);\n    if (gy * n < 0)\n      l -= pi * sign(x) * sign(gy);\n    return [l / n, g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n", "import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n", "import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n", "import clipRectangle from \"../clip/rectangle.js\";\nimport identity from \"../identity.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport {cos, degrees, radians, sin} from \"../math.js\";\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect\n      alpha = 0, ca, sa, // angle\n      x0 = null, y0, x1, y1, // clip extent\n      kx = 1, ky = 1,\n      transform = transformer({\n        point: function(x, y) {\n          var p = projection([x, y])\n          this.stream.point(p[0], p[1]);\n        }\n      }),\n      postclip = identity,\n      cache,\n      cacheStream;\n\n  function reset() {\n    kx = k * sx;\n    ky = k * sy;\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  function projection (p) {\n    var x = p[0] * kx, y = p[1] * ky;\n    if (alpha) {\n      var t = y * ca - x * sa;\n      x = x * ca + y * sa;\n      y = t;\n    }    \n    return [x + tx, y + ty];\n  }\n  projection.invert = function(p) {\n    var x = p[0] - tx, y = p[1] - ty;\n    if (alpha) {\n      var t = y * ca + x * sa;\n      x = x * ca - y * sa;\n      y = t;\n    }\n    return [x / kx, y / ky];\n  };\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n  };\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, reset()) : k;\n  };\n  projection.translate = function(_) {\n    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\n  }\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, sa = sin(alpha), ca = cos(alpha), reset()) : alpha * degrees;\n  };\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\n  };\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\n  };\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  return projection;\n}\n", "import projection from \"./index.js\";\nimport {abs, epsilon} from \"../math.js\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n", "import {asin, cos, epsilon, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n", "import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n", "import {atan, exp, halfPi, log, tan} from \"../math.js\";\nimport {mercatorProjection} from \"./mercator.js\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n", "export {default as geoArea} from \"./area.js\";\nexport {default as geoBounds} from \"./bounds.js\";\nexport {default as geoCentroid} from \"./centroid.js\";\nexport {default as geoCircle} from \"./circle.js\";\nexport {default as geoClipAntimeridian} from \"./clip/antimeridian.js\";\nexport {default as geoClipCircle} from \"./clip/circle.js\";\nexport {default as geoClipExtent} from \"./clip/extent.js\"; // DEPRECATED! Use d3.geoIdentity().clipExtent(\u2026).\nexport {default as geoClipRectangle} from \"./clip/rectangle.js\";\nexport {default as geoContains} from \"./contains.js\";\nexport {default as geoDistance} from \"./distance.js\";\nexport {default as geoGraticule, graticule10 as geoGraticule10} from \"./graticule.js\";\nexport {default as geoInterpolate} from \"./interpolate.js\";\nexport {default as geoLength} from \"./length.js\";\nexport {default as geoPath} from \"./path/index.js\";\nexport {default as geoAlbers} from \"./projection/albers.js\";\nexport {default as geoAlbersUsa} from \"./projection/albersUsa.js\";\nexport {default as geoAzimuthalEqualArea, azimuthalEqualAreaRaw as geoAzimuthalEqualAreaRaw} from \"./projection/azimuthalEqualArea.js\";\nexport {default as geoAzimuthalEquidistant, azimuthalEquidistantRaw as geoAzimuthalEquidistantRaw} from \"./projection/azimuthalEquidistant.js\";\nexport {default as geoConicConformal, conicConformalRaw as geoConicConformalRaw} from \"./projection/conicConformal.js\";\nexport {default as geoConicEqualArea, conicEqualAreaRaw as geoConicEqualAreaRaw} from \"./projection/conicEqualArea.js\";\nexport {default as geoConicEquidistant, conicEquidistantRaw as geoConicEquidistantRaw} from \"./projection/conicEquidistant.js\";\nexport {default as geoEqualEarth, equalEarthRaw as geoEqualEarthRaw} from \"./projection/equalEarth.js\";\nexport {default as geoEquirectangular, equirectangularRaw as geoEquirectangularRaw} from \"./projection/equirectangular.js\";\nexport {default as geoGnomonic, gnomonicRaw as geoGnomonicRaw} from \"./projection/gnomonic.js\";\nexport {default as geoIdentity} from \"./projection/identity.js\";\nexport {default as geoProjection, projectionMutator as geoProjectionMutator} from \"./projection/index.js\";\nexport {default as geoMercator, mercatorRaw as geoMercatorRaw} from \"./projection/mercator.js\";\nexport {default as geoNaturalEarth1, naturalEarth1Raw as geoNaturalEarth1Raw} from \"./projection/naturalEarth1.js\";\nexport {default as geoOrthographic, orthographicRaw as geoOrthographicRaw} from \"./projection/orthographic.js\";\nexport {default as geoStereographic, stereographicRaw as geoStereographicRaw} from \"./projection/stereographic.js\";\nexport {default as geoTransverseMercator, transverseMercatorRaw as geoTransverseMercatorRaw} from \"./projection/transverseMercator.js\";\nexport {default as geoRotation} from \"./rotation.js\";\nexport {default as geoStream} from \"./stream.js\";\nexport {default as geoTransform} from \"./transform.js\";\n", "function defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n", "function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n", "export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n", "export default function(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n", "export default function(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n", "export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n", "export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n", "export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n", "export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n", "export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n", "export default function() {\n  return Array.from(this);\n}\n", "export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n", "export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don\u2019t include the root\u2019s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n", "export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n", "import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_find from \"./find.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nimport node_iterator from \"./iterator.js\";\n\nexport default function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n", "export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n", "export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n", "// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n", "export default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n\nexport function shuffle(array, random) {\n  let m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n", "import {shuffle} from \"../array.js\";\nimport lcg from \"../lcg.js\";\n\nexport default function(circles) {\n  return packEncloseRandom(circles, lcg());\n}\n\nexport function packEncloseRandom(circles, random) {\n  var i = 0, n = (circles = shuffle(Array.from(circles), random)).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(Math.abs(A) > 1e-6 ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n", "import array from \"../array.js\";\nimport lcg from \"../lcg.js\";\nimport {packEncloseRandom} from \"./enclose.js\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packSiblingsRandom(circles, random) {\n  if (!(n = (circles = array(circles)).length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle\u2026\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // \u201CCloseness\u201D is determined by linear distance along the front-chain.\n    // \u201CAhead\u201D or \u201Cbehind\u201D is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = packEncloseRandom(a, random);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packSiblingsRandom(circles, lcg());\n  return circles;\n}\n", "import {optional} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\nimport lcg from \"../lcg.js\";\nimport {packSiblingsRandom} from \"./siblings.js\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    const random = lcg();\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildrenRandom(padding, 0.5, random))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildrenRandom(constantZero, 1, random))\n          .eachAfter(packChildrenRandom(padding, root.r / Math.min(dx, dy), random))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildrenRandom(padding, k, random) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packSiblingsRandom(children, random);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n", "export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n", "export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n", "import roundNode from \"./treemap/round.js\";\nimport treemapDice from \"./treemap/dice.js\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n", "import {optional} from \"./accessors.js\";\nimport {Node, computeHeight} from \"./hierarchy/index.js\";\n\nvar preroot = {depth: -1},\n    ambiguous = {},\n    imputed = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nexport default function() {\n  var id = defaultId,\n      parentId = defaultParentId,\n      path;\n\n  function stratify(data) {\n    var nodes = Array.from(data),\n        currentId = id,\n        currentParentId = parentId,\n        n,\n        d,\n        i,\n        root,\n        parent,\n        node,\n        nodeId,\n        nodeKey,\n        nodeByKey = new Map;\n\n    if (path != null) {\n      const I = nodes.map((d, i) => normalize(path(d, i, data)));\n      const P = I.map(parentof);\n      const S = new Set(I).add(\"\");\n      for (const i of P) {\n        if (!S.has(i)) {\n          S.add(i);\n          I.push(i);\n          P.push(parentof(i));\n          nodes.push(imputed);\n        }\n      }\n      currentId = (_, i) => I[i];\n      currentParentId = (_, i) => P[i];\n    }\n\n    for (i = 0, n = nodes.length; i < n; ++i) {\n      d = nodes[i], node = nodes[i] = new Node(d);\n      if ((nodeId = currentId(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = node.id = nodeId;\n        nodeByKey.set(nodeKey, nodeByKey.has(nodeKey) ? ambiguous : node);\n      }\n      if ((nodeId = currentParentId(d, i, data)) != null && (nodeId += \"\")) {\n        node.parent = nodeId;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (nodeId = node.parent) {\n        parent = nodeByKey.get(nodeId);\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      } else {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n\n    // When imputing internal nodes, only introduce roots if needed.\n    // Then replace the imputed marker data with null.\n    if (path != null) {\n      while (root.data === imputed && root.children.length === 1) {\n        root = root.children[0], --n;\n      }\n      for (let i = nodes.length - 1; i >= 0; --i) {\n        node = nodes[i];\n        if (node.data !== imputed) break;\n        node.data = null;\n      }\n    }\n\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = optional(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = optional(x), stratify) : parentId;\n  };\n\n  stratify.path = function(x) {\n    return arguments.length ? (path = optional(x), stratify) : path;\n  };\n\n  return stratify;\n}\n\n// To normalize a path, we coerce to a string, strip the trailing slash if any\n// (as long as the trailing slash is not immediately preceded by another slash),\n// and add leading slash if missing.\nfunction normalize(path) {\n  path = `${path}`;\n  let i = path.length;\n  if (slash(path, i - 1) && !slash(path, i - 2)) path = path.slice(0, -1);\n  return path[0] === \"/\" ? path : `/${path}`;\n}\n\n// Walk backwards to find the first slash that is not the leading slash, e.g.:\n// \"/foo/bar\" \u21E5 \"/foo\", \"/foo\" \u21E5 \"/\", \"/\" \u21A6 \"\". (The root is special-cased\n// because the id of the root must be a truthy value.)\nfunction parentof(path) {\n  let i = path.length;\n  if (i < 2) return \"\";\n  while (--i > 1) if (slash(path, i)) break;\n  return path.slice(0, i);\n}\n\n// Slashes can be escaped; to determine whether a slash is a path delimiter, we\n// count the number of preceding backslashes escaping the forward slash: an odd\n// number indicates an escaped forward slash.\nfunction slash(path, i) {\n  if (path[i] === \"/\") {\n    let k = 0;\n    while (i > 0 && path[--i] === \"\\\\\") ++k;\n    if ((k & 1) === 0) return true;\n  }\n  return false;\n}\n", "import {Node} from \"./hierarchy/index.js\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-\u2019s ancestor is a sibling of v, returns vi-\u2019s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.\u2019s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n", "export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n", "import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n", "import roundNode from \"./round.js\";\nimport squarify from \"./squarify.js\";\nimport {required} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n", "export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n", "import dice from \"./dice.js\";\nimport slice from \"./slice.js\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n", "import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\nimport {phi, squarifyRatio} from \"./squarify.js\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += (y1 - y0) * row.value / value : y1);\n        else treemapSlice(row, x0, y0, value ? x0 += (x1 - x0) * row.value / value : x1, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n", "export {default as cluster} from \"./cluster.js\";\nexport {default as hierarchy, Node} from \"./hierarchy/index.js\";\nexport {default as pack} from \"./pack/index.js\";\nexport {default as packSiblings} from \"./pack/siblings.js\";\nexport {default as packEnclose} from \"./pack/enclose.js\";\nexport {default as partition} from \"./partition.js\";\nexport {default as stratify} from \"./stratify.js\";\nexport {default as tree} from \"./tree.js\";\nexport {default as treemap} from \"./treemap/index.js\";\nexport {default as treemapBinary} from \"./treemap/binary.js\";\nexport {default as treemapDice} from \"./treemap/dice.js\";\nexport {default as treemapSlice} from \"./treemap/slice.js\";\nexport {default as treemapSliceDice} from \"./treemap/sliceDice.js\";\nexport {default as treemapSquarify} from \"./treemap/squarify.js\";\nexport {default as treemapResquarify} from \"./treemap/resquarify.js\";\n", "export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n", "export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n", "// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nexport default function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n", "import cross from \"./cross.js\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  const n = points.length,\n      indexes = [0, 1];\n  let size = 2, i;\n\n  for (i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n", "export default function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n", "export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.hypot(xa, ya);\n  }\n\n  return perimeter;\n}\n", "export {default as polygonArea} from \"./area.js\";\nexport {default as polygonCentroid} from \"./centroid.js\";\nexport {default as polygonHull} from \"./hull.js\";\nexport {default as polygonContains} from \"./contains.js\";\nexport {default as polygonLength} from \"./length.js\";\n", "export default Math.random;\n", "import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomInt(source) {\n  function randomInt(min, max) {\n    if (arguments.length < 2) max = min, min = 0;\n    min = Math.floor(min);\n    max = Math.floor(max) - min;\n    return function() {\n      return Math.floor(source() * max + min);\n    };\n  }\n\n  randomInt.source = sourceRandomInt;\n\n  return randomInt;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\nimport normal from \"./normal.js\";\n\nexport default (function sourceRandomLogNormal(source) {\n  var N = normal.source(source);\n\n  function randomLogNormal() {\n    var randomNormal = N.apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    if ((n = +n) <= 0) return () => 0;\n    return function() {\n      for (var sum = 0, i = n; i > 1; --i) sum += source();\n      return sum + i * source();\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\nimport irwinHall from \"./irwinHall.js\";\n\nexport default (function sourceRandomBates(source) {\n  var I = irwinHall.source(source);\n\n  function randomBates(n) {\n    // use limiting distribution at n === 0\n    if ((n = +n) === 0) return source;\n    var randomIrwinHall = I(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log1p(-source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomPareto(source) {\n  function randomPareto(alpha) {\n    if ((alpha = +alpha) < 0) throw new RangeError(\"invalid alpha\");\n    alpha = 1 / -alpha;\n    return function() {\n      return Math.pow(1 - source(), alpha);\n    };\n  }\n\n  randomPareto.source = sourceRandomPareto;\n\n  return randomPareto;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomBernoulli(source) {\n  function randomBernoulli(p) {\n    if ((p = +p) < 0 || p > 1) throw new RangeError(\"invalid p\");\n    return function() {\n      return Math.floor(source() + p);\n    };\n  }\n\n  randomBernoulli.source = sourceRandomBernoulli;\n\n  return randomBernoulli;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomGeometric(source) {\n  function randomGeometric(p) {\n    if ((p = +p) < 0 || p > 1) throw new RangeError(\"invalid p\");\n    if (p === 0) return () => Infinity;\n    if (p === 1) return () => 1;\n    p = Math.log1p(-p);\n    return function() {\n      return 1 + Math.floor(Math.log1p(-source()) / p);\n    };\n  }\n\n  randomGeometric.source = sourceRandomGeometric;\n\n  return randomGeometric;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\nimport normal from \"./normal.js\";\n\nexport default (function sourceRandomGamma(source) {\n  var randomNormal = normal.source(source)();\n\n  function randomGamma(k, theta) {\n    if ((k = +k) < 0) throw new RangeError(\"invalid k\");\n    // degenerate distribution if k === 0\n    if (k === 0) return () => 0;\n    theta = theta == null ? 1 : +theta;\n    // exponential distribution if k === 1\n    if (k === 1) return () => -Math.log1p(-source()) * theta;\n\n    var d = (k < 1 ? k + 1 : k) - 1 / 3,\n        c = 1 / (3 * Math.sqrt(d)),\n        multiplier = k < 1 ? () => Math.pow(source(), 1 / k) : () => 1;\n    return function() {\n      do {\n        do {\n          var x = randomNormal(),\n              v = 1 + c * x;\n        } while (v <= 0);\n        v *= v * v;\n        var u = 1 - source();\n      } while (u >= 1 - 0.0331 * x * x * x * x && Math.log(u) >= 0.5 * x * x + d * (1 - v + Math.log(v)));\n      return d * v * multiplier() * theta;\n    };\n  }\n\n  randomGamma.source = sourceRandomGamma;\n\n  return randomGamma;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\nimport gamma from \"./gamma.js\";\n\nexport default (function sourceRandomBeta(source) {\n  var G = gamma.source(source);\n\n  function randomBeta(alpha, beta) {\n    var X = G(alpha),\n        Y = G(beta);\n    return function() {\n      var x = X();\n      return x === 0 ? 0 : x / (x + Y());\n    };\n  }\n\n  randomBeta.source = sourceRandomBeta;\n\n  return randomBeta;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\nimport beta from \"./beta.js\";\nimport geometric from \"./geometric.js\";\n\nexport default (function sourceRandomBinomial(source) {\n  var G = geometric.source(source),\n      B = beta.source(source);\n\n  function randomBinomial(n, p) {\n    n = +n;\n    if ((p = +p) >= 1) return () => n;\n    if (p <= 0) return () => 0;\n    return function() {\n      var acc = 0, nn = n, pp = p;\n      while (nn * pp > 16 && nn * (1 - pp) > 16) {\n        var i = Math.floor((nn + 1) * pp),\n            y = B(i, nn - i + 1)();\n        if (y <= pp) {\n          acc += i;\n          nn -= i;\n          pp = (pp - y) / (1 - y);\n        } else {\n          nn = i - 1;\n          pp /= y;\n        }\n      }\n      var sign = pp < 0.5,\n          pFinal = sign ? pp : 1 - pp,\n          g = G(pFinal);\n      for (var s = g(), k = 0; s <= nn; ++k) s += g();\n      return acc + (sign ? k : nn - k);\n    };\n  }\n\n  randomBinomial.source = sourceRandomBinomial;\n\n  return randomBinomial;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomWeibull(source) {\n  function randomWeibull(k, a, b) {\n    var outerFunc;\n    if ((k = +k) === 0) {\n      outerFunc = x => -Math.log(x);\n    } else {\n      k = 1 / k;\n      outerFunc = x => Math.pow(x, k);\n    }\n    a = a == null ? 0 : +a;\n    b = b == null ? 1 : +b;\n    return function() {\n      return a + b * outerFunc(-Math.log1p(-source()));\n    };\n  }\n\n  randomWeibull.source = sourceRandomWeibull;\n\n  return randomWeibull;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomCauchy(source) {\n  function randomCauchy(a, b) {\n    a = a == null ? 0 : +a;\n    b = b == null ? 1 : +b;\n    return function() {\n      return a + b * Math.tan(Math.PI * source());\n    };\n  }\n\n  randomCauchy.source = sourceRandomCauchy;\n\n  return randomCauchy;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomLogistic(source) {\n  function randomLogistic(a, b) {\n    a = a == null ? 0 : +a;\n    b = b == null ? 1 : +b;\n    return function() {\n      var u = source();\n      return a + b * Math.log(u / (1 - u));\n    };\n  }\n\n  randomLogistic.source = sourceRandomLogistic;\n\n  return randomLogistic;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\nimport binomial from \"./binomial.js\";\nimport gamma from \"./gamma.js\";\n\nexport default (function sourceRandomPoisson(source) {\n  var G = gamma.source(source),\n      B = binomial.source(source);\n\n  function randomPoisson(lambda) {\n    return function() {\n      var acc = 0, l = lambda;\n      while (l > 16) {\n        var n = Math.floor(0.875 * l),\n            t = G(n)();\n        if (t > l) return acc + B(n - 1, l / t)();\n        acc += n;\n        l -= t;\n      }\n      for (var s = -Math.log1p(-source()), k = 0; s <= l; ++k) s -= Math.log1p(-source());\n      return acc + k;\n    };\n  }\n\n  randomPoisson.source = sourceRandomPoisson;\n\n  return randomPoisson;\n})(defaultSource);\n", "// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst mul = 0x19660D;\nconst inc = 0x3C6EF35F;\nconst eps = 1 / 0x100000000;\n\nexport default function lcg(seed = Math.random()) {\n  let state = (0 <= seed && seed < 1 ? seed / eps : Math.abs(seed)) | 0;\n  return () => (state = mul * state + inc | 0, eps * (state >>> 0));\n}\n", "export {default as randomUniform} from \"./uniform.js\";\nexport {default as randomInt} from \"./int.js\";\nexport {default as randomNormal} from \"./normal.js\";\nexport {default as randomLogNormal} from \"./logNormal.js\";\nexport {default as randomBates} from \"./bates.js\";\nexport {default as randomIrwinHall} from \"./irwinHall.js\";\nexport {default as randomExponential} from \"./exponential.js\";\nexport {default as randomPareto} from \"./pareto.js\";\nexport {default as randomBernoulli} from \"./bernoulli.js\";\nexport {default as randomGeometric} from \"./geometric.js\";\nexport {default as randomBinomial} from \"./binomial.js\";\nexport {default as randomGamma} from \"./gamma.js\";\nexport {default as randomBeta} from \"./beta.js\";\nexport {default as randomWeibull} from \"./weibull.js\";\nexport {default as randomCauchy} from \"./cauchy.js\";\nexport {default as randomLogistic} from \"./logistic.js\";\nexport {default as randomPoisson} from \"./poisson.js\";\nexport {default as randomLcg} from \"./lcg.js\";\n", "export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n", "import {InternMap} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport const implicit = Symbol(\"implicit\");\n\nexport default function ordinal() {\n  var index = new InternMap(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    let i = index.get(d);\n    if (i === undefined) {\n      if (unknown !== implicit) return unknown;\n      index.set(d, i = domain.push(d) - 1);\n    }\n    return range[i % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = new InternMap();\n    for (const value of _) {\n      if (index.has(value)) continue;\n      index.set(value, domain.push(value) - 1);\n    }\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n", "import {range as sequence} from \"d3-array\";\nimport {initRange} from \"./init.js\";\nimport ordinal from \"./ordinal.js\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      r0 = 0,\n      r1 = 1,\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = r1 < r0,\n        start = reverse ? r1 : r0,\n        stop = reverse ? r0 : r1;\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];\n  };\n\n  scale.rangeRound = function(_) {\n    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), [r0, r1])\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n", "export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n", "export default function number(x) {\n  return +x;\n}\n", "import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n", "import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n", "import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n", "import {linearish} from \"./linear.js\";\nimport number from \"./number.js\";\n\nexport default function identity(domain) {\n  var unknown;\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), scale) : domain.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return identity(domain).unknown(unknown);\n  };\n\n  domain = arguments.length ? Array.from(domain, number) : [0, 1];\n\n  return linearish(scale);\n}\n", "export default function nice(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n", "import {ticks} from \"d3-array\";\nimport {format, formatSpecifier} from \"d3-format\";\nimport nice from \"./nice.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : x => Math.pow(base, x);\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), x => Math.log(x) / base);\n}\n\nfunction reflect(f) {\n  return (x, k) => -f(-x, k);\n}\n\nexport function loggish(transform) {\n  const scale = transform(transformLog, transformExp);\n  const domain = scale.domain;\n  let base = 10;\n  let logs;\n  let pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = count => {\n    const d = domain();\n    let u = d[0];\n    let v = d[d.length - 1];\n    const r = v < u;\n\n    if (r) ([u, v] = [v, u]);\n\n    let i = logs(u);\n    let j = logs(v);\n    let k;\n    let t;\n    const n = count == null ? 10 : +count;\n    let z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.floor(i), j = Math.ceil(j);\n      if (u > 0) for (; i <= j; ++i) {\n        for (k = 1; k < base; ++k) {\n          t = i < 0 ? k / pows(-i) : k * pows(i);\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i <= j; ++i) {\n        for (k = base - 1; k >= 1; --k) {\n          t = i > 0 ? k / pows(-i) : k * pows(i);\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n      if (z.length * 2 < n) z = ticks(u, v, n);\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = (count, specifier) => {\n    if (count == null) count = 10;\n    if (specifier == null) specifier = base === 10 ? \"s\" : \",\";\n    if (typeof specifier !== \"function\") {\n      if (!(base % 1) && (specifier = formatSpecifier(specifier)).precision == null) specifier.trim = true;\n      specifier = format(specifier);\n    }\n    if (count === Infinity) return specifier;\n    const k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return d => {\n      let i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = () => {\n    return domain(nice(domain(), {\n      floor: x => pows(Math.floor(logs(x))),\n      ceil: x => pows(Math.ceil(logs(x)))\n    }));\n  };\n\n  return scale;\n}\n\nexport default function log() {\n  const scale = loggish(transformer()).domain([1, 10]);\n  scale.copy = () => copy(scale, log()).base(scale.base());\n  initRange.apply(scale, arguments);\n  return scale;\n}\n", "import {linearish} from \"./linear.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nexport function symlogish(transform) {\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\n\nexport default function symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n", "import {linearish} from \"./linear.js\";\nimport {copy, identity, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformPow(exponent) {\n  return function(x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\n\nfunction transformSqrt(x) {\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n}\n\nfunction transformSquare(x) {\n  return x < 0 ? -x * x : x * x;\n}\n\nexport function powish(transform) {\n  var scale = transform(identity, identity),\n      exponent = 1;\n\n  function rescale() {\n    return exponent === 1 ? transform(identity, identity)\n        : exponent === 0.5 ? transform(transformSqrt, transformSquare)\n        : transform(transformPow(exponent), transformPow(1 / exponent));\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, rescale()) : exponent;\n  };\n\n  return linearish(scale);\n}\n\nexport default function pow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, pow()).exponent(scale.exponent());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nexport function sqrt() {\n  return pow.apply(null, arguments).exponent(0.5);\n}\n", "import continuous from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport {linearish} from \"./linear.js\";\nimport number from \"./number.js\";\n\nfunction square(x) {\n  return Math.sign(x) * x * x;\n}\n\nfunction unsquare(x) {\n  return Math.sign(x) * Math.sqrt(Math.abs(x));\n}\n\nexport default function radial() {\n  var squared = continuous(),\n      range = [0, 1],\n      round = false,\n      unknown;\n\n  function scale(x) {\n    var y = unsquare(squared(x));\n    return isNaN(y) ? unknown : round ? Math.round(y) : y;\n  }\n\n  scale.invert = function(y) {\n    return squared.invert(square(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (squared.domain(_), scale) : squared.domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (squared.range((range = Array.from(_, number)).map(square)), scale) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return scale.range(_).round(true);\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, scale) : round;\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (squared.clamp(_), scale) : squared.clamp();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return radial(squared.domain(), range)\n        .round(round)\n        .clamp(squared.clamp())\n        .unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n", "import {ascending, bisect, quantileSorted as threshold} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [],\n      unknown;\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n", "import {bisect} from \"d3-array\";\nimport {linearish} from \"./linear.js\";\nimport {initRange} from \"./init.js\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1],\n      unknown;\n\n  function scale(x) {\n    return x != null && x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1] = _, x0 = +x0, x1 = +x1, rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = Array.from(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : scale;\n  };\n\n  scale.thresholds = function() {\n    return domain.slice();\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(linearish(scale), arguments);\n}\n", "import {bisect} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      unknown,\n      n = 1;\n\n  function scale(x) {\n    return x != null && x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n", "const t0 = new Date, t1 = new Date;\n\nexport function timeInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;\n  }\n\n  interval.floor = (date) => {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = (date) => {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = (date) => {\n    const d0 = interval(date), d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = (date, step) => {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = (start, stop, step) => {\n    const range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    let previous;\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = (test) => {\n    return timeInterval((date) => {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, (date, step) => {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = (start, end) => {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = (step) => {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? (d) => field(d) % step === 0\n              : (d) => interval.count(0, d) % step === 0);\n    };\n  }\n\n  return interval;\n}\n", "import {timeInterval} from \"./interval.js\";\n\nexport const millisecond = timeInterval(() => {\n  // noop\n}, (date, step) => {\n  date.setTime(+date + step);\n}, (start, end) => {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = (k) => {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return timeInterval((date) => {\n    date.setTime(Math.floor(date / k) * k);\n  }, (date, step) => {\n    date.setTime(+date + step * k);\n  }, (start, end) => {\n    return (end - start) / k;\n  });\n};\n\nexport const milliseconds = millisecond.range;\n", "export const durationSecond = 1000;\nexport const durationMinute = durationSecond * 60;\nexport const durationHour = durationMinute * 60;\nexport const durationDay = durationHour * 24;\nexport const durationWeek = durationDay * 7;\nexport const durationMonth = durationDay * 30;\nexport const durationYear = durationDay * 365;\n", "import {timeInterval} from \"./interval.js\";\nimport {durationSecond} from \"./duration.js\";\n\nexport const second = timeInterval((date) => {\n  date.setTime(date - date.getMilliseconds());\n}, (date, step) => {\n  date.setTime(+date + step * durationSecond);\n}, (start, end) => {\n  return (end - start) / durationSecond;\n}, (date) => {\n  return date.getUTCSeconds();\n});\n\nexport const seconds = second.range;\n", "import {timeInterval} from \"./interval.js\";\nimport {durationMinute, durationSecond} from \"./duration.js\";\n\nexport const timeMinute = timeInterval((date) => {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, (date, step) => {\n  date.setTime(+date + step * durationMinute);\n}, (start, end) => {\n  return (end - start) / durationMinute;\n}, (date) => {\n  return date.getMinutes();\n});\n\nexport const timeMinutes = timeMinute.range;\n\nexport const utcMinute = timeInterval((date) => {\n  date.setUTCSeconds(0, 0);\n}, (date, step) => {\n  date.setTime(+date + step * durationMinute);\n}, (start, end) => {\n  return (end - start) / durationMinute;\n}, (date) => {\n  return date.getUTCMinutes();\n});\n\nexport const utcMinutes = utcMinute.range;\n", "import {timeInterval} from \"./interval.js\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration.js\";\n\nexport const timeHour = timeInterval((date) => {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, (date, step) => {\n  date.setTime(+date + step * durationHour);\n}, (start, end) => {\n  return (end - start) / durationHour;\n}, (date) => {\n  return date.getHours();\n});\n\nexport const timeHours = timeHour.range;\n\nexport const utcHour = timeInterval((date) => {\n  date.setUTCMinutes(0, 0, 0);\n}, (date, step) => {\n  date.setTime(+date + step * durationHour);\n}, (start, end) => {\n  return (end - start) / durationHour;\n}, (date) => {\n  return date.getUTCHours();\n});\n\nexport const utcHours = utcHour.range;\n", "import {timeInterval} from \"./interval.js\";\nimport {durationDay, durationMinute} from \"./duration.js\";\n\nexport const timeDay = timeInterval(\n  date => date.setHours(0, 0, 0, 0),\n  (date, step) => date.setDate(date.getDate() + step),\n  (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay,\n  date => date.getDate() - 1\n);\n\nexport const timeDays = timeDay.range;\n\nexport const utcDay = timeInterval((date) => {\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCDate(date.getUTCDate() + step);\n}, (start, end) => {\n  return (end - start) / durationDay;\n}, (date) => {\n  return date.getUTCDate() - 1;\n});\n\nexport const utcDays = utcDay.range;\n\nexport const unixDay = timeInterval((date) => {\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCDate(date.getUTCDate() + step);\n}, (start, end) => {\n  return (end - start) / durationDay;\n}, (date) => {\n  return Math.floor(date / durationDay);\n});\n\nexport const unixDays = unixDay.range;\n", "import {timeInterval} from \"./interval.js\";\nimport {durationMinute, durationWeek} from \"./duration.js\";\n\nfunction timeWeekday(i) {\n  return timeInterval((date) => {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setDate(date.getDate() + step * 7);\n  }, (start, end) => {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport const timeSunday = timeWeekday(0);\nexport const timeMonday = timeWeekday(1);\nexport const timeTuesday = timeWeekday(2);\nexport const timeWednesday = timeWeekday(3);\nexport const timeThursday = timeWeekday(4);\nexport const timeFriday = timeWeekday(5);\nexport const timeSaturday = timeWeekday(6);\n\nexport const timeSundays = timeSunday.range;\nexport const timeMondays = timeMonday.range;\nexport const timeTuesdays = timeTuesday.range;\nexport const timeWednesdays = timeWednesday.range;\nexport const timeThursdays = timeThursday.range;\nexport const timeFridays = timeFriday.range;\nexport const timeSaturdays = timeSaturday.range;\n\nfunction utcWeekday(i) {\n  return timeInterval((date) => {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, (start, end) => {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport const utcSunday = utcWeekday(0);\nexport const utcMonday = utcWeekday(1);\nexport const utcTuesday = utcWeekday(2);\nexport const utcWednesday = utcWeekday(3);\nexport const utcThursday = utcWeekday(4);\nexport const utcFriday = utcWeekday(5);\nexport const utcSaturday = utcWeekday(6);\n\nexport const utcSundays = utcSunday.range;\nexport const utcMondays = utcMonday.range;\nexport const utcTuesdays = utcTuesday.range;\nexport const utcWednesdays = utcWednesday.range;\nexport const utcThursdays = utcThursday.range;\nexport const utcFridays = utcFriday.range;\nexport const utcSaturdays = utcSaturday.range;\n", "import {timeInterval} from \"./interval.js\";\n\nexport const timeMonth = timeInterval((date) => {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setMonth(date.getMonth() + step);\n}, (start, end) => {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, (date) => {\n  return date.getMonth();\n});\n\nexport const timeMonths = timeMonth.range;\n\nexport const utcMonth = timeInterval((date) => {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, (start, end) => {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, (date) => {\n  return date.getUTCMonth();\n});\n\nexport const utcMonths = utcMonth.range;\n", "import {timeInterval} from \"./interval.js\";\n\nexport const timeYear = timeInterval((date) => {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setFullYear(date.getFullYear() + step);\n}, (start, end) => {\n  return end.getFullYear() - start.getFullYear();\n}, (date) => {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\ntimeYear.every = (k) => {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : timeInterval((date) => {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport const timeYears = timeYear.range;\n\nexport const utcYear = timeInterval((date) => {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, (start, end) => {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, (date) => {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = (k) => {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : timeInterval((date) => {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport const utcYears = utcYear.range;\n", "import {bisector, tickStep} from \"d3-array\";\nimport {durationDay, durationHour, durationMinute, durationMonth, durationSecond, durationWeek, durationYear} from \"./duration.js\";\nimport {millisecond} from \"./millisecond.js\";\nimport {second} from \"./second.js\";\nimport {timeMinute, utcMinute} from \"./minute.js\";\nimport {timeHour, utcHour} from \"./hour.js\";\nimport {timeDay, unixDay} from \"./day.js\";\nimport {timeSunday, utcSunday} from \"./week.js\";\nimport {timeMonth, utcMonth} from \"./month.js\";\nimport {timeYear, utcYear} from \"./year.js\";\n\nfunction ticker(year, month, week, day, hour, minute) {\n\n  const tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function ticks(start, stop, count) {\n    const reverse = stop < start;\n    if (reverse) [start, stop] = [stop, start];\n    const interval = count && typeof count.range === \"function\" ? count : tickInterval(start, stop, count);\n    const ticks = interval ? interval.range(start, +stop + 1) : []; // inclusive stop\n    return reverse ? ticks.reverse() : ticks;\n  }\n\n  function tickInterval(start, stop, count) {\n    const target = Math.abs(stop - start) / count;\n    const i = bisector(([,, step]) => step).right(tickIntervals, target);\n    if (i === tickIntervals.length) return year.every(tickStep(start / durationYear, stop / durationYear, count));\n    if (i === 0) return millisecond.every(Math.max(tickStep(start, stop, count), 1));\n    const [t, step] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n    return t.every(step);\n  }\n\n  return [ticks, tickInterval];\n}\n\nconst [utcTicks, utcTickInterval] = ticker(utcYear, utcMonth, utcSunday, unixDay, utcHour, utcMinute);\nconst [timeTicks, timeTickInterval] = ticker(timeYear, timeMonth, timeSunday, timeDay, timeHour, timeMinute);\n\nexport {utcTicks, utcTickInterval, timeTicks, timeTickInterval};\n", "export {\n  timeInterval\n} from \"./interval.js\";\n\nexport {\n  millisecond as utcMillisecond,\n  milliseconds as utcMilliseconds,\n  millisecond as timeMillisecond,\n  milliseconds as timeMilliseconds\n} from \"./millisecond.js\";\n\nexport {\n  second as utcSecond,\n  seconds as utcSeconds,\n  second as timeSecond,\n  seconds as timeSeconds\n} from \"./second.js\";\n\nexport {\n  timeMinute,\n  timeMinutes,\n  utcMinute,\n  utcMinutes\n} from \"./minute.js\";\n\nexport {\n  timeHour,\n  timeHours,\n  utcHour,\n  utcHours\n} from \"./hour.js\";\n\nexport {\n  timeDay,\n  timeDays,\n  utcDay,\n  utcDays,\n  unixDay,\n  unixDays\n} from \"./day.js\";\n\nexport {\n  timeSunday as timeWeek,\n  timeSundays as timeWeeks,\n  timeSunday,\n  timeSundays,\n  timeMonday,\n  timeMondays,\n  timeTuesday,\n  timeTuesdays,\n  timeWednesday,\n  timeWednesdays,\n  timeThursday,\n  timeThursdays,\n  timeFriday,\n  timeFridays,\n  timeSaturday,\n  timeSaturdays,\n  utcSunday as utcWeek,\n  utcSundays as utcWeeks,\n  utcSunday,\n  utcSundays,\n  utcMonday,\n  utcMondays,\n  utcTuesday,\n  utcTuesdays,\n  utcWednesday,\n  utcWednesdays,\n  utcThursday,\n  utcThursdays,\n  utcFriday,\n  utcFridays,\n  utcSaturday,\n  utcSaturdays\n} from \"./week.js\";\n\nexport {\n  timeMonth,\n  timeMonths,\n  utcMonth,\n  utcMonths\n} from \"./month.js\";\n\nexport {\n  timeYear,\n  timeYears,\n  utcYear,\n  utcYears\n} from \"./year.js\";\n\nexport {\n  utcTicks,\n  utcTickInterval,\n  timeTicks,\n  timeTickInterval\n} from \"./ticks.js\";\n", "import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newDate(y, m, d) {\n  return {y: y, m: m, d: d, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"g\": formatYearISO,\n    \"G\": formatFullYearISO,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"q\": formatQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"g\": formatUTCYearISO,\n    \"G\": formatUTCFullYearISO,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"q\": formatUTCQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"g\": parseYear,\n    \"G\": parseFullYear,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"q\": parseQuarter,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, Z) {\n    return function(string) {\n      var d = newDate(1900, undefined, 1),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n      if (\"s\" in d) return new Date(d.s * 1000 + (\"L\" in d ? d.L : 0));\n\n      // If this is utcParse, never use the local timezone.\n      if (Z && !(\"Z\" in d)) d.Z = 0;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // If the month was not specified, inherit from the quarter.\n      if (d.m === undefined) d.m = \"q\" in d ? d.q : 0;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return localDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatQuarter(d) {\n    return 1 + ~~(d.getMonth() / 3);\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  function formatUTCQuarter(d) {\n    return 1 + ~~(d.getUTCMonth() / 3);\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", false);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier += \"\", true);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  return new Map(names.map((name, i) => [name.toLowerCase(), i]));\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseQuarter(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.s = +n[0], i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d) - 1, d), p, 2);\n}\n\nfunction dISO(d) {\n  var day = d.getDay();\n  return (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  d = dISO(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d) - 1, d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatYearISO(d, p) {\n  d = dISO(d);\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatFullYearISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d) - 1, d), p, 2);\n}\n\nfunction UTCdISO(d) {\n  var day = d.getUTCDay();\n  return (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  d = UTCdISO(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d) - 1, d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCYearISO(d, p) {\n  d = UTCdISO(d);\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCFullYearISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n", "import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n", "import {utcFormat} from \"./defaultLocale.js\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n", "import {isoSpecifier} from \"./isoFormat.js\";\nimport {utcParse} from \"./defaultLocale.js\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n", "export {default as timeFormatDefaultLocale, timeFormat, timeParse, utcFormat, utcParse} from \"./defaultLocale.js\";\nexport {default as timeFormatLocale} from \"./locale.js\";\nexport {default as isoFormat} from \"./isoFormat.js\";\nexport {default as isoParse} from \"./isoParse.js\";\n", "import {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeTicks, timeTickInterval} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport nice from \"./nice.js\";\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format) {\n  var scale = continuous(),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(Array.from(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], interval == null ? 10 : interval);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval) {\n    var d = domain();\n    if (!interval || typeof interval.range !== \"function\") interval = tickInterval(d[0], d[d.length - 1], interval == null ? 10 : interval);\n    return interval ? domain(nice(d, interval)) : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format));\n  };\n\n  return scale;\n}\n\nexport default function time() {\n  return initRange.apply(calendar(timeTicks, timeTickInterval, timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n", "import {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcTicks, utcTickInterval} from \"d3-time\";\nimport {utcFormat} from \"d3-time-format\";\nimport {calendar} from \"./time.js\";\nimport {initRange} from \"./init.js\";\n\nexport default function utcTime() {\n  return initRange.apply(calendar(utcTicks, utcTickInterval, utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\n}\n", "import {interpolate, interpolateRound} from \"d3-interpolate\";\nimport {identity} from \"./continuous.js\";\nimport {initInterpolator} from \"./init.js\";\nimport {linearish} from \"./linear.js\";\nimport {loggish} from \"./log.js\";\nimport {symlogish} from \"./symlog.js\";\nimport {powish} from \"./pow.js\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  function range(interpolate) {\n    return function(_) {\n      var r0, r1;\n      return arguments.length ? ([r0, r1] = _, interpolator = interpolate(r0, r1), scale) : [interpolator(0), interpolator(1)];\n    };\n  }\n\n  scale.range = range(interpolate);\n\n  scale.rangeRound = range(interpolateRound);\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .interpolator(source.interpolator())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport default function sequential() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialLog() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n", "import {ascending, bisect, quantile} from \"d3-array\";\nimport {identity} from \"./continuous.js\";\nimport {initInterpolator} from \"./init.js\";\n\nexport default function sequentialQuantile() {\n  var domain = [],\n      interpolator = identity;\n\n  function scale(x) {\n    if (x != null && !isNaN(x = +x)) return interpolator((bisect(domain, x, 1) - 1) / (domain.length - 1));\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return scale;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.range = function() {\n    return domain.map((d, i) => interpolator(i / (domain.length - 1)));\n  };\n\n  scale.quantiles = function(n) {\n    return Array.from({length: n + 1}, (_, i) => quantile(domain, i / n));\n  };\n\n  scale.copy = function() {\n    return sequentialQuantile(interpolator).domain(domain);\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n", "import {interpolate, interpolateRound, piecewise} from \"d3-interpolate\";\nimport {identity} from \"./continuous.js\";\nimport {initInterpolator} from \"./init.js\";\nimport {linearish} from \"./linear.js\";\nimport {loggish} from \"./log.js\";\nimport {copy} from \"./sequential.js\";\nimport {symlogish} from \"./symlog.js\";\nimport {powish} from \"./pow.js\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      s = 1,\n      t0,\n      t1,\n      t2,\n      k10,\n      k21,\n      interpolator = identity,\n      transform,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (s * x < s * t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1, x2] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), t2 = transform(x2 = +x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1, scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  function range(interpolate) {\n    return function(_) {\n      var r0, r1, r2;\n      return arguments.length ? ([r0, r1, r2] = _, interpolator = piecewise(interpolate, [r0, r1, r2]), scale) : [interpolator(0), interpolator(0.5), interpolator(1)];\n    };\n  }\n\n  scale.range = range(interpolate);\n\n  scale.rangeRound = range(interpolateRound);\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1;\n    return scale;\n  };\n}\n\nexport default function diverging() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, diverging());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingLog() {\n  var scale = loggish(transformer()).domain([0.1, 1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, divergingLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSqrt() {\n  return divergingPow.apply(null, arguments).exponent(0.5);\n}\n", "export {\n  default as scaleBand,\n  point as scalePoint\n} from \"./band.js\";\n\nexport {\n  default as scaleIdentity\n} from \"./identity.js\";\n\nexport {\n  default as scaleLinear\n} from \"./linear.js\";\n\nexport {\n  default as scaleLog\n} from \"./log.js\";\n\nexport {\n  default as scaleSymlog\n} from \"./symlog.js\";\n\nexport {\n  default as scaleOrdinal,\n  implicit as scaleImplicit\n} from \"./ordinal.js\";\n\nexport {\n  default as scalePow,\n  sqrt as scaleSqrt\n} from \"./pow.js\";\n\nexport {\n  default as scaleRadial\n} from \"./radial.js\";\n\nexport {\n  default as scaleQuantile\n} from \"./quantile.js\";\n\nexport {\n  default as scaleQuantize\n} from \"./quantize.js\";\n\nexport {\n  default as scaleThreshold\n} from \"./threshold.js\";\n\nexport {\n  default as scaleTime\n} from \"./time.js\";\n\nexport {\n  default as scaleUtc\n} from \"./utcTime.js\";\n\nexport {\n  default as scaleSequential,\n  sequentialLog as scaleSequentialLog,\n  sequentialPow as scaleSequentialPow,\n  sequentialSqrt as scaleSequentialSqrt,\n  sequentialSymlog as scaleSequentialSymlog\n} from \"./sequential.js\";\n\nexport {\n  default as scaleSequentialQuantile\n} from \"./sequentialQuantile.js\";\n\nexport {\n  default as scaleDiverging,\n  divergingLog as scaleDivergingLog,\n  divergingPow as scaleDivergingPow,\n  divergingSqrt as scaleDivergingSqrt,\n  divergingSymlog as scaleDivergingSymlog\n} from \"./diverging.js\";\n\nexport {\n  default as tickFormat\n} from \"./tickFormat.js\";\n", "export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n", "import colors from \"../colors.js\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"4269d0efb118ff725c6cc5b03ca951ff8ab7a463f297bbf59c6b4e9498a0\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab\");\n", "import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default scheme => interpolateRgbBasis(scheme[scheme.length - 1]);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n", "export default function(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67)))))))\n      + \")\";\n}\n", "import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n", "import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n", "import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n", "export default function(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66)))))))\n      + \")\";\n}\n", "import colors from \"../colors.js\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n", "export {default as schemeCategory10} from \"./categorical/category10.js\";\nexport {default as schemeAccent} from \"./categorical/Accent.js\";\nexport {default as schemeDark2} from \"./categorical/Dark2.js\";\nexport {default as schemeObservable10} from \"./categorical/observable10.js\";\nexport {default as schemePaired} from \"./categorical/Paired.js\";\nexport {default as schemePastel1} from \"./categorical/Pastel1.js\";\nexport {default as schemePastel2} from \"./categorical/Pastel2.js\";\nexport {default as schemeSet1} from \"./categorical/Set1.js\";\nexport {default as schemeSet2} from \"./categorical/Set2.js\";\nexport {default as schemeSet3} from \"./categorical/Set3.js\";\nexport {default as schemeTableau10} from \"./categorical/Tableau10.js\";\nexport {default as interpolateBrBG, scheme as schemeBrBG} from \"./diverging/BrBG.js\";\nexport {default as interpolatePRGn, scheme as schemePRGn} from \"./diverging/PRGn.js\";\nexport {default as interpolatePiYG, scheme as schemePiYG} from \"./diverging/PiYG.js\";\nexport {default as interpolatePuOr, scheme as schemePuOr} from \"./diverging/PuOr.js\";\nexport {default as interpolateRdBu, scheme as schemeRdBu} from \"./diverging/RdBu.js\";\nexport {default as interpolateRdGy, scheme as schemeRdGy} from \"./diverging/RdGy.js\";\nexport {default as interpolateRdYlBu, scheme as schemeRdYlBu} from \"./diverging/RdYlBu.js\";\nexport {default as interpolateRdYlGn, scheme as schemeRdYlGn} from \"./diverging/RdYlGn.js\";\nexport {default as interpolateSpectral, scheme as schemeSpectral} from \"./diverging/Spectral.js\";\nexport {default as interpolateBuGn, scheme as schemeBuGn} from \"./sequential-multi/BuGn.js\";\nexport {default as interpolateBuPu, scheme as schemeBuPu} from \"./sequential-multi/BuPu.js\";\nexport {default as interpolateGnBu, scheme as schemeGnBu} from \"./sequential-multi/GnBu.js\";\nexport {default as interpolateOrRd, scheme as schemeOrRd} from \"./sequential-multi/OrRd.js\";\nexport {default as interpolatePuBuGn, scheme as schemePuBuGn} from \"./sequential-multi/PuBuGn.js\";\nexport {default as interpolatePuBu, scheme as schemePuBu} from \"./sequential-multi/PuBu.js\";\nexport {default as interpolatePuRd, scheme as schemePuRd} from \"./sequential-multi/PuRd.js\";\nexport {default as interpolateRdPu, scheme as schemeRdPu} from \"./sequential-multi/RdPu.js\";\nexport {default as interpolateYlGnBu, scheme as schemeYlGnBu} from \"./sequential-multi/YlGnBu.js\";\nexport {default as interpolateYlGn, scheme as schemeYlGn} from \"./sequential-multi/YlGn.js\";\nexport {default as interpolateYlOrBr, scheme as schemeYlOrBr} from \"./sequential-multi/YlOrBr.js\";\nexport {default as interpolateYlOrRd, scheme as schemeYlOrRd} from \"./sequential-multi/YlOrRd.js\";\nexport {default as interpolateBlues, scheme as schemeBlues} from \"./sequential-single/Blues.js\";\nexport {default as interpolateGreens, scheme as schemeGreens} from \"./sequential-single/Greens.js\";\nexport {default as interpolateGreys, scheme as schemeGreys} from \"./sequential-single/Greys.js\";\nexport {default as interpolatePurples, scheme as schemePurples} from \"./sequential-single/Purples.js\";\nexport {default as interpolateReds, scheme as schemeReds} from \"./sequential-single/Reds.js\";\nexport {default as interpolateOranges, scheme as schemeOranges} from \"./sequential-single/Oranges.js\";\nexport {default as interpolateCividis} from \"./sequential-multi/cividis.js\";\nexport {default as interpolateCubehelixDefault} from \"./sequential-multi/cubehelix.js\";\nexport {default as interpolateRainbow, warm as interpolateWarm, cool as interpolateCool} from \"./sequential-multi/rainbow.js\";\nexport {default as interpolateSinebow} from \"./sequential-multi/sinebow.js\";\nexport {default as interpolateTurbo} from \"./sequential-multi/turbo.js\";\nexport {default as interpolateViridis, magma as interpolateMagma, inferno as interpolateInferno, plasma as interpolatePlasma} from \"./sequential-multi/viridis.js\";\n", "export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n", "export const abs = Math.abs;\nexport const atan2 = Math.atan2;\nexport const cos = Math.cos;\nexport const max = Math.max;\nexport const min = Math.min;\nexport const sin = Math.sin;\nexport const sqrt = Math.sqrt;\n\nexport const epsilon = 1e-12;\nexport const pi = Math.PI;\nexport const halfPi = pi / 2;\nexport const tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n", "import {Path} from \"d3-path\";\n\nexport function withPath(shape) {\n  let digits = 3;\n\n  shape.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) {\n      digits = null;\n    } else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    return shape;\n  };\n\n  return () => new Path(digits);\n}\n", "import constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\nimport {withPath} from \"./path.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null,\n      path = withPath(arc);\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 \u2265 r0, da1 \u2265 da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle. If this\n        // intersection fails, it\u2019s probably because the arc is too small, so\n        // disable the corner radius entirely.\n        if (da < pi) {\n          if (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10)) {\n            var ax = x01 - oc[0],\n                ay = y01 - oc[1],\n                bx = x11 - oc[0],\n                by = y11 - oc[1],\n                kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n                lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n            rc0 = min(rc, (r0 - lc) / (kc - 1));\n            rc1 = min(rc, (r1 - lc) / (kc + 1));\n          } else {\n            rc0 = rc1 = 0;\n          }\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector\u2019s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it\u2019s a circular sector?\n      // Or perhaps it\u2019s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector\u2019s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n", "export var slice = Array.prototype.slice;\n\nexport default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n", "function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n", "export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n", "import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x, y) {\n  var defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null,\n      path = withPath(line);\n\n  x = typeof x === \"function\" ? x : (x === undefined) ? pointX : constant(x);\n  y = typeof y === \"function\" ? y : (y === undefined) ? pointY : constant(y);\n\n  function line(data) {\n    var i,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n", "import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x0, y0, y1) {\n  var x1 = null,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null,\n      path = withPath(area);\n\n  x0 = typeof x0 === \"function\" ? x0 : (x0 === undefined) ? pointX : constant(+x0);\n  y0 = typeof y0 === \"function\" ? y0 : (y0 === undefined) ? constant(0) : constant(+y0);\n  y1 = typeof y1 === \"function\" ? y1 : (y1 === undefined) ? pointY : constant(+y1);\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n", "export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n", "export default function(d) {\n  return d;\n}\n", "import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport descending from \"./descending.js\";\nimport identity from \"./identity.js\";\nimport {tau} from \"./math.js\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = (data = array(data)).length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n", "import curveLinear from \"./linear.js\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n", "import curveRadial, {curveRadialLinear} from \"./curve/radial.js\";\nimport line from \"./line.js\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n", "import curveRadial, {curveRadialLinear} from \"./curve/radial.js\";\nimport area from \"./area.js\";\nimport {lineRadial} from \"./lineRadial.js\";\n\nexport default function() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n", "export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n", "import pointRadial from \"../pointRadial.js\";\n\nclass Bump {\n  constructor(context, x) {\n    this._context = context;\n    this._x = x;\n  }\n  areaStart() {\n    this._line = 0;\n  }\n  areaEnd() {\n    this._line = NaN;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  }\n  point(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: {\n        this._point = 1;\n        if (this._line) this._context.lineTo(x, y);\n        else this._context.moveTo(x, y);\n        break;\n      }\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._x) this._context.bezierCurveTo(this._x0 = (this._x0 + x) / 2, this._y0, this._x0, y, x, y);\n        else this._context.bezierCurveTo(this._x0, this._y0 = (this._y0 + y) / 2, x, this._y0, x, y);\n        break;\n      }\n    }\n    this._x0 = x, this._y0 = y;\n  }\n}\n\nclass BumpRadial {\n  constructor(context) {\n    this._context = context;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {}\n  point(x, y) {\n    x = +x, y = +y;\n    if (this._point === 0) {\n      this._point = 1;\n    } else {\n      const p0 = pointRadial(this._x0, this._y0);\n      const p1 = pointRadial(this._x0, this._y0 = (this._y0 + y) / 2);\n      const p2 = pointRadial(x, this._y0);\n      const p3 = pointRadial(x, y);\n      this._context.moveTo(...p0);\n      this._context.bezierCurveTo(...p1, ...p2, ...p3);\n    }\n    this._x0 = x, this._y0 = y;\n  }\n}\n\nexport function bumpX(context) {\n  return new Bump(context, true);\n}\n\nexport function bumpY(context) {\n  return new Bump(context, false);\n}\n\nexport function bumpRadial(context) {\n  return new BumpRadial(context);\n}\n", "import {slice} from \"./array.js\";\nimport constant from \"./constant.js\";\nimport {bumpX, bumpY, bumpRadial} from \"./curve/bump.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nexport function link(curve) {\n  let source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null,\n      output = null,\n      path = withPath(link);\n\n  function link() {\n    let buffer;\n    const argv = slice.call(arguments);\n    const s = source.apply(this, argv);\n    const t = target.apply(this, argv);\n    if (context == null) output = curve(buffer = path());\n    output.lineStart();\n    argv[0] = s, output.point(+x.apply(this, argv), +y.apply(this, argv));\n    argv[0] = t, output.point(+x.apply(this, argv), +y.apply(this, argv));\n    output.lineEnd();\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), link) : context;\n  };\n\n  return link;\n}\n\nexport function linkHorizontal() {\n  return link(bumpX);\n}\n\nexport function linkVertical() {\n  return link(bumpY);\n}\n\nexport function linkRadial() {\n  const l = link(bumpRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n", "import {min, sqrt} from \"../math.js\";\n\nconst sqrt3 = sqrt(3);\n\nexport default {\n  draw(context, size) {\n    const r = sqrt(size + min(size / 28, 0.75)) * 0.59436;\n    const t = r / 2;\n    const u = t * sqrt3;\n    context.moveTo(0, r);\n    context.lineTo(0, -r);\n    context.moveTo(-u, -t);\n    context.lineTo(u, t);\n    context.moveTo(-u, t);\n    context.lineTo(u, -t);\n  }\n};\n", "import {pi, sqrt, tau} from \"../math.js\";\n\nexport default {\n  draw(context, size) {\n    const r = sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n", "import {sqrt} from \"../math.js\";\n\nexport default {\n  draw(context, size) {\n    const r = sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n", "import {sqrt} from \"../math.js\";\n\nconst tan30 = sqrt(1 / 3);\nconst tan30_2 = tan30 * 2;\n\nexport default {\n  draw(context, size) {\n    const y = sqrt(size / tan30_2);\n    const x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n", "import {sqrt} from \"../math.js\";\n\nexport default {\n  draw(context, size) {\n    const r = sqrt(size) * 0.62625;\n    context.moveTo(0, -r);\n    context.lineTo(r, 0);\n    context.lineTo(0, r);\n    context.lineTo(-r, 0);\n    context.closePath();\n  }\n};\n", "import {min, sqrt} from \"../math.js\";\n\nexport default {\n  draw(context, size) {\n    const r = sqrt(size - min(size / 7, 2)) * 0.87559;\n    context.moveTo(-r, 0);\n    context.lineTo(r, 0);\n    context.moveTo(0, r);\n    context.lineTo(0, -r);\n  }\n};\n", "import {sqrt} from \"../math.js\";\n\nexport default {\n  draw(context, size) {\n    const w = sqrt(size);\n    const x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n", "import {sqrt} from \"../math.js\";\n\nexport default {\n  draw(context, size) {\n    const r = sqrt(size) * 0.4431;\n    context.moveTo(r, r);\n    context.lineTo(r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, r);\n    context.closePath();\n  }\n};\n", "import {sin, cos, sqrt, pi, tau} from \"../math.js\";\n\nconst ka = 0.89081309152928522810;\nconst kr = sin(pi / 10) / sin(7 * pi / 10);\nconst kx = sin(tau / 10) * kr;\nconst ky = -cos(tau / 10) * kr;\n\nexport default {\n  draw(context, size) {\n    const r = sqrt(size * ka);\n    const x = kx * r;\n    const y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (let i = 1; i < 5; ++i) {\n      const a = tau * i / 5;\n      const c = cos(a);\n      const s = sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n", "import {sqrt} from \"../math.js\";\n\nconst sqrt3 = sqrt(3);\n\nexport default {\n  draw(context, size) {\n    const y = -sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n", "import {sqrt} from \"../math.js\";\n\nconst sqrt3 = sqrt(3);\n\nexport default {\n  draw(context, size) {\n    const s = sqrt(size) * 0.6824;\n    const t = s  / 2;\n    const u = (s * sqrt3) / 2; // cos(Math.PI / 6)\n    context.moveTo(0, -s);\n    context.lineTo(u, t);\n    context.lineTo(-u, t);\n    context.closePath();\n  }\n};\n", "import {sqrt} from \"../math.js\";\n\nconst c = -0.5;\nconst s = sqrt(3) / 2;\nconst k = 1 / sqrt(12);\nconst a = (k / 2 + 1) * 3;\n\nexport default {\n  draw(context, size) {\n    const r = sqrt(size / a);\n    const x0 = r / 2, y0 = r * k;\n    const x1 = x0, y1 = r * k + r;\n    const x2 = -x1, y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n", "import {min, sqrt} from \"../math.js\";\n\nexport default {\n  draw(context, size) {\n    const r = sqrt(size - min(size / 6, 1.7)) * 0.6189;\n    context.moveTo(-r, -r);\n    context.lineTo(r, r);\n    context.moveTo(-r, r);\n    context.lineTo(r, -r);\n  }\n};\n", "import constant from \"./constant.js\";\nimport {withPath} from \"./path.js\";\nimport asterisk from \"./symbol/asterisk.js\";\nimport circle from \"./symbol/circle.js\";\nimport cross from \"./symbol/cross.js\";\nimport diamond from \"./symbol/diamond.js\";\nimport diamond2 from \"./symbol/diamond2.js\";\nimport plus from \"./symbol/plus.js\";\nimport square from \"./symbol/square.js\";\nimport square2 from \"./symbol/square2.js\";\nimport star from \"./symbol/star.js\";\nimport triangle from \"./symbol/triangle.js\";\nimport triangle2 from \"./symbol/triangle2.js\";\nimport wye from \"./symbol/wye.js\";\nimport times from \"./symbol/times.js\";\n\n// These symbols are designed to be filled.\nexport const symbolsFill = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\n// These symbols are designed to be stroked (with a width of 1.5px and round caps).\nexport const symbolsStroke = [\n  circle,\n  plus,\n  times,\n  triangle2,\n  asterisk,\n  square2,\n  diamond2\n];\n\nexport default function Symbol(type, size) {\n  let context = null,\n      path = withPath(symbol);\n\n  type = typeof type === \"function\" ? type : constant(type || circle);\n  size = typeof size === \"function\" ? size : constant(size === undefined ? 64 : +size);\n\n  function symbol() {\n    let buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n", "export default function() {}\n", "export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // falls through\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n", "import noop from \"../noop.js\";\nimport {point} from \"./basis.js\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n", "import {point} from \"./basis.js\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n", "import {Basis} from \"./basis.js\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n", "export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n", "import noop from \"../noop.js\";\nimport {point} from \"./cardinal.js\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n", "import {point} from \"./cardinal.js\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n", "import {epsilon} from \"../math.js\";\nimport {Cardinal} from \"./cardinal.js\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n", "import {CardinalClosed} from \"./cardinalClosed.js\";\nimport noop from \"../noop.js\";\nimport {point} from \"./catmullRom.js\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n", "import {CardinalOpen} from \"./cardinalOpen.js\";\nimport {point} from \"./catmullRom.js\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // falls through\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n", "import noop from \"../noop.js\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n", "function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic B\u00E9zier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n", "function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n", "function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n", "export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n", "export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n", "import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport offsetNone from \"./offset/none.js\";\nimport orderNone from \"./order/none.js\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nfunction stackSeries(key) {\n  const series = [];\n  series.key = key;\n  return series;\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var sz = Array.from(keys.apply(this, arguments), stackSeries),\n        i, n = sz.length, j = -1,\n        oz;\n\n    for (const d of data) {\n      for (i = 0, ++j; i < n; ++i) {\n        (sz[i][j] = [0, +value(d, sz[i].key, j, data)]).data = d;\n      }\n    }\n\n    for (i = 0, oz = array(order(sz)); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(Array.from(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(Array.from(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n", "import none from \"./none.js\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n", "export default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = 0, d[1] = dy;\n      }\n    }\n  }\n}\n", "import none from \"./none.js\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n", "import none from \"./none.js\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n", "import none from \"./none.js\";\n\nexport default function(series) {\n  var peaks = series.map(peak);\n  return none(series).sort(function(a, b) { return peaks[a] - peaks[b]; });\n}\n\nfunction peak(series) {\n  var i = -1, j = 0, n = series.length, vi, vj = -Infinity;\n  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;\n  return j;\n}\n", "import none from \"./none.js\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n", "import ascending from \"./ascending.js\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n", "import appearance from \"./appearance.js\";\nimport {sum} from \"./ascending.js\";\n\nexport default function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = appearance(series),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n", "import none from \"./none.js\";\n\nexport default function(series) {\n  return none(series).reverse();\n}\n", "export {default as arc} from \"./arc.js\";\nexport {default as area} from \"./area.js\";\nexport {default as line} from \"./line.js\";\nexport {default as pie} from \"./pie.js\";\nexport {default as areaRadial, default as radialArea} from \"./areaRadial.js\"; // Note: radialArea is deprecated!\nexport {default as lineRadial, default as radialLine} from \"./lineRadial.js\"; // Note: radialLine is deprecated!\nexport {default as pointRadial} from \"./pointRadial.js\";\nexport {link, linkHorizontal, linkVertical, linkRadial} from \"./link.js\";\n\nexport {default as symbol, symbolsStroke, symbolsFill, symbolsFill as symbols} from \"./symbol.js\";\nexport {default as symbolAsterisk} from \"./symbol/asterisk.js\";\nexport {default as symbolCircle} from \"./symbol/circle.js\";\nexport {default as symbolCross} from \"./symbol/cross.js\";\nexport {default as symbolDiamond} from \"./symbol/diamond.js\";\nexport {default as symbolDiamond2} from \"./symbol/diamond2.js\";\nexport {default as symbolPlus} from \"./symbol/plus.js\";\nexport {default as symbolSquare} from \"./symbol/square.js\";\nexport {default as symbolSquare2} from \"./symbol/square2.js\";\nexport {default as symbolStar} from \"./symbol/star.js\";\nexport {default as symbolTriangle} from \"./symbol/triangle.js\";\nexport {default as symbolTriangle2} from \"./symbol/triangle2.js\";\nexport {default as symbolWye} from \"./symbol/wye.js\";\nexport {default as symbolTimes, default as symbolX} from \"./symbol/times.js\";\n\nexport {default as curveBasisClosed} from \"./curve/basisClosed.js\";\nexport {default as curveBasisOpen} from \"./curve/basisOpen.js\";\nexport {default as curveBasis} from \"./curve/basis.js\";\nexport {bumpX as curveBumpX, bumpY as curveBumpY} from \"./curve/bump.js\";\nexport {default as curveBundle} from \"./curve/bundle.js\";\nexport {default as curveCardinalClosed} from \"./curve/cardinalClosed.js\";\nexport {default as curveCardinalOpen} from \"./curve/cardinalOpen.js\";\nexport {default as curveCardinal} from \"./curve/cardinal.js\";\nexport {default as curveCatmullRomClosed} from \"./curve/catmullRomClosed.js\";\nexport {default as curveCatmullRomOpen} from \"./curve/catmullRomOpen.js\";\nexport {default as curveCatmullRom} from \"./curve/catmullRom.js\";\nexport {default as curveLinearClosed} from \"./curve/linearClosed.js\";\nexport {default as curveLinear} from \"./curve/linear.js\";\nexport {monotoneX as curveMonotoneX, monotoneY as curveMonotoneY} from \"./curve/monotone.js\";\nexport {default as curveNatural} from \"./curve/natural.js\";\nexport {default as curveStep, stepAfter as curveStepAfter, stepBefore as curveStepBefore} from \"./curve/step.js\";\n\nexport {default as stack} from \"./stack.js\";\nexport {default as stackOffsetExpand} from \"./offset/expand.js\";\nexport {default as stackOffsetDiverging} from \"./offset/diverging.js\";\nexport {default as stackOffsetNone} from \"./offset/none.js\";\nexport {default as stackOffsetSilhouette} from \"./offset/silhouette.js\";\nexport {default as stackOffsetWiggle} from \"./offset/wiggle.js\";\nexport {default as stackOrderAppearance} from \"./order/appearance.js\";\nexport {default as stackOrderAscending} from \"./order/ascending.js\";\nexport {default as stackOrderDescending} from \"./order/descending.js\";\nexport {default as stackOrderInsideOut} from \"./order/insideOut.js\";\nexport {default as stackOrderNone} from \"./order/none.js\";\nexport {default as stackOrderReverse} from \"./order/reverse.js\";\n", "export default x => () => x;\n", "export default function ZoomEvent(type, {\n  sourceEvent,\n  target,\n  transform,\n  dispatch\n}) {\n  Object.defineProperties(this, {\n    type: {value: type, enumerable: true, configurable: true},\n    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},\n    target: {value: target, enumerable: true, configurable: true},\n    transform: {value: transform, enumerable: true, configurable: true},\n    _: {value: dispatch}\n  });\n}\n", "export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n", "export function nopropagation(event) {\n  event.stopImmediatePropagation();\n}\n\nexport default function(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n", "import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {select, pointer} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport ZoomEvent from \"./event.js\";\nimport {Transform, identity} from \"./transform.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\n// Ignore right-click, since that should open the context menu.\n// except for pinch-to-zoom, which is sent as a wheel+ctrlKey event\nfunction defaultFilter(event) {\n  return (!event.ctrlKey || event.type === 'wheel') && !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    if (e.hasAttribute(\"viewBox\")) {\n      e = e.viewBox.baseVal;\n      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];\n    }\n    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];\n  }\n  return [[0, 0], [e.clientWidth, e.clientHeight]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta(event) {\n  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * (event.ctrlKey ? 10 : 1);\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchfirst,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0,\n      tapDistance = 10;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled, {passive: false})\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform, point, event) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform, point, event);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n          .event(event)\n          .start()\n          .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n          .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k, p, event) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    }, p, event);\n  };\n\n  zoom.scaleTo = function(selection, k, p, event) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p,\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    }, p, event);\n  };\n\n  zoom.translateBy = function(selection, x, y, event) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    }, null, event);\n  };\n\n  zoom.translateTo = function(selection, x, y, p, event) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p;\n      return constrain(identity.translate(p0[0], p0[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    }, p, event);\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, point, event) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).event(event).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).event(event).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args).event(event),\n              e = extent.apply(that, args),\n              p = point == null ? centroid(e) : typeof point === \"function\" ? point.apply(that, args) : point,\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args, clean) {\n    return (!clean && that.__zooming) || new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.active = 0;\n    this.sourceEvent = null;\n    this.extent = extent.apply(that, args);\n    this.taps = 0;\n  }\n\n  Gesture.prototype = {\n    event: function(event) {\n      if (event) this.sourceEvent = event;\n      return this;\n    },\n    start: function() {\n      if (++this.active === 1) {\n        this.that.__zooming = this;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        delete this.that.__zooming;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      var d = select(this.that).datum();\n      listeners.call(\n        type,\n        this.that,\n        new ZoomEvent(type, {\n          sourceEvent: this.sourceEvent,\n          target: zoom,\n          type,\n          transform: this.that.__zoom,\n          dispatch: listeners\n        }),\n        d\n      );\n    }\n  };\n\n  function wheeled(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, args).event(event),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = pointer(event);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won\u2019t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent(event);\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned(event, ...args) {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var currentTarget = event.currentTarget,\n        g = gesture(this, args, true).event(event),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = pointer(event, currentTarget),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation(event);\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved(event) {\n      noevent(event);\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.event(event)\n       .zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = pointer(event, currentTarget), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped(event) {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent(event);\n      g.event(event).end();\n    }\n  }\n\n  function dblclicked(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = pointer(event.changedTouches ? event.changedTouches[0] : event, this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, args), translateExtent);\n\n    noevent(event);\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0, event);\n    else select(this).call(zoom.transform, t1, p0, event);\n  }\n\n  function touchstarted(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.touches,\n        n = touches.length,\n        g = gesture(this, args, event.changedTouches.length === n).event(event),\n        started, i, t, p;\n\n    nopropagation(event);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = pointer(t, this);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;\n      else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;\n    }\n\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\n    if (started) {\n      if (g.taps < 2) touchfirst = p[0], touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved(event, ...args) {\n    if (!this.__zooming) return;\n    var g = gesture(this, args).event(event),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent(event);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = pointer(t, this);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended(event, ...args) {\n    if (!this.__zooming) return;\n    var g = gesture(this, args).event(event),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation(event);\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else {\n      g.end();\n      // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.\n      if (g.taps === 2) {\n        t = pointer(t, this);\n        if (Math.hypot(touchfirst[0] - t[0], touchfirst[1] - t[1]) < tapDistance) {\n          var p = select(this).on(\"dblclick.zoom\");\n          if (p) p.apply(this, arguments);\n        }\n      }\n    }\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  zoom.tapDistance = function(_) {\n    return arguments.length ? (tapDistance = +_, zoom) : tapDistance;\n  };\n\n  return zoom;\n}\n", "export {default as zoom} from \"./zoom.js\";\nexport {default as zoomTransform, identity as zoomIdentity, Transform as ZoomTransform} from \"./transform.js\";\n", "export * from \"d3-array\";\nexport * from \"d3-axis\";\nexport * from \"d3-brush\";\nexport * from \"d3-chord\";\nexport * from \"d3-color\";\nexport * from \"d3-contour\";\nexport * from \"d3-delaunay\";\nexport * from \"d3-dispatch\";\nexport * from \"d3-drag\";\nexport * from \"d3-dsv\";\nexport * from \"d3-ease\";\nexport * from \"d3-fetch\";\nexport * from \"d3-force\";\nexport * from \"d3-format\";\nexport * from \"d3-geo\";\nexport * from \"d3-hierarchy\";\nexport * from \"d3-interpolate\";\nexport * from \"d3-path\";\nexport * from \"d3-polygon\";\nexport * from \"d3-quadtree\";\nexport * from \"d3-random\";\nexport * from \"d3-scale\";\nexport * from \"d3-scale-chromatic\";\nexport * from \"d3-selection\";\nexport * from \"d3-shape\";\nexport * from \"d3-time\";\nexport * from \"d3-time-format\";\nexport * from \"d3-timer\";\nexport * from \"d3-transition\";\nexport * from \"d3-zoom\";\n", "(function() {\n  var get_logger, get_worker, read_logs;\n\n  get_logger = async function(session_id) {\n    var dir, file, worker;\n    if (session_id == null) {\n      session_id = session_id = new Date().toISOString();\n    }\n    dir = \"rhythmsense_log\";\n    file = session_id + \".jsons\";\n    worker = get_worker();\n    worker.postMessage({dir, file});\n    await new Promise(function(accept) {\n      return worker.addEventListener(\"message\", accept, {\n        once: true\n      });\n    });\n    return function(data) {\n      return worker.postMessage(data);\n    };\n  };\n\n  get_worker = function() {\n    //code = __WORKER_HACK__.toString().replace /^function .+\\{?|\\}$/g, ''\n    //console.log __WORKER_HACK__.toString()\n    //workerBlob = new Blob code, type: 'text/javascript'\n    //workerUrl = URL.createObjectURL workerBlob\n    return new Worker('dist/log_worker.js');\n  };\n\n  read_logs = async function*() {\n    var data, file, fs_root, handle, i, len, line, log_dir, name, ref, results, rows, x;\n    fs_root = (await navigator.storage.getDirectory());\n    log_dir = (await fs_root.getDirectoryHandle(\"rhythmsense_log\"));\n    ref = log_dir.entries();\n    results = [];\n    for await (x of ref) {\n      [name, handle] = x;\n      file = (await handle.getFile());\n      // TODO: Could be a lot faster\n      data = ((await file.text())).split('\\n');\n      rows = [];\n      for (i = 0, len = data.length; i < len; i++) {\n        line = data[i];\n        if (!line) {\n          continue;\n        }\n        rows.push(JSON.parse(line));\n      }\n      results.push((yield [name, rows]));\n    }\n    return results;\n  };\n\n  module.exports = {get_logger, read_logs};\n\n}).call(this);\n", "(function() {\n  var Plotly, d3, get_session_data, read_logs, render_bpm_graph;\n\n  Plotly = require(\"plotly.js-dist\");\n\n  d3 = require('d3');\n\n  ({read_logs} = require('./logging.coffee'));\n\n  get_session_data = function(log_events) {\n    var j, len, row, session, trial;\n    session = {\n      trials: []\n    };\n    for (j = 0, len = log_events.length; j < len; j++) {\n      row = log_events[j];\n      if (row.type === \"trial_starting\") {\n        trial = {\n          ...row,\n          hits: []\n        };\n        session.trials.push(trial);\n      }\n      if (row.type === \"trialstart\") {\n        trial = {...trial, ...row};\n      }\n      if (row.type === \"hit\") {\n        trial.hits.push(row.timestamp / 1000);\n      }\n    }\n    return session;\n  };\n\n  render_bpm_graph = function(session) {\n    var beats, config, data, durs, j, layout, len, max_bpm, meandurs, min_bpm, n_listening, n_muted, plot, ref, ref1, rel_bpm, rolling, s, trial, x;\n    ({n_listening, n_muted, min_bpm, max_bpm} = session.trials[0]);\n    data = [];\n    data.push({\n      x: [0, n_listening + n_muted],\n      y: [0, 0],\n      line: {\n        color: \"black\"\n      },\n      type: \"line\",\n      showlegend: false\n    });\n    data.push({\n      x: [n_listening, n_listening],\n      y: [-5, 5],\n      line: {\n        color: \"black\"\n      },\n      type: \"line\",\n      showlegend: false\n    });\n    ref = session.trials;\n    for (j = 0, len = ref.length; j < len; j++) {\n      trial = ref[j];\n      beats = trial.hits;\n      if (beats.length < 2) {\n        continue;\n      }\n      durs = beats.map(function(v, i) {\n        return 60 / (v - beats[i - 1]) - trial.bpm;\n      });\n      x = beats.slice(1).map(function(x) {\n        return x - beats[0];\n      });\n      x = (function() {\n        var results = [];\n        for (var k = 1, ref1 = x.length; 1 <= ref1 ? k <= ref1 : k >= ref1; 1 <= ref1 ? k++ : k--){ results.push(k); }\n        return results;\n      }).apply(this);\n      durs = durs.slice(1);\n      s = 0.8;\n      rolling = durs[0];\n      meandurs = durs.map(function(v) {\n        return rolling = s * rolling + (1 - s) * v;\n      });\n      rel_bpm = (trial.bpm - min_bpm) / (max_bpm - min_bpm);\n      data.push({\n        x: x,\n        y: durs,\n        type: \"scatter\",\n        name: \"BPM \" + trial.bpm.toFixed(1),\n        line: {\n          color: d3.interpolateViridis(rel_bpm)\n        }\n      });\n    }\n    layout = {\n      //showlegend: false\n      autosize: true,\n      xaxis: {\n        text: \"Beat number\"\n      },\n      yaxis: {\n        text: \"BPM error\"\n      }\n    };\n    config = {\n      responsive: true\n    };\n    // TODO: This currently overflows the legend and the axis texts.\n    // don't know why.\n    return plot = Plotly.react(\"bpm_graph\", data, layout, config);\n  };\n\n  (async function() {\n    var log, name, ref, select_session, sessions, sessions_el, y;\n    sessions = {};\n    sessions_el = document.querySelector(\"#session_selector\");\n    ref = read_logs();\n    for await (y of ref) {\n      [name, log] = y;\n      sessions[name] = get_session_data(log);\n      sessions_el.innerHTML += `<option value=\"${name}\">${name}</option>`;\n    }\n    select_session = function(name) {\n      return render_bpm_graph(sessions[name]);\n    };\n    select_session(Object.keys(sessions)[0]);\n    return sessions_el.addEventListener(\"change\", function(ev) {\n      return select_session(ev.target.value);\n    });\n  })();\n\n  //sessions = read_logs()\n//[name, log] = (await sessions.next()).value\n//render_bpm_graph get_session_data log\n\n}).call(this);\n"],
  "mappings": "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",
  "names": ["const", "root", "__webpack_require__", "let", "module", "i", "passes", "ascending", "a", "a", "ascending", "x", "left", "a", "right", "center", "number", "x", "index", "ascending", "number", "length", "blur", "y", "x", "start", "sum", "s", "count", "index", "array", "length", "reduce", "index", "j", "i", "sum", "index", "v", "count", "mean", "sum", "index", "v", "extent", "min", "max", "index", "index", "v", "x", "y", "key", "identity", "x", "identity", "groups", "reduce", "map", "values", "keyof", "index", "group", "index", "f", "c", "ascending", "a", "x", "reduce", "ascending", "key", "slice", "map", "constant", "x", "start", "count", "inc", "reverse", "ticks", "tickStep", "start", "count", "identity", "extent", "threshold", "x", "x0", "x1", "max", "step", "m", "a", "bin", "constant", "slice", "max", "index", "max", "maxIndex", "index", "min", "index", "min", "minIndex", "index", "array", "k", "left", "right", "m", "s", "ascending", "max", "quantile", "number", "numbers", "i", "index", "j", "min", "max", "c", "quantile", "min", "max", "c", "count", "sum", "index", "quantile", "flatten", "array", "index", "count", "pairs", "a", "range", "start", "ascending", "k", "c", "ascending", "min", "ascending", "min", "index", "ascending", "max", "index", "index", "shuffle", "array", "m", "sum", "index", "m", "length", "transpose", "index", "index", "array", "index", "map", "index", "reducer", "index", "set", "v", "set", "set", "init_src", "x", "init_identity", "x", "y", "number", "scale", "tickFormat", "k", "transform", "axis", "format", "range", "selection", "path", "init_identity", "init_src", "name", "type", "c", "set", "copy", "init_src", "name", "name", "document", "groups", "m", "group", "array", "x", "init_array", "empty", "array", "groups", "m", "group", "init_array", "filter", "groups", "m", "group", "init_filter", "datum", "x", "init_constant", "group", "groups", "m", "init_constant", "selection", "m", "merge", "init_merge", "groups", "m", "group", "ascending", "a", "groups", "m", "group", "init_sort", "groups", "m", "group", "groups", "m", "group", "name", "v", "name", "v", "name", "v", "name", "v", "v", "name", "create", "name", "create", "parseTypenames", "name", "m", "type", "window", "dispatch_default", "init_dispatch", "groups", "m", "group", "groups", "init_filter", "init_merge", "init_sort", "init_dispatch", "dispatch_default", "select_default", "init_select", "name", "select_default", "init_select", "id", "svg", "point", "selectAll_default", "array", "init_selectAll", "init_array", "init_src", "init_select", "init_selectAll", "root", "selection", "select_default", "init_src", "constant_default", "init_constant", "x", "type", "x", "y", "dispatch", "filter", "selection", "select_default", "c", "container", "dispatch", "s", "type", "event", "touch", "p0", "constant_default", "init_src", "init_constant", "init_src", "format", "m", "a", "s", "min", "max", "m2", "k", "y", "x", "a", "c", "k", "k", "s", "a", "cosh", "sinh", "init_src", "t1", "t2", "t3", "constant_default", "init_constant", "x", "a", "y", "constant_default", "init_color", "init_constant", "color", "init_src", "init_color", "y", "rgb", "start", "a", "c", "isNumberArray", "x", "a", "isNumberArray", "x", "c", "init_array", "a", "a", "init_number", "a", "c", "k", "zero", "a", "s", "i", "init_number", "a", "c", "constant_default", "isNumberArray", "init_src", "init_array", "init_number", "init_constant", "range", "a", "x", "init_color", "a", "a", "c", "degrees", "identity", "m", "identity", "s", "a", "scale", "init_number", "x", "p0", "b0", "b1", "s", "u", "hsl", "hue", "start", "s", "init_src", "init_color", "lab", "start", "a", "init_lab", "init_src", "init_color", "hcl", "hue", "start", "c", "init_src", "init_color", "cubehelix", "hue", "y", "start", "s", "init_cubehelix", "init_src", "init_color", "v", "i", "init_src", "init_array", "init_number", "init_lab", "init_cubehelix", "time", "now", "t0", "t1", "t2", "time", "time", "callback", "delay", "init_src", "name", "id", "index", "group", "get", "set", "self", "start", "init_src", "name", "empty", "interrupt_default", "name", "init_interrupt", "id", "name", "set", "get", "transition", "a", "c", "init_src", "attrRemove", "name", "attrRemoveNS", "attrConstant", "attrConstantNS", "attrFunction", "attrFunctionNS", "attr_default", "init_attr", "init_src", "name", "t0", "init_src", "id", "get", "id", "set", "get", "id", "set", "get", "id", "v", "set", "filter_default", "groups", "m", "group", "init_filter", "init_src", "init_transition", "merge_default", "transition", "m", "merge", "init_merge", "init_transition", "name", "id", "set", "on_default", "get", "init_on", "id", "remove_default", "init_remove", "select_default", "name", "id", "groups", "m", "group", "get", "init_select", "init_src", "init_transition", "selectAll_default", "name", "id", "groups", "m", "group", "children", "inherit", "get", "k", "init_selectAll", "init_src", "init_transition", "selection_default", "Selection", "init_selection", "init_src", "name", "styleRemove", "styleConstant", "styleFunction", "id", "remove", "set", "style_default", "init_style", "init_src", "name", "textConstant", "textFunction", "text_default", "init_text", "t0", "name", "groups", "m", "group", "inherit", "get", "init_transition", "id", "set", "groups", "name", "id", "init_transition", "init_src", "init_attr", "init_filter", "init_merge", "init_on", "init_remove", "init_select", "init_selectAll", "init_selection", "init_style", "init_text", "select_default", "selectAll_default", "filter_default", "merge_default", "selection_default", "on_default", "attr_default", "style_default", "text_default", "remove_default", "linear", "polyIn", "custom", "polyOut", "polyInOut", "x", "init_math", "init_math", "custom", "s", "backIn", "backOut", "backInOut", "init_math", "custom", "a", "s", "elasticIn", "p", "elasticOut", "elasticInOut", "init_src", "id", "transition_default", "name", "groups", "m", "group", "init_transition", "init_src", "init_selection", "init_src", "init_interrupt", "init_transition", "interrupt_default", "transition_default", "name", "root", "init_transition", "init_src", "init_selection", "init_transition", "constant_default", "init_constant", "x", "type", "selection", "mode", "dispatch", "init_event", "nopropagation", "noevent_default", "init_noevent", "number2", "defaultFilter", "svg", "defaultTouchable", "local", "empty", "extent", "filter", "brush", "group", "select_default", "selection", "event", "mode", "type", "E", "min", "max", "point", "noevent_default", "nopropagation", "constant_default", "init_src", "init_constant", "init_event", "init_noevent", "x", "y", "init_src", "abs", "pi", "halfPi", "tau", "max", "epsilon", "init_math", "range", "k", "a", "transpose", "chord", "groups", "x", "max", "tau", "x0", "init_math", "k", "pi", "tau", "epsilon", "x", "y", "x1", "y1", "x2", "y2", "x0", "y0", "da", "init_src", "slice", "init_array", "constant_default", "x", "init_constant", "ribbon", "s", "slice", "halfPi", "epsilon", "abs", "constant_default", "init_src", "init_array", "init_constant", "init_math", "init_src", "array", "slice", "init_array", "a", "init_ascending", "constant_default", "init_constant", "x", "c", "point", "x", "y", "pi", "a", "threshold", "extent", "v", "x", "y", "t0", "t1", "t2", "t3", "start", "index", "point", "constant_default", "slice", "a", "init_src", "init_array", "init_ascending", "init_constant", "x", "y", "k", "m", "threshold", "constant_default", "x0", "y0", "c", "transform", "coordinates", "slice", "init_src", "init_array", "init_constant", "init_src", "sum", "epsilon", "c", "t1", "t0", "u3", "B", "sum", "D", "epsilon", "u", "epsilon", "bc", "ca", "ab", "u", "abt", "bct", "cat", "_8", "_16", "fin", "fin2", "epsilon", "ab", "bc", "_8", "_8b", "_16", "_48", "fin", "epsilon", "x", "y", "left", "right", "median", "swap", "maxY", "id", "center", "k", "start", "n", "a", "b0", "p0", "c", "epsilon", "Path", "init_path", "x", "y", "x0", "y0", "x", "y", "init_path", "x", "y", "t1", "t2", "t3", "x1", "y1", "x2", "y2", "x3", "y3", "ab", "i", "a", "p0", "x0", "y0", "Path", "v", "c", "k", "collinear", "a", "c", "cross", "x", "y", "array", "tau", "init_path", "p0", "Path", "h", "t0", "t1", "t2", "init_src", "name", "object", "s", "length", "date", "seconds", "milliseconds", "c", "format", "object", "number", "m", "init_src", "init", "init", "text_default", "init", "init_text", "init", "text_default", "format", "csv", "tsv", "init_dsv", "init_src", "init_text", "init", "init", "type", "init", "text_default", "init_text", "init_src", "init_dsv", "init_text", "x", "y", "x", "y", "x0", "y0", "x1", "y1", "right", "bottom", "x", "y", "x0", "y0", "x1", "y1", "data_default", "init_data", "init_extent", "x0", "y0", "x1", "y1", "init_quad", "x", "y", "x0", "y0", "x1", "y1", "x2", "y2", "x3", "y3", "init_quad", "remove_default", "x", "y", "x0", "y0", "x1", "y1", "right", "bottom", "init_remove", "size_default", "init_size", "x0", "y0", "x1", "y1", "init_quad", "x0", "y0", "x1", "y1", "init_quad", "defaultX", "defaultY", "x", "y", "defaultX", "defaultY", "x0", "y0", "x1", "y1", "copy", "init_data", "init_extent", "init_remove", "init_size", "data_default", "remove_default", "size_default", "init_src", "constant_default", "x", "init_constant", "iterations", "constant_default", "k", "x0", "y0", "x1", "y1", "x", "y", "init_src", "init_constant", "index", "find", "id", "constant_default", "count", "iterations", "link", "k", "x", "y", "m", "i", "init_constant", "s", "x", "y", "iterations", "k", "angle", "name", "init_src", "constant_default", "x", "y", "node", "strength", "c", "x1", "x2", "init_src", "init_constant", "x", "y", "constant_default", "k", "init_constant", "x_default", "x", "constant_default", "init_x", "init_constant", "y_default", "y", "constant_default", "init_y", "init_constant", "init_src", "init_x", "init_y", "x", "x", "length", "s", "x", "exponent", "x", "exponent", "x", "identity_default", "x", "init_identity", "locale", "group", "identity_default", "map", "sign", "zero", "type", "format", "c", "length", "formatPrefix", "k", "value", "init_identity", "max", "init_src", "x", "pi", "halfPi", "sin", "epsilon", "epsilon2", "tau", "degrees", "radians", "abs", "cos", "pow", "init_math", "noop", "init_noop", "coordinates", "object", "phi", "radians", "cos", "sin", "k", "u", "v", "area_default", "object", "init_area", "init_src", "init_math", "init_noop", "noop", "tau", "cartesian", "spherical", "phi", "cos", "sin", "a", "k", "init_math", "phi", "range", "lambda0", "radians", "sign", "degrees", "abs", "lambda00", "phi00", "epsilon", "lambda1", "a", "x", "init_src", "init_area", "init_math", "phi", "radians", "cos", "sin", "x", "y", "lambda00", "phi00", "m", "v", "object", "epsilon2", "epsilon", "degrees", "init_src", "init_math", "init_noop", "noop", "constant_default", "x", "init_constant", "a", "x", "y", "phi", "abs", "pi", "tau", "cos", "sin", "x", "y", "k", "radians", "coordinates", "degrees", "init_math", "t0", "t1", "cos", "sin", "tau", "point", "epsilon", "center", "constant_default", "x", "y", "degrees", "c", "radians", "init_circle", "init_constant", "init_math", "buffer_default", "x", "y", "m", "noop", "init_buffer", "init_noop", "a", "abs", "epsilon", "init_math", "point", "compareIntersection", "n", "p0", "x", "epsilon", "start", "array", "a", "init_math", "point", "abs", "pi", "tau", "phi", "sin", "cos", "angle", "sum", "halfPi", "epsilon", "m", "lambda0", "phi0", "sinPhi0", "cosPhi0", "lambda1", "phi1", "sign", "k", "intersection", "epsilon2", "init_src", "init_math", "start", "buffer_default", "point", "phi", "m", "a", "halfPi", "epsilon", "init_buffer", "init_math", "init_src", "lambda0", "phi0", "lambda1", "phi1", "pi", "abs", "epsilon", "halfPi", "cosPhi0", "sin", "cos", "phi", "init_math", "circle_default", "cos", "radians", "abs", "epsilon", "phi", "point2", "v", "c", "pi", "intersect", "a", "c2", "A", "B", "u", "t2", "lambda0", "lambda1", "phi0", "phi1", "delta", "code", "init_circle", "init_math", "a", "x0", "y0", "x1", "y1", "t0", "t1", "x0", "y0", "x1", "y1", "x", "y", "a", "abs", "epsilon", "compareIntersection", "ca", "buffer_default", "point", "ring", "m", "b0", "b1", "visible", "linePoint", "v", "init_math", "init_buffer", "init_src", "extent_default", "x0", "y0", "x1", "y1", "init_extent", "noop", "phi", "radians", "lambda0", "sinPhi0", "sin", "cosPhi0", "cos", "abs", "x", "y", "object", "init_src", "init_math", "init_noop", "a", "point", "coordinates", "ab", "epsilon2", "radians", "contains_default", "object", "init_contains", "init_math", "y0", "y1", "y", "range", "epsilon", "x", "x0", "x1", "X1", "X0", "Y1", "Y0", "X", "Y", "graticule", "abs", "coordinates", "init_src", "init_math", "interpolate_default", "a", "x0", "radians", "y0", "x1", "y1", "cos", "sin", "k", "B", "A", "x", "y", "degrees", "init_interpolate", "init_math", "identity_default", "init_identity", "x", "areaRingStart", "areaStream", "areaPointFirst", "x", "y", "areaPoint", "x0", "y0", "areaRingSum", "areaRingEnd", "areaSum", "area_default", "init_area", "init_src", "init_math", "init_noop", "noop", "abs", "boundsPoint", "x", "y", "x0", "y0", "boundsStream", "bounds_default", "init_bounds", "init_noop", "noop", "centroidPoint", "x", "y", "X0", "Y0", "Z0", "centroidLineStart", "centroidStream", "x0", "y0", "X1", "Y1", "Z1", "centroidLineEnd", "centroidRingStart", "centroidRingEnd", "x00", "y00", "X2", "Y2", "Z2", "centroid_default", "init_centroid", "init_math", "init_math", "init_noop", "x", "y", "tau", "noop", "lengthPointFirst", "x", "y", "lengthStream", "lengthPoint", "x00", "x0", "y00", "y0", "lengthSum", "init_src", "init_math", "init_noop", "noop", "length", "append", "appendRound", "k", "init_string", "x", "y", "s", "projection", "path", "object", "area_default", "bounds_default", "centroid_default", "identity_default", "init_path", "init_identity", "init_area", "init_bounds", "init_centroid", "init_string", "s", "init_transform", "x", "y", "projection", "object", "bounds_default", "extent", "k", "x", "y", "init_bounds", "x", "y", "x0", "y0", "lambda0", "b0", "x1", "y1", "lambda1", "b1", "a", "c", "m", "lambda2", "abs", "epsilon", "x2", "y2", "lambda00", "x00", "y00", "point", "linePoint", "phi", "init_math", "init_transform", "cos", "radians", "x", "y", "k", "transform", "cos", "sin", "a", "phi", "x0", "y0", "x1", "y1", "identity_default", "projection", "point", "radians", "degrees", "circle_default", "extent", "object", "center", "init_circle", "init_identity", "init_math", "init_transform", "phi0", "phi1", "pi", "m", "radians", "degrees", "init_math", "phi0", "cosPhi0", "cos", "phi", "sin", "x", "y", "init_math", "y0", "y1", "sin", "abs", "epsilon", "c", "x", "y", "cos", "pi", "init_math", "x", "y", "point", "coordinates", "k", "epsilon", "extent", "object", "init_math", "scale", "x", "y", "cos", "k", "sin", "angle", "c", "cc", "init_math", "init_math", "init_math", "c", "sin", "phi", "halfPi", "tau", "m", "center", "scale", "x0", "y0", "x1", "y1", "k", "pi", "init_math", "x", "y", "y", "halfPi", "y0", "y1", "cos", "sin", "pow", "x", "epsilon", "abs", "pi", "init_math", "phi", "y0", "y1", "cos", "sin", "abs", "epsilon", "x", "y", "pi", "init_math", "phi", "sin", "cos", "init_math", "x", "y", "abs", "epsilon2", "x", "y", "cos", "k", "sin", "init_math", "identity_default", "k", "ca", "x0", "y0", "x1", "y1", "kx", "ky", "transform", "x", "y", "projection", "radians", "sin", "cos", "degrees", "extent", "object", "init_identity", "init_transform", "init_math", "phi", "phi2", "init_math", "x", "y", "abs", "epsilon", "x", "y", "cos", "sin", "epsilon", "init_math", "x", "y", "cos", "k", "sin", "init_math", "phi", "halfPi", "m", "center", "init_math", "x", "y", "init_src", "init_area", "init_circle", "init_extent", "init_contains", "init_interpolate", "init_path", "init_identity", "init_transform", "a", "children", "x", "c", "y", "root", "left", "right", "x0", "x1", "count", "sum", "children", "init_count", "each_default", "index", "init_each", "children", "index", "children", "index", "find_default", "index", "init_find", "sum", "children", "init_sum", "sort_default", "init_sort", "path_default", "start", "k", "a", "c", "init_path", "root", "iterator_default", "children", "init_iterator", "children", "root", "init_count", "init_each", "init_find", "init_sum", "init_sort", "init_path", "init_iterator", "each_default", "find_default", "sort_default", "path_default", "iterator_default", "constant_default", "x", "init_constant", "lcg_default", "s", "a", "c", "m", "init_lcg", "array_default", "x", "array", "m", "init_array", "lcg_default", "B", "a", "x1", "y1", "x2", "y2", "c", "x3", "y3", "a2", "a3", "b2", "b3", "c2", "c3", "ab", "A", "C", "init_array", "init_lcg", "a", "c", "x", "a2", "y", "b2", "ab", "Node", "array_default", "aa", "ca", "k", "lcg_default", "init_array", "init_lcg", "defaultRadius", "root", "lcg_default", "x", "constant_default", "k", "children", "init_constant", "init_lcg", "round_default", "init_round", "x0", "y0", "x1", "y1", "k", "root", "round_default", "dy", "x0", "y0", "x1", "y1", "x", "init_round", "id", "path", "root", "d", "i", "node", "x", "k", "defaultSeparation", "a", "v", "children", "root", "left", "right", "bottom", "s", "kx", "ky", "x", "x0", "y0", "x1", "y1", "k", "x0", "y0", "x1", "y1", "custom", "x", "root", "round_default", "x0", "y0", "x1", "y1", "x", "constant_default", "init_round", "init_constant", "x0", "y0", "x1", "y1", "sum", "i", "k", "x0", "y0", "x1", "y1", "custom", "x0", "y0", "x1", "y1", "m", "x", "init_src", "area_default", "a", "init_area", "centroid_default", "x", "y", "a", "c", "k", "init_centroid", "a", "c", "init_cross", "a", "indexes", "init_cross", "contains_default", "point", "x", "y", "x0", "y0", "x1", "y1", "init_contains", "length_default", "init_length", "init_src", "init_area", "init_centroid", "init_contains", "init_length", "min", "max", "min", "max", "x", "y", "sum", "k", "c", "x", "v", "u", "X", "Y", "x", "B", "y", "sign", "s", "k", "k", "a", "x", "a", "a", "u", "B", "s", "k", "init_lcg", "init_src", "init_lcg", "range", "index", "range", "scale", "init_src", "scale", "reverse", "start", "range", "copy", "init_src", "x", "init_constant", "number", "x", "init_number", "identity", "x", "normalize", "a", "range", "i", "transformer", "transform", "piecewise", "scale", "y", "number", "u", "init_src", "init_constant", "init_number", "start", "count", "tickStep", "init_src", "scale", "count", "start", "linear", "init_linear", "init_src", "identity", "scale", "x", "number", "init_identity", "init_linear", "init_number", "nice", "interval", "x0", "x1", "init_nice", "x", "k", "transform", "scale", "count", "u", "v", "nice", "log", "transformer", "init_src", "init_nice", "c", "x", "transform", "scale", "transformer", "init_linear", "exponent", "x", "transform", "scale", "identity", "pow", "transformer", "sqrt", "init_linear", "x", "range", "scale", "y", "number", "init_radial", "init_linear", "init_number", "quantile", "range", "scale", "x", "y", "ascending", "init_quantile", "init_src", "x0", "x1", "range", "scale", "x", "y", "init_quantize", "init_src", "init_linear", "range", "scale", "x", "y", "init_src", "count", "interval", "date", "start", "range", "t0", "t1", "init_interval", "init_interval", "date", "start", "k", "init_duration", "init_interval", "init_duration", "date", "start", "init_interval", "init_duration", "date", "start", "init_interval", "init_duration", "date", "start", "init_interval", "init_duration", "date", "start", "date", "start", "init_interval", "init_duration", "init_interval", "date", "start", "init_interval", "date", "start", "k", "ticks", "start", "count", "reverse", "interval", "step", "tickStep", "init_ticks", "init_src", "init_duration", "init_src", "init_interval", "init_ticks", "date", "y", "m", "locale", "formatYear", "formats", "c", "pad", "format", "sign", "length", "s", "name", "init_locale", "init_src", "defaultLocale", "locale", "init_defaultLocale", "init_locale", "date", "init_defaultLocale", "date", "init_defaultLocale", "init_src", "init_defaultLocale", "init_locale", "number", "ticks", "second", "format", "scale", "formatYear", "tickFormat", "date", "y", "interval", "count", "nice", "init_src", "init_nice", "init_src", "transformer", "x0", "x1", "t0", "t1", "transform", "identity", "scale", "x", "range", "copy", "init_src", "init_linear", "identity", "scale", "x", "ascending", "quantile", "init_src", "transformer", "x0", "x1", "x2", "s", "t0", "t1", "t2", "identity", "transform", "scale", "x", "range", "copy", "init_src", "init_linear", "init_src", "init_identity", "init_linear", "init_radial", "init_quantile", "init_quantize", "init_src", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "cubehelix_default", "init_cubehelix", "init_src", "c", "init_src", "x", "c", "init_src", "range", "init_src", "init_cubehelix", "constant_default", "x", "constant", "init_constant", "acos", "x", "pi", "asin", "halfPi", "abs", "atan2", "cos", "max", "min", "sin", "sqrt", "epsilon", "tau", "init_math", "init_path", "init_src", "x0", "y0", "x1", "y1", "x2", "y2", "x3", "y3", "x32", "y32", "epsilon", "sqrt", "x00", "y00", "D", "max", "constant_default", "path", "halfPi", "da", "abs", "tau", "cos", "sin", "min", "t0", "t1", "p0", "asin", "pi", "acos", "atan2", "a", "init_constant", "init_math", "init_path", "array_default", "x", "slice", "init_array", "init_linear", "x", "y", "x", "y", "line_default", "x", "y", "constant_default", "path", "array_default", "init_line", "init_array", "init_constant", "init_linear", "init_path", "area_default", "x0", "y0", "y1", "x1", "constant_default", "path", "x", "y", "k", "array_default", "line_default", "init_area", "init_array", "init_constant", "init_linear", "init_line", "init_path", "a", "init_descending", "identity_default", "init_identity", "identity_default", "sort", "constant_default", "tau", "array_default", "k", "sum", "index", "da", "v", "i", "j", "init_array", "init_constant", "init_descending", "init_identity", "init_math", "radial", "init_radial", "init_linear", "a", "c", "line_default", "init_radial", "init_line", "a", "area_default", "c", "x0", "x1", "y0", "y1", "init_radial", "init_area", "x", "y", "x", "y", "p0", "link", "x", "y", "path", "slice", "s", "constant_default", "init_link", "init_array", "init_constant", "init_path", "sqrt3", "init_math", "sqrt", "min", "u", "circle_default", "init_circle", "init_math", "sqrt", "pi", "tau", "cross_default", "init_cross", "init_math", "sqrt", "init_math", "sqrt", "y", "x", "init_math", "sqrt", "init_math", "sqrt", "min", "init_math", "sqrt", "x", "init_math", "sqrt", "init_math", "sin", "pi", "tau", "cos", "sqrt", "x", "y", "a", "c", "s", "sqrt3", "init_math", "sqrt", "y", "sqrt3", "init_math", "sqrt", "s", "u", "c", "a", "init_math", "sqrt", "x0", "y0", "x1", "y1", "x2", "y2", "init_math", "sqrt", "min", "Symbol", "type", "path", "constant_default", "circle_default", "init_constant", "init_path", "init_circle", "init_cross", "cross_default", "noop_default", "init_noop", "point", "x", "y", "basis_default", "init_basis", "basisClosed_default", "init_basisClosed", "init_noop", "init_basis", "noop_default", "x", "y", "point", "init_basis", "x", "y", "x0", "y0", "point", "init_basis", "x", "y", "x0", "y0", "custom", "beta", "point", "x", "y", "custom", "tension", "init_noop", "noop_default", "x", "y", "point", "custom", "tension", "x", "y", "point", "custom", "tension", "point", "x", "y", "x1", "y1", "x2", "y2", "epsilon", "a", "m", "init_math", "custom", "alpha", "init_noop", "noop_default", "x", "y", "point", "custom", "alpha", "x", "y", "point", "custom", "alpha", "init_noop", "noop_default", "x", "y", "sign", "x", "x2", "y2", "point", "t0", "t1", "x0", "y0", "x1", "y1", "y", "x", "m", "a", "y", "x", "y", "x1", "m", "none_default", "init_none", "constant_default", "none_default", "array_default", "init_array", "init_constant", "init_none", "m", "y", "m", "init_diverging", "m", "y", "m", "y", "k", "none_default", "a", "init_none", "ascending_default", "sum", "none_default", "a", "s", "v", "init_ascending", "init_none", "descending_default", "ascending_default", "init_descending", "init_ascending", "sum", "top", "bottom", "init_ascending", "none_default", "init_reverse", "init_none", "init_src", "init_area", "init_line", "init_link", "init_circle", "init_cross", "init_basisClosed", "init_basis", "init_linear", "init_diverging", "init_ascending", "init_descending", "init_none", "init_reverse", "constant_default", "init_constant", "x", "type", "transform", "dispatch", "init_event", "k", "x", "y", "identity", "init_transform", "point", "nopropagation", "noevent_default", "init_noevent", "defaultFilter", "defaultExtent", "identity", "defaultTouchable", "transform", "extent", "zoom_default", "filter", "selection", "point", "k", "t0", "p0", "scale", "x", "y", "transition", "a", "type", "select_default", "noevent_default", "v", "x0", "y0", "nopropagation", "event", "t1", "constant_default", "init_zoom", "init_src", "init_constant", "init_event", "init_transform", "init_noevent", "init_src", "init_zoom", "init_transform", "area_default", "ascending", "csv", "basis_default", "basisClosed_default", "linear", "extent", "x_default", "y_default", "circle_default", "extent_default", "contains_default", "identity_default", "interpolate_default", "cubehelix_default", "lab", "line_default", "link", "map", "centroid_default", "length_default", "quantile", "range", "identity", "log", "pow", "sqrt", "scheme", "select_default", "selectAll_default", "ascending_default", "descending_default", "none_default", "Symbol", "cross_default", "text_default", "tickStep", "defaultLocale", "tsv", "zoom_default", "init_src", "name", "x", "s", "x", "v", "k", "ref1", "log", "name", "y"]
}
